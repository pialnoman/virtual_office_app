{"version":3,"sources":["pages/sign-up/signUp.js","assets/icons/Showpass-show.svg","assets/icons/Hide.svg"],"names":["Yup","shape","first_name","min","max","required","password","email","Register","history","useHistory","_useState","useState","_useState2","_slicedToArray","_useSnackbar","useSnackbar","enqueueSnackbar","_useState3","closeSnackbar","_useState4","submitted","setSubmitted","_useState5","_useState6","avatar","setAvatar","_useState7","_useState8","isRevealPwd","setIsRevealPwd","_useState9","_useState10","isRevealConfPwd","setIsRevealConfPwd","_useState11","_useState12","image","setImage","_useState13","_useState14","responseErrors","setResponseErrors","formSignUp","useFormik","initialValues","last_name","phone","confirm_pass","validateOnChange","validateOnBlur","validate","values","errors","RegExp","test","String","length","onSubmit","console","log","formData","FormData","_i","_Object$entries","Object","entries","_Object$entries$_i","key","value","append","undefined","PUBLIC_FORM_API","post","then","res","data","success","status","push","pathname","state","registration","_i2","_Object$entries2","_Object$entries2$_i","concat","index","variant","catch","err","_jsx","_Fragment","children","className","_jsxs","src","htmlFor","id","type","onChange","event","file","target","files","URL","createObjectURL","Array","from","map","error","idx","CForm","CLabel","CInput","name","handleChange","touched","style","color","PhoneInput","isValid","country","iso2","inputProps","autoFocus","onlyCountries","inputClass","countryCodeEditable","setFieldValue","title","hidePwdImg","showPwdImg","onClick","prevState","onKeyPress","handleSubmit","LinearProgress","CButton","Link","to"],"mappings":"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","file":"static/js/11.686fd960.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./signUp.css\";\r\nimport hidePwdImg from '../../assets/icons/Showpass-show.svg';\r\nimport showPwdImg from '../../assets/icons/Hide.svg';\r\nimport {\r\n  CForm,\r\n  CLabel,\r\n  CButton,\r\n  CInput,\r\n} from \"@coreui/react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { PUBLIC_FORM_API } from \"../../Config\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { LinearProgress } from \"@mui/material\";\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  first_name: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n  password: Yup.string()\r\n    .min(8, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n  email: Yup.string().email('Invalid email').required('Required'),\r\n});\r\n\r\nconst Register = () => {\r\n  let history = useHistory()\r\n  const [value, setValue] = useState()\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const [submitted,setSubmitted]=useState(false)\r\n  const [avatar, setAvatar] = useState()\r\n  const [isRevealPwd, setIsRevealPwd] = useState(false);\r\n  const [isRevealConfPwd, setIsRevealConfPwd] = useState(false);\r\n  const [image, setImage] = useState()\r\n  const [responseErrors,setResponseErrors]=useState({})\r\n  const validateSignUpForm = (values) => {\r\n    const errors = {};\r\n    if (!values.first_name) errors.first_name = \"Name is required!\"\r\n    if (!values.email) errors.email = \"Email is required!\"\r\n    if (!values.phone) errors.phone = \"Phone number is required!\"\r\n    if (values.phone && !new RegExp('^[0-9]+$').test(values.phone)) errors.phone=\"Invalid Phone Number\"\r\n    if (String(values.password).length<8) errors.password = \"Password is too short\"\r\n    if (!values.password) {errors.password = \"Password is required!\"}\r\n    //else if(values.password != values.confirm_pass) {errors.confirm_pass = \"Password did not match\"; errors.password = \"Confirm your password\"}\r\n    if (values.password != values.confirm_pass) errors.confirm_pass = \"Password did not match\"\r\n    return errors;\r\n  }\r\n  const sign_up = (values) => {\r\n    console.log(values)\r\n    setSubmitted(true)\r\n    let formData = new FormData();\r\n    for (const [key, value] of Object.entries(formSignUp.values)) {\r\n      if (key != 'confirm_pass') {\r\n        formData.append(key, value)\r\n      }\r\n    }\r\n    if(image!=null && image!=undefined){\r\n      formData.append('profile_pic',image)\r\n    }\r\n    PUBLIC_FORM_API.post('auth/register/', formData).then((res) => {\r\n      setSubmitted(false)\r\n      if (res.data.success == 'True' && res.status == 201) {\r\n        history.push({ pathname: '/login', state: { registration: true } })\r\n      }\r\n      else if(res.data.success == 'False' && res.status == 201 && res.data.errors){\r\n        console.log(res.data.errors)\r\n        // setResponseErrors(res.data.errors)\r\n        setResponseErrors(res.data.errors)\r\n        for (const [key, value] of Object.entries(res.data.errors)) {\r\n          console.log(`${key}: ${value}`);\r\n          // enqueueSnackbar(err.response.data.message,{variant:\"warning\"})\r\n          for (let index=0;index<value.length;index++) {\r\n            enqueueSnackbar(value[index],{variant:\"warning\"})\r\n          }\r\n        }\r\n        \r\n      }\r\n    }).catch(err=>{\r\n      setSubmitted(false)\r\n      console.log(err)\r\n    })\r\n    \r\n  }\r\n  const reset_form = () => {\r\n    formSignUp.resetForm()\r\n  }\r\n  const onImageChange = (file) => {\r\n    setAvatar(URL.createObjectURL(file))\r\n    setImage(file)\r\n  }\r\n  const formSignUp = useFormik({\r\n    initialValues: {\r\n      first_name: '',\r\n      last_name: '',\r\n      email: '',\r\n      phone: '',\r\n      password: '',\r\n      confirm_pass: ''\r\n    },\r\n    //validationSchema:{SignupSchema},\r\n    // validationSchema: {SignupSchema},\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validate: validateSignUpForm,\r\n    onSubmit: sign_up\r\n  })\r\n  \r\n  const handleKeyPress=(event)=>{\r\n    if(event.key == 'Enter'){\r\n      formSignUp.handleSubmit()\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"register-page\">\r\n        <div className=\"container\">\r\n          <h3 className=\"page-header\">Register</h3>\r\n          {/**img uplaod div */}\r\n\r\n          <div className=\"seller-pro-pic-holder\">\r\n            <div className=\"seller-profile-pic-div\">\r\n              <img src={avatar ? avatar : \"avatars/user-avatar-default.png\"} className=\"avatar-img\" />\r\n            </div>\r\n            <label htmlFor=\"propic\" className={image ? \"pro-img-up-btn mb-0 remove-img\" : \"pro-img-up-btn mb-0\"}>\r\n              {/* <!-- propic --> */}\r\n              <input\r\n                id=\"propic\"\r\n                className=\"form-control form-control-md\"\r\n                type=\"file\"\r\n                onChange={(event) => onImageChange(event.target.files[0])}\r\n              />\r\n            </label>\r\n          </div>\r\n          \r\n          {/**submit form */}\r\n          <div className=\"custom-form-holder\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-10 offset-md-1 col-sm-12 offset-sm-0\">\r\n              {Array.from(responseErrors).map((error,idx)=>{\r\n                <p key={idx}>{error}</p>\r\n              })}\r\n                <CForm className=\"custom-form-sign\">\r\n                  <div className=\"row\">\r\n                    {/**first name */}\r\n                    <div className=\"col-md-6 col-sm-12 col-12 mb-3\">\r\n                      <CLabel htmlFor=\"firstName\" className=\"custom-label-2\">\r\n                        First Name *\r\n                      </CLabel>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        id=\"first_name\"\r\n                        name=\"first_name\"\r\n                        value={formSignUp.values.first_name}\r\n                        onChange={formSignUp.handleChange}\r\n                        aria-describedby=\"fnHelp\"\r\n                        className=\"custom-formgroup-2\"\r\n                      />\r\n                      {formSignUp.touched.first_name && formSignUp.errors.first_name && <small style={{ color: 'red' }}>{formSignUp.errors.first_name}</small>}\r\n                    </div>\r\n                    {/**last name */}\r\n                    <div className=\"col-md-6 col-sm-12 col-12 mb-3\">\r\n                      <CLabel htmlFor=\"lastName\" className=\"custom-label-2\">\r\n                        Last Name\r\n                      </CLabel>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        id=\"last_name\"\r\n                        name=\"last_name\"\r\n                        value={formSignUp.values.last_name}\r\n                        onChange={formSignUp.handleChange}\r\n                        aria-describedby=\"lnHelp\"\r\n                        className=\"custom-formgroup-2\"\r\n                      />\r\n                    </div>\r\n                    {/**Email */}\r\n                    <div className=\"col-md-6 col-sm-12 col-12 mb-3\">\r\n                      <CLabel htmlFor=\"email\" className=\"custom-label-2\">\r\n                        Email *\r\n                      </CLabel>\r\n                      <CInput\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={formSignUp.values.email}\r\n                         onChange={formSignUp.handleChange}\r\n                        aria-describedby=\"emailHelp\"\r\n                        className=\"custom-formgroup-2\"\r\n                      />\r\n                      {responseErrors.email!=undefined && <small style={{ color: 'red' }}>{responseErrors.email}</small>}\r\n                      {formSignUp.touched.email && formSignUp.errors.email && <small style={{ color: 'red' }}>{formSignUp.errors.email}</small>}\r\n                    </div>\r\n                    {/**Phone */}\r\n                    <div className=\"col-md-6 col-sm-12 col-12 mb-3\">\r\n                      <CLabel htmlFor=\"phone\" className=\"custom-label-2\">\r\n                        Phone\r\n                      </CLabel>\r\n                      {/* <CInput\r\n                        type=\"tel\"\r\n                        id=\"phone\"\r\n                        name=\"phone\"\r\n                        placeholder=\"01XXX XXX XXX\"\r\n                        value={formSignUp.values.phone}\r\n                        onChange={(event)=>{formSignUp.handleChange(event)}}\r\n                        aria-describedby=\"phoneHelp\"\r\n                        className=\"custom-formgroup-2\"\r\n                      /> */}\r\n                      {/* <PhoneInput flags={flags} value={value} onChange={setValue}/> */}\r\n                      <PhoneInput\r\n                        // isValid={(value, country) => {\r\n                        //   console.log('value',value.length)\r\n                        //   let error_text=''\r\n                        //   switch(country.iso2){\r\n                        //     case 'bd':\r\n                        //       if(value.length<11 || value.length>13){\r\n                        //         // console.log('value',value)\r\n                        //         error_text= 'Invalid value: '+value+', '+country.name;\r\n                        //       }\r\n                        //       break\r\n                        //   }\r\n                        //   return error_text\r\n                        // }}\r\n                        isValid={(value, country) => {\r\n                          if (country.iso2=='bd' && value.length!=13) {\r\n                            return 'Invalid value: '+value+', '+country.name;\r\n                          }\r\n                          else if (country.iso2=='us' && value.length!=11) {\r\n                            return 'Invalid value: '+value+', '+country.name;\r\n                          } else {\r\n                            return true;\r\n                          }\r\n                        }}\r\n                        inputProps={{\r\n                          name: 'phone',\r\n                          required: true,\r\n                          autoFocus: false\r\n                        }}\r\n                        onlyCountries={['bd', 'us']}\r\n                        inputClass=\"w-100 custom-formgroup-2\"\r\n                        countryCodeEditable={false}\r\n                        // inputStyle=\"width:100% !important;\"\r\n                        country={'bd'}\r\n                        value={formSignUp.values.phone}\r\n                        onChange={phone => {formSignUp.setFieldValue('phone',phone)}}\r\n                      />\r\n                      {responseErrors.phone!=undefined && !formSignUp.errors.phone && formSignUp.values.phone.length>0 && <small style={{ color: 'red' }}>{responseErrors.phone}</small>}\r\n                      {formSignUp.touched.phone && formSignUp.errors.phone && <small style={{ color: 'red' }}>{formSignUp.errors.phone}</small>}\r\n                    </div>\r\n                    {/**password */}\r\n                    <div className=\"col-md-6 col-sm-12 mb-3\">\r\n                      <CLabel\r\n                        htmlFor=\"exampleInputPassword1\"\r\n                        className=\"custom-label-2\"\r\n                      >\r\n                        Password * (<small style={{ color: 'black' }}>Minimum 8 characters</small>)\r\n                      </CLabel>\r\n                      <div className=\"password-container\">\r\n                        <CInput\r\n                          type={isRevealPwd ? \"text\" : \"password\"}\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          value={formSignUp.values.password}\r\n                          onChange={formSignUp.handleChange}\r\n                          className=\"custom-formgroup-2\"\r\n                        />\r\n                        {formSignUp.touched.password && formSignUp.errors.password && <small style={{ color: 'red' }}>{formSignUp.errors.password}</small>}\r\n                        <img className=\"pwd-container-img\"\r\n                          title={isRevealPwd ? \"Hide Confirm password\" : \"Show Confirm password\"}\r\n                          src={isRevealPwd ? hidePwdImg : showPwdImg}\r\n                          onClick={() => setIsRevealPwd(prevState => !prevState)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    {/*confirm password */}\r\n                    <div className=\"col-md-6 col-sm-12 mb-3\">\r\n                      <CLabel\r\n                        htmlFor=\"confirmPass\"\r\n                        className=\"custom-label-2\"\r\n                      >\r\n                        Confirm Password\r\n                      </CLabel>\r\n                      <div className=\"password-container\">\r\n                        <CInput\r\n                          type={isRevealConfPwd ? \"text\" : \"password\"}\r\n                          id=\"confirm_pass\"\r\n                          name=\"confirm_pass\"\r\n                          value={formSignUp.values.confirm_pass}\r\n                          onChange={formSignUp.handleChange}\r\n                          className=\"custom-formgroup-2\"\r\n                          onKeyPress={handleKeyPress}\r\n                        />\r\n                        {formSignUp.touched.confirm_pass && formSignUp.errors.confirm_pass && <small style={{ color: 'red' }}>{formSignUp.errors.confirm_pass}</small>}\r\n                        <img className=\"pwd-container-img\"\r\n                          title={isRevealConfPwd ? \"Hide password\" : \"Show password\"}\r\n                          src={isRevealConfPwd ? hidePwdImg : showPwdImg}\r\n                          onClick={() => setIsRevealConfPwd(prevState => !prevState)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    {/*submit button */}\r\n                    <div className=\"sign-holder\">\r\n                      {submitted?<LinearProgress/>:<CButton type=\"button\" onClick={formSignUp.handleSubmit} className=\"submit-button-s\">\r\n                        Sign up\r\n                      </CButton>}\r\n                    </div>\r\n                    {/**Go to sign in */}\r\n                    <div className=\"mb-4 mt-3\">\r\n                      <h5 className=\"final-footer\"><span className=\"dum-text\">Already have an account?</span><Link className=\"registration-link\" to=\"/\">Sign in</Link></h5>\r\n                    </div>\r\n                  </div>\r\n                </CForm>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Register;\r\n","export default __webpack_public_path__ + \"static/media/Showpass-show.ab5421f5.svg\";","export default __webpack_public_path__ + \"static/media/Hide.31c620fc.svg\";"],"sourceRoot":""}