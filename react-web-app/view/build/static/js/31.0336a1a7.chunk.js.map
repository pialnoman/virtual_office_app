{"version":3,"sources":["pages/release-notes/releaseNotes.js","../node_modules/lodash/_baseUniq.js","../node_modules/lodash/uniqBy.js","../node_modules/lodash/_arrayIncludes.js","../node_modules/lodash/_baseIndexOf.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/_baseIsNaN.js","../node_modules/lodash/_strictIndexOf.js","../node_modules/lodash/_arrayIncludesWith.js","../node_modules/lodash/_createSet.js","../node_modules/lodash/noop.js"],"names":["ReleaseNotes","_jsxs","_Fragment","children","_jsx","className","SetCache","require","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","module","exports","array","iteratee","comparator","index","includes","length","isCommon","result","seen","set","outer","value","computed","seenIndex","push","baseIteratee","baseUniq","baseIndexOf","baseFindIndex","baseIsNaN","strictIndexOf","fromIndex","predicate","fromRight","Set","noop","values"],"mappings":"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","file":"static/js/31.0336a1a7.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./releaseNotes.css\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CContainer,\r\n  CRow,\r\n  CDataTable,\r\n  CBadge,\r\n  CButton,\r\n} from \"@coreui/react\";\r\nimport uniqBy from \"lodash/uniqBy\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API } from \"../../Config\";\r\n\r\nconst ReleaseNotes = () => {\r\n  return (\r\n    <>\r\n        <h1>Release Notes</h1>\r\n        <h2>5 July 2023</h2>\r\n        <ul className=\"release-list\">\r\n        <li className=\"release-item\">\r\n        <span className=\"version\">1</span>\r\n        <span className=\"description\">The year showing in the footer will now change dynamically.</span>\r\n        </li>\r\n        <li className=\"release-item\">\r\n        <span className=\"version\">2</span>\r\n        <span className=\"description\">Footer will now link to a <b>Release Notes</b> page, which will contain all the information about the last update.</span>\r\n        </li>\r\n        <li className=\"release-item\">\r\n        <span className=\"version\">3</span>\r\n        <span className=\"description\">Users can't upload profile pictures that are greater than 100KB.</span>\r\n        </li>\r\n        <li className=\"release-item\">\r\n        <span className=\"version\">4</span>\r\n        <span className=\"description\">Users are requested to change their profile pictures for data effeciency.</span>\r\n        </li>\r\n  </ul>\r\n    </>\r\n  );\r\n};\r\nexport default ReleaseNotes;\r\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n"],"sourceRoot":""}