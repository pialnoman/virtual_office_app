{"version":3,"sources":["pages/evms-view/evmsView.js"],"names":["ViewEvms","_useState","useState","_useState2","_slicedToArray","visible","setVisible","_useState3","_useState4","setEvmsId","_useState5","_useState6","projectValue","setProjectValue","dispatch","useDispatch","history","useHistory","evmsList","useSelector","state","data","editEVMSForm","item","project","sub_task","id","evms_update_form","setValues","planned_hours","planned_value","earned_value","actual_cost","estimate_at_completion","estimate_to_completion","variance_at_completion","budget_at_completion","useFormik","initialValues","validateOnBlur","validateOnChange","validate","values","errors","onSubmit","API","put","then","res","console","log","status","success","fetchEvmsThunk","sessionStorage","getItem","USER_ID","swal","useEffect","_jsx","_Fragment","children","_jsxs","CContainer","CModal","closeOnBackdrop","alignment","show","onClose","CModalHeader","closeButton","CModalTitle","className","CModalBody","CForm","CRow","CCol","lg","md","sm","CLabel","htmlFor","CInput","name","value","readOnly","g","onChange","handleChange","type","min","required","Math","abs","CButton","onClick","handleSubmit","undefined","Array","from","map","idx","CCard","CCardBody","IconButton","disabled","size","color","GradeIcon","fontSize","task_delivery_order","title","CIcon","push","pathname","CChart","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","tooltipLabelColor","options","aspectRatio","tooltips","enabled","work_package_number","date_created","date_updated","CAlert"],"mappings":"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","file":"static/js/45.27425972.chunk.js","sourcesContent":["import { CCard, CCardBody, CContainer, CRow, CButton, CModal, CModalHeader, CModalTitle, CModalBody, CForm, CCol, CLabel, CInput, CAlert } from '@coreui/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GradeIcon from '@material-ui/icons/Grade';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport './evmsView.css';\r\nimport { API, BASE_URL, USER_ID } from \"../../Config\";\r\nimport { CChart, CChartLine } from '@coreui/react-chartjs';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useFormik } from 'formik';\r\nimport { fetchEvmsThunk } from '../../store/slices/EvmsSlice';\r\nimport swal from 'sweetalert';\r\n\r\nconst ViewEvms = () => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [evmsId, setEvmsId] = useState('');\r\n    const [projectValue, setProjectValue] = useState('');\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n    const evmsList = useSelector(state => state.evmsList.data)\r\n\r\n    const editEVMSForm = (item) => {\r\n        setVisible(!visible);\r\n        setProjectValue(item?.project.sub_task);\r\n        setEvmsId(item?.id);\r\n        evms_update_form.setValues({\r\n            id: item?.id,\r\n            project: item?.project.id,\r\n            planned_hours: item?.project.planned_hours,\r\n            planned_value: item?.project.planned_value,\r\n            earned_value: item?.earned_value,\r\n            actual_cost: item?.actual_cost,\r\n            estimate_at_completion: item?.estimate_at_completion,\r\n            estimate_to_completion: item?.estimate_to_completion,\r\n            variance_at_completion: item?.variance_at_completion,\r\n            budget_at_completion: item?.budget_at_completion,\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const validate_evms_update = (values) => {\r\n        const errors = {}\r\n        if (!values.planned_value) errors.planned_value = \"Planned Value is required\"\r\n        if (!values.planned_hours) errors.planned_hours = \"Planned hours is required\"\r\n        if (!values.earned_value) errors.earned_value = \"Earned value is required\"\r\n        if (!values.actual_cost) errors.actual_cost = \"Actual cost is required\"\r\n        if (!values.estimate_at_completion) errors.estimate_at_completion = \"Estimate at completion is required\"\r\n        if (!values.estimate_to_completion) errors.estimate_to_completion = \"Estimate to completion is required\"\r\n        if (!values.variance_at_completion) errors.variance_at_completion = \"Variance at completion is required\"\r\n        if (!values.budget_at_completion) errors.budget_at_completion = \"Budget at completion required\"\r\n        return errors;\r\n    }\r\n\r\n    const updateEvms = (values) => {\r\n        API.put('evms/update/' + values.id + '/', values).then((res) => {\r\n            console.log(res)\r\n            if (res.status == 200 && res.data.success == 'True') {\r\n                dispatch(fetchEvmsThunk(sessionStorage.getItem(USER_ID)))\r\n                setVisible(false)\r\n                swal('EVMS has been updated!', '', 'success')\r\n            }\r\n            else {\r\n                swal('Error', 'There was a problem updating', 'warning')\r\n            }\r\n        })\r\n    }\r\n\r\n    const evms_update_form = useFormik({\r\n        initialValues: {\r\n            id: \"\",\r\n            project: \"\",\r\n            planned_value: \"\",\r\n            planned_hours: \"\",\r\n            earned_value: \"\",\r\n            actual_cost: \"\",\r\n            estimate_at_completion: \"\",\r\n            estimate_to_completion: \"\",\r\n            variance_at_completion: \"\",\r\n            budget_at_completion: \"\"\r\n\r\n        },\r\n        validateOnBlur: true,\r\n        validateOnChange: true,\r\n        validate: validate_evms_update,\r\n        onSubmit: updateEvms\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log('evmsList', evmsList)\r\n    }, [evmsList])\r\n\r\n    {/**EVMS EDIT FORM FUNCTIONALITY */ }\r\n\r\n    return (\r\n        <>\r\n            {/**display all evms */}\r\n            <CContainer>\r\n                {/**modal to edit evms */}\r\n                <CModal closeOnBackdrop={false} alignment=\"center\" show={visible} onClose={editEVMSForm}>\r\n                    <CModalHeader onClose={() => setVisible(!visible)} closeButton>  <CModalTitle className=\"modal-title\">\r\n                        <span className=\"edit-profile-form-header\">\r\n                            Edit EVMS Info\r\n                        </span>\r\n                    </CModalTitle>\r\n                    </CModalHeader>\r\n                    <CModalBody>\r\n                        <CContainer>\r\n                            <CForm>\r\n                                <CRow>\r\n                                    {/**Project Name */}\r\n                                    <CCol lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"project\">\r\n                                            Project Name\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"project\" id=\"project\" value={projectValue} readOnly />\r\n                                    </CCol>\r\n                                    {/**Work package */}\r\n                                    {/* <CCol lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"wPackage\">\r\n                                            Work Package\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"wPackage\" id=\"wPackage\" readOnly />\r\n                                    </CCol> */}\r\n                                    {/**Planned Value */}\r\n                                    <CCol className=\"mb-2\" g=\"6\" md=\"6\" sm=\"12\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"planned_value\">\r\n                                            Planned Value\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"planned_value\" id=\"planned_value\" value={evms_update_form.values.planned_value} onChange={evms_update_form.handleChange} type=\"number\" min=\"1\" required readOnly />\r\n                                        {/**Error validation */}\r\n                                        {evms_update_form.errors.planned_value && <p className=\"error\">{evms_update_form.errors.planned_value}</p>}\r\n                                    </CCol>\r\n                                    {/**Planned hours */}\r\n                                    <CCol className=\"mb-2\" g=\"6\" md=\"6\" sm=\"12\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"planned_hours\">\r\n                                            Planned Hours\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"planned_hours\" id=\"planned_hours\" value={evms_update_form.values.planned_hours} onChange={evms_update_form.handleChange} type=\"number\" min=\"0\" required readOnly />\r\n                                        {/**Error validation */}\r\n                                        {evms_update_form.errors.planned_hours && <p className=\"error\">{evms_update_form.errors.planned_hours}</p>}\r\n                                    </CCol>\r\n                                    {/**Earned Value */}\r\n                                    <CCol lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"earned_value\">\r\n                                            Earned Value\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"earned_value\" id=\"earned_value\" value={evms_update_form.values.earned_value} onChange={evms_update_form.handleChange} required type=\"number\" min=\"0\" />\r\n                                        {/**Error validation */}\r\n                                        {evms_update_form.errors.earned_value && <p className=\"error\">{evms_update_form.errors.earned_value}</p>}\r\n                                    </CCol>\r\n                                    {/**Actual Cost */}\r\n                                    <CCol lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"actual_cost\">\r\n                                            Actual Cost\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"actual_cost\" id=\"actual_cost\" value={evms_update_form.values.actual_cost} onChange={evms_update_form.handleChange} type=\"number\" min=\"0\" required />\r\n                                        {/**Error validation */}\r\n                                        {evms_update_form.errors.actual_cost && <p className=\"error\">{evms_update_form.errors.actual_cost}</p>}\r\n                                    </CCol>\r\n                                    {/**estimate at completion */}\r\n                                    <CCol lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"estimate_at_completion\">\r\n                                            Estimate at completion\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"estimate_at_completion\" id=\"estimate_at_completion\" type=\"number\" min=\"1\" value={evms_update_form.values.estimate_at_completion} onChange={evms_update_form.handleChange} required />\r\n                                        {/**Error validation */}\r\n                                        {evms_update_form.errors.estimate_at_completion && <p className=\"error\">{evms_update_form.errors.estimate_at_completion}</p>}\r\n                                    </CCol>\r\n\r\n                                    {/**estimate to completion */}\r\n                                    <CCol lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"estimate_to_completion\">\r\n                                            Estimate to completion\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"estimate_to_completion\" id=\"estimate_to_completion\" type=\"number\" min=\"1\" value={evms_update_form.values.estimate_to_completion} onChange={evms_update_form.handleChange} required />\r\n                                        {/**Error validation */}\r\n                                        {evms_update_form.errors.estimate_to_completion && <p className=\"error\">{evms_update_form.errors.estimate_to_completion}</p>}\r\n                                    </CCol>\r\n                                    {/**variance at completion */}\r\n\r\n                                    <CCol lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"variance_at_completion\">\r\n                                            Variance at completion\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"variance_at_completion\" id=\"variance_at_completion\" type=\"number\" min=\"0\" value={Math.abs(evms_update_form.values.budget_at_completion - evms_update_form.values.estimate_at_completion)} onChange={evms_update_form.handleChange} readOnly />\r\n\r\n                                    </CCol>\r\n                                    {/**budget at completion */}\r\n\r\n                                    <CCol lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                                        <CLabel className=\"custom-label-5\" htmlFor=\"budget_at_completion\">\r\n                                            Budget at completion\r\n                                        </CLabel>\r\n                                        <CInput className=\"custom-forminput-6\" name=\"budget_at_completion\" id=\"budget_at_completion\" type=\"number\" value={evms_update_form.values.budget_at_completion} onChange={evms_update_form.handleChange} required />\r\n                                        {/**Error validation */}\r\n                                        {evms_update_form.errors.budget_at_completion && <p className=\"error\">{evms_update_form.errors.budget_at_completion}</p>}\r\n                                    </CCol>\r\n                                    {/**submit buttons */}\r\n                                    <CCol md=\"12\">\r\n                                        <div className=\"project-form-button-holders mt-3\">\r\n                                            <CButton className=\"profile-form-btn update-profile\" onClick={evms_update_form.handleSubmit}>\r\n                                                Update Info\r\n                                            </CButton>\r\n                                            <CButton className=\"profile-form-btn cancel-update\" onClick={() => setVisible(!visible)} type=\"reset\">\r\n                                                Cancel\r\n                                            </CButton>\r\n                                        </div>\r\n                                    </CCol>\r\n                                </CRow>\r\n                            </CForm>\r\n                        </CContainer>\r\n                    </CModalBody>\r\n                </CModal>\r\n                <h4 className=\"dash-header mb-3\">EVMS View</h4>\r\n                <CRow>\r\n                    <div className=\"col-md-12 col-sm-12 col-xs-12 mt-1\">\r\n                        {evmsList != undefined && Array.from(evmsList).map((item, idx) => (\r\n                            <CCard className=\"card-ongoing-project\" key={idx}>\r\n                                <CCardBody className=\"details-project-body\">\r\n                                    <div className=\"card-header-portion-ongoing\">\r\n                                        <h4 className=\"ongoing-card-header-1\"><IconButton aria-label=\"favourite\" disabled size=\"medium\" color=\"primary\">\r\n                                            <GradeIcon fontSize=\"inherit\" className=\"fav-button\" />\r\n                                        </IconButton>{item.project.task_delivery_order.title + ' / ' + item.project.sub_task}</h4>\r\n                                        <div className=\"action-button-holders--2\">\r\n                                            <CButton className=\"edit-project-on\" onClick={() => editEVMSForm(item)}><CIcon name=\"cil-pencil\" className=\"mr-1\" /> Edit</CButton>\r\n                                            <CButton className=\"view-ongoing-details\" onClick={() => history.push({ pathname: '/dashboard/EVMS/details/' })} ><CIcon name=\"cil-list-rich\" className=\"mr-1\" />View Details</CButton>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr className=\"header-underline1\" />\r\n                                    <div className=\"row\">\r\n                                        {/**graph view */}\r\n                                        <div className=\"col-lg-6 col-md-12\">\r\n                                            <CChart\r\n                                                type=\"line\"\r\n                                                datasets={[\r\n                                                    {\r\n                                                        label: 'Time',\r\n                                                        backgroundColor: 'rgba(179,181,198,0.2)',\r\n                                                        borderColor: 'rgba(179,181,198,1)',\r\n                                                        pointBackgroundColor: 'rgba(179,181,198,1)',\r\n                                                        pointBorderColor: '#fff',\r\n                                                        pointHoverBackgroundColor: '#fff',\r\n                                                        pointHoverBorderColor: 'rgba(179,181,198,1)',\r\n                                                        tooltipLabelColor: 'rgba(179,181,198,1)',\r\n                                                        data: [65, 59, 900, 81, 560, 55, 1000]\r\n                                                    },\r\n                                                    {\r\n                                                        label: 'Cost',\r\n                                                        backgroundColor: 'rgba(255,99,132,0.2)',\r\n                                                        borderColor: 'rgba(255,99,132,1)',\r\n                                                        pointBackgroundColor: 'rgba(255,99,132,1)',\r\n                                                        pointBorderColor: '#fff',\r\n                                                        pointHoverBackgroundColor: '#fff',\r\n                                                        pointHoverBorderColor: 'rgba(255,99,132,1)',\r\n                                                        tooltipLabelColor: 'rgba(255,99,132,1)',\r\n                                                        data: [28, 48, 40, 19, 96, 27, 10]\r\n                                                    }\r\n                                                ]}\r\n                                                options={{\r\n                                                    aspectRatio: 1.5,\r\n                                                    tooltips: {\r\n                                                        enabled: true\r\n                                                    }\r\n                                                }}\r\n                                            // labels={[\r\n                                            //   'Eating', 'Drinking', 'Sleeping', 'Designing',\r\n                                            //   'Coding', 'Cycling', 'Running'\r\n                                            // ]}\r\n                                            />\r\n                                        </div>\r\n                                        {/**Text details */}\r\n                                        <div className=\"col-lg-5 offset-lg-1 col-md-12 mt-3\">\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">work package : </span>{item.work_package_number}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">earned value: </span>{item.earned_value}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">actual cost : </span>{item.actual_cost}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">planned value : </span>{item.project.planned_value}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">planned hours : </span>{item.project.planned_hours}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">estimate at completion : </span>{item.estimate_at_completion}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">estimation to completion : </span>{item.estimate_to_completion}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">variance at completion : </span>{Math.abs(item?.budget_at_completion - item?.estimate_at_completion)}</h5>\r\n\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">budget at completion : </span>{item.budget_at_completion}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">date created : </span>{item.date_created}</h5>\r\n                                            <h5 className=\"evms-info-view child\"><span className=\"info-header--evms\">date updated : </span>{item.date_updated}</h5>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        ))}\r\n                        { /**If no evmsList */}\r\n                        {evmsList == undefined || evmsList == 0 ? (\r\n                            <CAlert className=\"no-value-show-alert text-center\" color=\"primary\">Currently there are no EVMS details available.\r\n                                <div><CButton className=\"evms-from-details\" onClick={() => history.push({ pathname: '/dashboard/EVMS/create' })}>Create a new EVMS</CButton></div>\r\n                            </CAlert>\r\n                        ) : null\r\n                        }\r\n                    </div>\r\n                </CRow>\r\n            </CContainer>\r\n        </>\r\n    )\r\n}\r\nexport default ViewEvms;"],"sourceRoot":""}