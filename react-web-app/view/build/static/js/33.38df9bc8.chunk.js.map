{"version":3,"sources":["components/scheduledMeetings/scheduledMeets.js","components/evms/evmsTable.js","components/projects-table/projectsTable.js","components/assignedProjects/assignedProjects.js","pages/dashboard/Dashboard.js","../node_modules/@mui/material/LinearProgress/linearProgressClasses.js","../node_modules/@mui/material/LinearProgress/LinearProgress.js","components/wbs-docs-upload/WBSFileUpload.js","pages/wbs-board/wbs-modal.js"],"names":["ScheduleMeetings","history","useHistory","dispatch","useDispatch","meeting","useSelector","state","meetings","data","React","useEffect","fetchMeetingList","sessionStorage","getItem","USER_ID","_jsx","_Fragment","children","_jsxs","className","length","undefined","slice","map","item","idx","CCard","CCardBody","room_id","id","agenda","medium","start_time","CAlert","color","CRow","CCol","CButton","onClick","push","pathname","EvmsView","evmsList","calculateCPI","ev","ac","Math","abs","console","log","Array","from","project","task_delivery_order","title","sub_task","earned_value","actual_cost","planned_value","ProjectsTableDashboard","projects","work_package_number","Number","parseFloat","planned_hours","toFixed","remaining_hours","planned_delivery_date","AssignedProjectsDashboard","wbs","temp_data","forEach","element","assignee","_useState","useState","_useState2","_slicedToArray","updatedData","setUpdatedData","_useState3","_useState4","modal","setModal","_useState5","_useState6","modalData","setModalData","fetchWbsThunk","value","API","get","then","res","find","description","end_date","WbsModal","show","onClose","toggle","timeCardList","Dashboard","location","useLocation","_useSnackbar","useSnackbar","enqueueSnackbar","closeSnackbar","_location$state","_location$state2","window","scrollTo","variant","message","CContainer","has_permission","ProjectTables","AssignedToMe","ScheduledMeetings","EvmsShow","memo","getLinearProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_t5","_t6","indeterminate1Keyframe","keyframes","_templateObject","_taggedTemplateLiteral","indeterminate2Keyframe","_templateObject2","bufferKeyframe","_templateObject3","getColorShade","theme","vars","palette","LinearProgress","concat","mode","lighten","main","darken","LinearProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","_ref","_objectSpread","position","overflow","display","height","zIndex","colorAdjust","backgroundColor","content","left","top","right","bottom","opacity","transform","LinearProgressDashed","dashed","_ref2","marginTop","width","backgroundImage","backgroundSize","backgroundPosition","css","_templateObject4","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","_ref3","transition","transformOrigin","_ref4","_templateObject5","LinearProgressBar2","bar2Indeterminate","bar2Buffer","_ref5","_ref6","_templateObject6","inProps","ref","useThemeProps","_props$color","valueBuffer","_props$variant","other","_objectWithoutProperties","_excluded","classes","slots","bar1","bar2","composeClasses","useUtilityClasses","useTheme","rootProps","inlineStyles","round","direction","process","clsx","role","style","WBSFileUpload","inputRef","useRef","files","setFiles","fileAvatars","setFileAvatars","CLabel","htmlFor","CInput","type","onChange","event","file","target","_toConsumableArray","URL","createObjectURL","onFileChange","accept","src","alt","index","arrayRemoveItem","_props$data$assignee","_props$data$reporter","_props$timeCardList","hrsWorked","setHrsWorked","plannedHours","setPlannedHours","_useState7","_useState8","actualHour","setactualHour","_useState9","_useState10","remaininghrs","setremaininghrs","_useState11","_useState12","datecheck","setdatecheck","_useState13","_useState14","work_package_index","ep","i","estimated_person","start","start_date","end","moment","require","total_days","diff","total_hrs","tomorrow","Date","count","setDate","getDate","getDay","total_spent","hours_today","lastDate","currentDate","difference","getFullYear","getMonth","split","_useState15","_useState16","formWbsUpdate","useFormik","initialValues","details","status","hours_worked","progress","comments","deliverable","date_updated","actual_work_done","validateOnChange","validateOnBlur","validate","values","errors","onSubmit","setSubmitting","form_data","FormData","property","append","_step","_iterator","_createForOfIteratorHelper","entries","s","n","done","pair","err","e","f","put","success","fetchProjectsForPMThunk","fetchProjectsThunk","swal","text","icon","catch","CModal","closeOnBackdrop","size","CModalHeader","closeButton","task_title","CModalBody","CForm","maxlength","handleChange","fontSize","CTextarea","disabled","setFieldValue","min","maxLength","href","textDecoration","dataurl","filename","link","document","createElement","body","appendChild","download","click","BASE_URL","String","pop","isSubmitting","isValidating","handleSubmit","md","first_name","last_name","reporter"],"mappings":"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","file":"static/js/33.38df9bc8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { CButton, CCard, CCardBody, CAlert, CRow, CCol } from '@coreui/react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchMeetingList } from \"../../store/slices/MeetingSlice\";\r\nimport { USER_ID } from \"../../Config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ScheduleMeetings = () => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const meeting = useSelector(state => state.meetings.data);\r\n    React.useEffect(() => {\r\n        dispatch(fetchMeetingList(sessionStorage.getItem(USER_ID)))\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className=\"main-holder-projects\">\r\n                <h3 className=\"projectsHeader\">\r\n                    Scheduled Meetings({meeting.length})\r\n                </h3>\r\n\r\n                <div className=\"card-holder1 \">\r\n                    {meeting != undefined && meeting.slice(0, 3).map((item, idx) => (\r\n                        <CCard className=\"project-card2\" key={idx}>\r\n                            <CCardBody>\r\n                                {item.room_id != \"\" &&\r\n                                <h6 className=\"id-no1\">room id: #{item.room_id}</h6>}\r\n                                {item.room_id == \"\" && <h6 className=\"id-no1\">meeting id: #{item.id}</h6>}\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Agenda:</span> {item.agenda}</h5>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Location:</span> {item.medium == 0 ? 'Physical' :'Virtual'}</h5>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Scheduled Date &amp; Time :</span> {item.start_time}</h5>\r\n                            </CCardBody>\r\n\r\n                        </CCard>\r\n                    ))}\r\n                    { /**If no meetings */}\r\n                    {meeting == undefined || meeting == '' ? (\r\n                        <CAlert className=\"no-value-show-alert\" color=\"primary\">Currently there are no upcoming meetings</CAlert>\r\n                    ) : <></>}\r\n                </div>\r\n                {meeting != undefined  && <CRow className=\"button-holder3\">\r\n                <CCol className=\"p-header-3 col-md-9 mt-2\">\r\n                       \r\n                    </CCol>\r\n\r\n                    <CCol className=\"col-md-3\">\r\n                    <CButton className=\"tiny-buttons1\"  onClick={() => history.push({pathname:'/dashboard/meetings'})}>View all</CButton>\r\n                    </CCol>\r\n                    </CRow>}\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nexport default ScheduleMeetings\r\n","import React, { useState } from 'react';\r\nimport './evmsTable.css';\r\nimport { CButton, CCard, CCardBody, CAlert, CRow, CCol } from '@coreui/react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchEvmsThunk } from '../../store/slices/EvmsSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nconst EvmsView = () => {\r\n    let history = useHistory();\r\n    \r\n    var cpiVal\r\n    const evmsList = useSelector(state => state.evmsList.data)\r\n    console.log('evms from dashboard', evmsList)\r\n    function calculateCPI(ev,ac){\r\n      let val = Math.abs(ev/ac)\r\n\r\n      return val;\r\n\r\n}\r\n\r\n\r\n  \r\n   \r\n    return (\r\n        <>\r\n            <div className=\"main-holder-projects\">\r\n                <h3 className=\"projectsHeader\">\r\n                    EVMS Summary ({evmsList.length})\r\n                </h3>\r\n                <div className=\"card-holder1\">\r\n                    {evmsList != undefined && Array.from(evmsList).slice(0, 3).map((item, idx) => (\r\n                        <CCard className=\"project-card1\" key={idx}>\r\n                            <CCardBody>\r\n                                <h6 className=\"id-no1\">{item.project.task_delivery_order.title} / {item.project.sub_task}</h6>\r\n                                <h5 className=\"card-details2\"><span className=\"p-header-4\">Cost Performance Index (CPI) :</span><span> {calculateCPI(item.earned_value,item.actual_cost)}</span><small className=\"ml-1 star-color\">*(CPI{'>'}1, within budget.CPI {'<'}1, over budget)</small></h5>\r\n                                <h5 className=\"card-details2\"><span className=\"p-header-4\">Schedule Performance Index (SPI) :</span><span> {calculateCPI(item.earned_value,item.project.planned_value)}</span><small className=\"ml-1 star-color\">*(SPI {'>'}1, within schedule,SPI {'<'}1, behind schedule)</small></h5>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    ))}\r\n                    { /**If no evmsList */}\r\n                    {evmsList == undefined || evmsList == 0 ? (\r\n\r\n\r\n\r\n                        <CAlert className=\"no-value-show-alert\" color=\"primary\">Currently there are no projects assigned to you</CAlert>\r\n\r\n\r\n                    ) : null\r\n\r\n\r\n                    }\r\n\r\n                </div>\r\n                {evmsList != undefined &&\r\n                    <CRow className=\"button-holder3\">\r\n                         <CCol className=\"p-header-3 col-md-9 mt-2\">\r\n                       \r\n                    </CCol>\r\n\r\n                    <CCol className=\"col-md-3\"><CButton className=\"tiny-buttons1\" onClick={() => history.push({ pathname: '/dashboard/EVMS/view' })}>View all</CButton>\r\n                    </CCol>\r\n                    </CRow>}\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default EvmsView;","import React, { useEffect } from 'react';\r\nimport './projectsTable.css';\r\nimport { CButton, CCard, CCardBody, CAlert, CRow, CCol } from '@coreui/react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { fetchProjectsThunk } from \"../../store/slices/ProjectsSlice\";\r\n// import { USER_ID } from \"../../Config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst ProjectsTableDashboard = () => {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const projects = useSelector(state => state.projects.data);\r\n    useEffect(() => {\r\n        console.log(\"ProjectsList\", projects)\r\n    }, [projects])\r\n    return (\r\n        <>\r\n            <div className=\"main-holder-projects\">\r\n                <h3 className=\"projectsHeader\">\r\n                    Assigned Project({projects.length})\r\n                </h3>\r\n\r\n                <div className=\"card-holder1\">\r\n                    {projects != undefined && Array.from(projects).slice(0, 3).map((item, idx) => (\r\n                        <CCard className=\"project-card1\" key={idx} onClick={() => history.push({ pathname: 'dashboard/Projects/assigned-projects/details/' + item.project.work_package_number + '/' })}>\r\n                            <CCardBody>\r\n                                {/* <h6 className=\"id-no1\">Work Package Number: # {item.project.work_package_number}</h6> */}\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Project Name: </span> {item.project.sub_task}</h5>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Planned Hours: </span> {Number(parseFloat(item.project.planned_hours)).toFixed(2)}</h5>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Remaining Hours: </span> {Number(parseFloat(item.project.remaining_hours)).toFixed(2)}</h5>\r\n                                <h5 className=\"card-details1\"><span className=\"p-header-3\">Planned Delivery Date : </span>{item.project.planned_delivery_date}</h5>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    ))}\r\n                    { /**If no projects */}\r\n                    {projects == '' || projects == undefined ? (\r\n                        <CAlert className=\"no-value-show-alert\" color=\"primary\">Currently there are no projects assigned to you</CAlert>\r\n                    ) : null\r\n                    }\r\n                </div>\r\n                {projects != undefined && <CRow className=\"button-holder3\">\r\n                    <CCol className=\"p-header-3 col-md-9 mt-2\">\r\n                       \r\n                    </CCol>\r\n\r\n                    <CCol className=\"col-md-3\">\r\n                    <CButton className=\"tiny-buttons1\" onClick={() => history.push({ pathname: '/dashboard/Projects/assigned-projects' })}>View all</CButton>\r\n                    </CCol>\r\n                    </CRow>}\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ProjectsTableDashboard;\r\n","import React, { useState } from \"react\";\r\nimport { CButton, CCard, CCardBody, CAlert, CRow, CCol } from \"@coreui/react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchWbsThunk } from \"../../store/slices/WbsSlice\";\r\nimport WbsModal from \"../../pages/wbs-board/wbs-modal\";\r\n// import { fetchUserWiseWbsThunk } from '../../store/slices/WbsSlice';\r\nimport { API, USER_ID } from \"../../Config\";\r\n\r\nconst AssignedProjectsDashboard = () => {\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const wbs = useSelector((state) => {\r\n    // state.wbs.data\r\n    var temp_data = [];\r\n    state.wbs.data.forEach((element) => {\r\n      if (element.assignee.id == sessionStorage.getItem(USER_ID)) {\r\n        temp_data.push(element);\r\n        // console.log(element)\r\n      }\r\n    });\r\n    return temp_data;\r\n  });\r\n  console.log(wbs);\r\n  const [updatedData, setUpdatedData] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [modalData, setModalData] = useState(null);\r\n  const editWbsModal = (value) => {\r\n    API.get(\"wbs/time-card/list/\" + value + \"/\").then((res) => {\r\n      console.log(\"time-card list result\", res);\r\n      setUpdatedData(res.data);\r\n    });\r\n    setModalData(wbs.find((element) => element.id == value));\r\n    setModal(true);\r\n  };\r\n  const toggle = () => {\r\n    setModalData(null);\r\n    setModal(!modal);\r\n  };\r\n\r\n  const onWbsUpdate = () => {\r\n    setModal(false);\r\n    dispatch(fetchWbsThunk(sessionStorage.getItem(USER_ID)));\r\n    setModalData(null);\r\n  };\r\n\r\n  React.useEffect(() => { dispatch(fetchWbsThunk(sessionStorage.getItem(USER_ID)));}, []);\r\n  return (\r\n    <>\r\n      <div className=\"main-holder-projects\">\r\n        <h3 className=\"projectsHeader\">WBS Board({wbs.length})</h3>\r\n\r\n        <div className=\"card-holder1\">\r\n          {wbs != undefined &&\r\n            wbs.slice(0, 3).map((item, idx) => (\r\n              // item.assignee.id == sessionStorage.getItem(USER_ID) &&\r\n              <CCard\r\n                className=\"project-card1\"\r\n                key={idx}\r\n                onClick={() => editWbsModal(item.id)}\r\n              >\r\n                <CCardBody>\r\n                  <h5 className=\"card-details1\">\r\n                    <span className=\"p-header-3\">Project: </span>{\" \"}\r\n                    {item.project.sub_task}\r\n                  </h5>\r\n                  <h6 className=\"card-details1\">\r\n                    <span className=\"p-header-3\">WBS Title:</span> {item.title}\r\n                  </h6>\r\n                  <h6 className=\"card-details1\">\r\n                    <span className=\"p-header-3\">WBS Description:</span>{\" \"}\r\n                    {item.description}\r\n                  </h6>\r\n                  <h6 className=\"card-details1\">\r\n                    <span className=\"p-header-3\">End Date :</span>{\" \"}\r\n                    {item.end_date}\r\n                  </h6>\r\n                </CCardBody>\r\n              </CCard>\r\n            ))}\r\n          {/**If no wbs */}\r\n          {wbs == undefined || wbs == 0 ? (\r\n            <CAlert className=\"no-value-show-alert\" color=\"primary\">\r\n              Currently there are no WBS assigned to you\r\n            </CAlert>\r\n          ) : null}\r\n        </div>\r\n        {wbs != undefined && (\r\n          <CRow className=\"button-holder3\">\r\n            <CCol className=\"p-header-3 col-md-9 mt-2\">\r\n             \r\n            </CCol>\r\n\r\n            <CCol className=\"col-md-3\">\r\n              <CButton\r\n                className=\"tiny-buttons1\"\r\n                onClick={() =>\r\n                  history.push({ pathname: \"/dashboard/WBS/board\" })\r\n                }\r\n              >\r\n                View all\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n        )}\r\n      </div>\r\n      {modalData != null && (\r\n        <WbsModal\r\n          show={modal}\r\n          onClose={onWbsUpdate}\r\n          toggle={toggle}\r\n          data={modalData}\r\n          timeCardList={updatedData}\r\n        ></WbsModal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default AssignedProjectsDashboard;\r\n","import React, { Suspense } from \"react\";\r\nimport { CCol, CContainer, CFade, CRow, CAlert, CButton } from \"@coreui/react\";\r\nimport innerRoutes from \"../../routes/DashboardRoutes\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./dashboard.css\";\r\nimport ScheduledMeetings from \"../../components/scheduledMeetings/scheduledMeets\";\r\nimport EvmsShow from \"../../components/evms/evmsTable\";\r\nimport ProjectTables from \"../../components/projects-table/projectsTable\";\r\nimport AssignedToMe from \"../../components/assignedProjects/assignedProjects\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { has_permission } from \"../../helper\";\r\nconst loading = (\r\n  <div className=\"pt-3 text-center\">\r\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\r\n  </div>\r\n);\r\n\r\nconst Dashboard = () => {\r\n let history = useHistory();\r\n  let location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    console.log(\"dashboard mounted\", location.state);\r\n    if (location.state?.from == \"login\") {\r\n      enqueueSnackbar(\"Welcome \", { variant: \"success\" });\r\n    }\r\n    if (location.state?.message) {\r\n      console.log(\"message\", location.state.message);\r\n      enqueueSnackbar(location.state.message, { variant: \"warning\" });\r\n    }\r\n    //console.log(new Date(JSON.parse(sessionStorage.getItem('TOKEN')).time).toISOString())\r\n  }, []);\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        {/**Row for showing da tables */}\r\n        <CRow>\r\n        {has_permission('projects.add_projects') &&\r\n          <CAlert className=\"no-value-show-alert text-center\" color=\"primary\">\r\n            Click here to create a New Project\r\n            <div>\r\n              <CButton\r\n                className=\"evms-from-details\"\r\n                onClick={() =>\r\n                  history.push({ pathname: \"/dashboard/Projects/create-new-project\" })\r\n                }\r\n              >\r\n                Create Project\r\n              </CButton>\r\n            </div>\r\n          </CAlert>}\r\n          <div className=\"col-lg-5 offset-lg-1\">\r\n            <ProjectTables />\r\n          </div>\r\n          <div className=\"col-lg-5\">\r\n            <AssignedToMe />\r\n          </div>\r\n          <div className=\"col-lg-5 offset-lg-1\">\r\n            <ScheduledMeetings />\r\n          </div>\r\n          {has_permission(\"evms.view_evms\") && (\r\n            <div className=\"col-lg-5 \">\r\n              <EvmsShow />\r\n            </div>\r\n          )}\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Dashboard);\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","let _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4,\n  _t5,\n  _t6;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useTheme from '../styles/useTheme';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getLinearProgressUtilityClass } from './linearProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\nconst indeterminate1Keyframe = keyframes(_t || (_t = _`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`));\nconst indeterminate2Keyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`));\nconst bufferKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\nconst getColorShade = (theme, color) => {\n  if (color === 'inherit') {\n    return 'currentColor';\n  }\n  if (theme.vars) {\n    return theme.vars.palette.LinearProgress[`${color}Bg`];\n  }\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(({\n  ownerState,\n  theme\n}) => ({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  zIndex: 0,\n  // Fix Safari's bug during composition of different paint.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  backgroundColor: getColorShade(theme, ownerState.color),\n  ...(ownerState.color === 'inherit' && ownerState.variant !== 'buffer' && {\n    backgroundColor: 'none',\n    '&::before': {\n      content: '\"\"',\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'currentColor',\n      opacity: 0.3\n    }\n  }),\n  ...(ownerState.variant === 'buffer' && {\n    backgroundColor: 'transparent'\n  }),\n  ...(ownerState.variant === 'query' && {\n    transform: 'rotate(180deg)'\n  })\n}));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => {\n  const backgroundColor = getColorShade(theme, ownerState.color);\n  return {\n    position: 'absolute',\n    marginTop: 0,\n    height: '100%',\n    width: '100%',\n    ...(ownerState.color === 'inherit' && {\n      opacity: 0.3\n    }),\n    backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`,\n    backgroundSize: '10px 10px',\n    backgroundPosition: '0 -23px'\n  };\n}, css(_t4 || (_t4 = _`\n    animation: ${0} 3s infinite linear;\n  `), bufferKeyframe));\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main,\n  ...(ownerState.variant === 'determinate' && {\n    transition: `transform .${TRANSITION_DURATION}s linear`\n  }),\n  ...(ownerState.variant === 'buffer' && {\n    zIndex: 1,\n    transition: `transform .${TRANSITION_DURATION}s linear`\n  })\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t5 || (_t5 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n    `), indeterminate1Keyframe));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  ...(ownerState.variant !== 'buffer' && {\n    backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main\n  }),\n  ...(ownerState.color === 'inherit' && {\n    opacity: 0.3\n  }),\n  ...(ownerState.variant === 'buffer' && {\n    backgroundColor: getColorShade(theme, ownerState.color),\n    transition: `transform .${TRANSITION_DURATION}s linear`\n  })\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t6 || (_t6 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n    `), indeterminate2Keyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n  const {\n    className,\n    color = 'primary',\n    value,\n    valueBuffer,\n    variant = 'indeterminate',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const theme = useTheme();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\",\n    ...rootProps,\n    ref: ref,\n    ...other,\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    CForm,\r\n    CLabel,\r\n    CInput,\r\n    CCardBody,\r\n    CCard,\r\n    CButton,\r\n    CContainer,\r\n    CCol,CRow,\r\n} from \"@coreui/react\";\r\nimport \"./uploadForm.css\";\r\nimport { API, USER_ID } from \"../../Config\";\r\nimport { arrayRemoveItem } from \"../../helper\";\r\nimport swal from \"sweetalert\";\r\nimport {useRef} from 'react';\r\n\r\nconst WBSFileUpload = (props) => {\r\n    const inputRef = useRef();\r\n    const [selectedFile,setSelectedFile] = useState()\r\n    const setSelectedProject = useState()\r\n    const [files, setFiles] = useState(props.files)\r\n    const [fileAvatars, setFileAvatars] = useState([])\r\n    const upload = () => {\r\n        let formData = new FormData()\r\n        // formData.append('project', selectedProject.data.project.id)\r\n        formData.append('files', files.length)\r\n        formData.append('upload_by', sessionStorage.getItem(USER_ID))\r\n        Array.from(files).forEach((file, idx) => {\r\n            formData.append('file' + (idx + 1), file)\r\n        })\r\n        API.post('project/shared/document/create/', formData).then((res) => {\r\n            setSelectedProject(null)\r\n            setFileAvatars([])\r\n            setFiles([])\r\n            swal('Uploaded', 'Files are uploaded', 'success')\r\n        })\r\n    }\r\n    function onFileChange(event) {\r\n        let file = event.target.files[0]\r\n        event.target.value=null\r\n        setFiles([...files, file]);\r\n        setFileAvatars([...fileAvatars, URL.createObjectURL(file)]);\r\n        props.setFiles([...files, file])\r\n    }\r\n    function remove_file(index) {\r\n        console.log('on remove',arrayRemoveItem(files, files[index]))\r\n        setFileAvatars(arrayRemoveItem(fileAvatars, fileAvatars[index]))\r\n        setFiles(arrayRemoveItem(files, files[index]))\r\n        props.setFiles(arrayRemoveItem(files, files[index]))\r\n        // inputRef.current.value = null;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <CCard className=\"mt-2 upload-docs\">\r\n                <CCardBody>\r\n                    <CContainer>\r\n                        {/**Project Name */}\r\n                        \r\n                        {/**upload files box */}\r\n                        <CCol className=\"mb-1\">\r\n                            <CLabel htmlFor=\"attachments\" className=\"custom-label-5\">\r\n                                Upload Documents\r\n                            </CLabel>\r\n                            <CLabel className=\"custom-file-upload\">\r\n                                <CInput\r\n                                    type=\"file\"\r\n                                    id=\"file\"\r\n                                    ref={inputRef}\r\n                                    className=\"form-control form-control-file\"\r\n                                    onChange={(event) => onFileChange(event)}\r\n                                    accept=\".xlsx, .xls, .csv, .pdf, image/*, application/gzip, .zip, .tar, .txt, .doc, .docx, .pptx, .ppt\"\r\n                                />\r\n                                <img\r\n                                    src={\"assets/icons/upload-thin.svg\"}\r\n                                    alt=\"\"\r\n                                    className=\"upload-icon\"\r\n                                // onClick={()=>{document.getElementById('file').click()}}\r\n                                />\r\n                            </CLabel>\r\n                        </CCol>\r\n                        <CCol>\r\n                        {/* <CButton\r\n                            type=\"button\" \r\n                            onClick = {upload}\r\n                            color=\"primary\"\r\n                          >\r\n                            Upload\r\n                          </CButton> */}\r\n                        </CCol>\r\n                        {/**display uploaded files */}\r\n                        <div className=\"mb-2\">\r\n                            <div className=\"row\">\r\n                                {fileAvatars.map((file, idx) => (\r\n                                    <div key={idx} className=\"col-md-6 col-sm-6 col-sm-4\">\r\n                                        <div className=\"file-attached-ongoing rounded-pill\">\r\n                                            <CButton className=\"remove-file-ongoing\" type=\"button\" onClick={() => { remove_file(idx) }}>\r\n                                                <img\r\n                                                    src={\"assets/icons/icons8-close-64-blue.svg\"}\r\n                                                    className=\"close-icon-size\"\r\n                                                />\r\n                                            </CButton>\r\n                                            {files[idx].name}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        {/**Submit buttons */}\r\n                        {/* <div className=\"mb-3 mt-4\">\r\n                            <div className=\"project-form-button-holders \">\r\n                                <CButton className=\"profile-form-btn update-profile\" type=\"button\" onClick={upload}>Upload Documents</CButton>\r\n                                <CButton className=\"profile-form-btn cancel-update\">Cancel</CButton>\r\n                            </div>\r\n                        </div> */}\r\n\r\n                    </CContainer>\r\n                </CCardBody>\r\n            </CCard>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WBSFileUpload;\r\n","import {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CForm,\r\n  CLabel,\r\n  CInput,\r\n  CButton,\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CTextarea,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { form, useFormik } from \"formik\";\r\nimport { API, BASE_URL, USER_ID } from \"../../Config\";\r\nimport swal from \"sweetalert\";\r\nimport {\r\n  fetchProjectsAssigneeThunk,\r\n  fetchProjectsForPMThunk,\r\n  fetchProjectsThunk,\r\n} from \"../../store/slices/ProjectsSlice\";\r\nimport { fetchWbsThunk } from \"../../store/slices/WbsSlice\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport moment from \"moment\";\r\nimport { has_permission } from \"../../helper.js\";\r\nimport WBSFileUpload from \"../../components/wbs-docs-upload/WBSFileUpload\";\r\n\r\nconst WbsModal = (props) => {\r\n  console.log(\"props wbs modal: \", props);\r\n  const [deliverableView, setDeliverableView] = useState(true);\r\n  const [hrsWorked, setHrsWorked] = useState(true);\r\n  const [plannedHours, setPlannedHours] = useState();\r\n  const [actualHour, setactualHour] = useState();\r\n  const [remaininghrs, setremaininghrs] = useState();\r\n  const [datecheck, setdatecheck] = useState();\r\n  const [balancehrs, setbalancehrs] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n  const wbsStatusArray = [\r\n    {\r\n      title: \"To Do\",\r\n      status: 1,\r\n    },\r\n    {\r\n      title: \"Ongoing\",\r\n      status: 2,\r\n    },\r\n    {\r\n      title: \"Done\",\r\n      status: 3,\r\n    },\r\n  ];\r\n\r\n  // const reset_form = () => {\r\n  //     formWbsUpdate.resetForm();\r\n  //     selectProjectRef.current.select.clearValue();\r\n  //     selectAssigneRef.current.select.clearValue();\r\n  //     selectTaskTitleRef.current.select.clearValue();\r\n  //     setAssigneeList([]);\r\n  //   };\r\n\r\n  React.useEffect(() => {\r\n    API.get(\r\n      \"project/assignee/list/\" + props.data.project.work_package_index + \"/\"\r\n    ).then((res) => {\r\n      let ep = 0;\r\n      for (let i = 0; i < res.data.data.length; i++) {\r\n        console.log(\"id\", res.data.data[i].assignee.id);\r\n        if (props.data.assignee.id == res.data.data[i].assignee.id) {\r\n          ep = res.data.data[i].estimated_person;\r\n        }\r\n      }\r\n\r\n      const start = props.data.project.start_date;\r\n      const end = props.data.project.planned_delivery_date;\r\n\r\n      const moment = require(\"moment\");\r\n      let total_days = moment(end).diff(moment(start), \"days\");\r\n      total_days = total_days + 1;\r\n\r\n      let total_hrs = total_days * 8;\r\n\r\n      const tomorrow = new Date(start);\r\n\r\n      let count = 0;\r\n      for (let i = 0; i < total_days; i++) {\r\n        tomorrow.setDate(tomorrow.getDate() + 1);\r\n\r\n        if (tomorrow.getDay() == 5 || tomorrow.getDay() == 6) {\r\n          count = count + 1;\r\n        }\r\n      }\r\n\r\n      count = count * 8;\r\n      total_hrs = total_hrs - count;\r\n\r\n      let total_spent = 0;\r\n      for (const item in props.timeCardList.data) {\r\n        total_spent += parseFloat(props.timeCardList.data[item].hours_today);\r\n      }\r\n\r\n      setactualHour(Number(total_spent).toFixed(2));\r\n\r\n      total_hrs = total_hrs * ep;\r\n      setPlannedHours(Number(total_hrs).toFixed(2));\r\n\r\n      setremaininghrs(Number(total_hrs - total_spent).toFixed(2));\r\n    });\r\n\r\n    const lastDate = props.data.end_date;\r\n\r\n    const currentDate = new Date();\r\n    const day = `${currentDate.getFullYear()}-${\r\n      currentDate.getMonth() + 1\r\n    }-${currentDate.getDate()}`;\r\n    const cday = day.split(\"-\");\r\n\r\n    const endDateArray = lastDate.split(\"-\");\r\n\r\n    const difference = moment(props.data.end_date, \"YYYY-MM-DD\").diff(\r\n      moment(currentDate, \"YYYY-MM-DD\"),\r\n      \"days\"\r\n    );\r\n\r\n    setdatecheck(difference);\r\n  }, [props]);\r\n\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n  const updateWbs = (data, { setSubmitting }) => {\r\n    let form_data = new FormData()\r\n    form_data.append('total_files',files.length)\r\n    for (const property in formWbsUpdate.values) {\r\n      form_data.append(property,formWbsUpdate.values[property])\r\n    }\r\n    for (let index=1;index<=files.length;index++){\r\n      form_data.append('file'+index,files[index-1])\r\n    }\r\n    for (var pair of form_data.entries()) {\r\n      console.log(pair[0]+ ', ' + pair[1]); \r\n    }\r\n    if (datecheck >= 0) {\r\n      API.put(\"wbs/update/\" + props.data.id + \"/\", form_data)\r\n        .then((res) => {\r\n          if (res.status == 200 && res.data.success == \"True\") {\r\n            dispatch(fetchProjectsForPMThunk(sessionStorage.getItem(USER_ID)));\r\n            dispatch(fetchProjectsThunk(sessionStorage.getItem(USER_ID)));\r\n            dispatch(fetchWbsThunk(sessionStorage.getItem(USER_ID)));\r\n            swal({\r\n              title: \"Good job! WBS updated successfully!\",\r\n              text: \"\",\r\n              icon: \"success\",\r\n            });\r\n            props.onClose();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      setSubmitting(false);\r\n      enqueueSnackbar(\"Planned Delivery date is over! \", {\r\n        variant: \"warning\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const validateWbsCreateForm = (values) => {\r\n    const errors = {};\r\n    if (!values.title) errors.title = \"Title is required!\";\r\n    if (!values.actual_work_done)\r\n      errors.actual_work_done =\r\n        \"Actual work done today is required! (250 charracters)\";\r\n    return errors;\r\n  };\r\n  const [files, setFiles] = useState([]);\r\n  const setDocFiles = (files) => {\r\n    setFiles(files);\r\n  };\r\n  const formWbsUpdate = useFormik({\r\n    initialValues: {\r\n      project: props.data.project.id,\r\n      assignee: props.data.assignee.id,\r\n      title: props.data.title,\r\n      details: props.data.project.description,\r\n      status: props.data.status,\r\n      description: props.data.description,\r\n      start_date: props.data.start_date,\r\n      end_date: props.data.end_date,\r\n      hours_worked: props.data.hours_worked,\r\n      progress: props.data.progress,\r\n      comments: props.data.comments,\r\n      deliverable: props.data.deliverable,\r\n      date_updated: \"\",\r\n      actual_work_done: \"\",\r\n      remaining_hours: \"\",\r\n    },\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validate: validateWbsCreateForm,\r\n    onSubmit: updateWbs,\r\n  });\r\n\r\n  // const total_hours = () => {\r\n  //   console.log(\"ep\", props.data);\r\n  //   const start = props.data.start_date;\r\n  //   const end = props.data.end_date;\r\n\r\n  //   const moment = require(\"moment\");\r\n  //   const total_days = moment(end).diff(moment(start), \"days\");\r\n\r\n  //   console.log(\"dddddddd\", total_days);\r\n\r\n  //   let total_hrs = total_days * 24;\r\n\r\n  //   console.log(\"11111\", total_hrs);\r\n  //   console.log(\"1\", end);\r\n\r\n  //   const startd = new Date(start).toString();\r\n  //   console.log(\"string\", startd);\r\n  //   const tomorrow = new Date(start);\r\n\r\n  //   let count = 0;\r\n  //   for (let i = 0; i < total_days; i++) {\r\n  //     tomorrow.setDate(tomorrow.getDate() + 1);\r\n  //     if (tomorrow.getDay() == 5 || tomorrow.getDay() == 6) {\r\n  //       count = count + 1;\r\n  //     }\r\n  //   }\r\n  //   count = count * 24;\r\n  //   total_hrs = total_hrs - count;\r\n\r\n  //   let total_spent = 0;\r\n  //   for (const item in props.timeCardList.data) {\r\n  //     console.log(\"input hours\", props.timeCardList.data[item].hours_today);\r\n\r\n  //     total_spent += parseFloat(props.timeCardList.data[item].hours_today);\r\n  //   }\r\n  //   console.log(\"spent\", total_spent);\r\n  //   //setactualHour(Number(total_spent).toFixed(2));\r\n\r\n  //   const remaining_hrs = plannedHours - total_spent;\r\n  //   const hours = {\r\n  //     allocated_hours: total_hrs,\r\n  //     spent_hours: total_spent,\r\n  //     remaining_hours: remaining_hrs,\r\n  //   };\r\n  //   return hours;\r\n  // };\r\n\r\n  function is_form_submitting() {\r\n    console.log(formWbsUpdate.isSubmitting, formWbsUpdate.isValidating);\r\n    //total_hours();\r\n    if (formWbsUpdate.isSubmitting && !formWbsUpdate.isValidating) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function download(dataurl, filename) {\r\n    const link = document.createElement(\"a\");\r\n    document.body.appendChild(link);\r\n    link.href = dataurl;\r\n    link.target=\"_blank\"\r\n    link.download = \"\";\r\n    link.click();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CModal\r\n        closeOnBackdrop={false}\r\n        show={props.show}\r\n        onClose={props.toggle}\r\n        size=\"xl\"\r\n      >\r\n        <CModalHeader closeButton>\r\n          {props.data.project &&\r\n            props.data.project.task_delivery_order.title + \" / \"}\r\n          {props.data.project && props.data.project.sub_task + \" / \"}\r\n          {props.data.project && props.data.project.task_title}\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            <div className=\"col-lg-8 mb-3 border-right\">\r\n              <CForm>\r\n                <CRow>\r\n                  <div className=\"col-lg-12 mb-3\">\r\n                    <p>\r\n                      <b>Project Details :</b> {props.data.project.description}\r\n                    </p>\r\n                  </div>\r\n                </CRow>\r\n                <CRow>\r\n                  <div className=\"col-lg-12 mb-3\">\r\n                    <CLabel className=\"custom-label-wbs5\">Title</CLabel>\r\n                    <CInput\r\n                      id=\"title\"\r\n                      name=\"title\"\r\n                      maxlength=\"20\"\r\n                      className=\"custom-forminput-5\"\r\n                      onChange={formWbsUpdate.handleChange}\r\n                      value={formWbsUpdate.values.title}\r\n                      \r\n                    />\r\n                    <div className=\"float-right\">\r\n                      {formWbsUpdate.values.title.length}/20\r\n                    </div>\r\n                    {formWbsUpdate.errors.title && (\r\n                      <p\r\n                        className=\"error\"\r\n                        style={{ fontSize: \"14px !important\" }}\r\n                      >\r\n                        {formWbsUpdate.errors.title}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </CRow>\r\n                <CRow>\r\n                  <div className=\"col-md-12 mb-3\">\r\n                    <CLabel className=\"custom-label-wbs5\">Description</CLabel>\r\n                    <CTextarea\r\n                      maxlength=\"300\"\r\n                      id=\"description\"\r\n                      name=\"description\"\r\n                      className=\"custom-forminput-5 text-box-height\"\r\n                      onChange={formWbsUpdate.handleChange}\r\n                      value={formWbsUpdate.values.description}\r\n                    ></CTextarea>\r\n                    <div className=\"float-right\">\r\n                      {formWbsUpdate.values.description.length}/300\r\n                    </div>\r\n                  </div>\r\n                </CRow>\r\n                <CRow>\r\n                  {has_permission(\"projects.add_projects\") && (\r\n                    <div className=\"col-lg-6 mb-3\">\r\n                      <CLabel className=\"custom-label-wbs5\">Start date</CLabel>\r\n                      <CInput\r\n                        id=\"start_date\"\r\n                        name=\"start_date\"\r\n                        type=\"date\"\r\n                        className=\"custom-forminput-5\"\r\n                        onChange={formWbsUpdate.handleChange}\r\n                        value={formWbsUpdate.values.start_date}\r\n                      ></CInput>\r\n                    </div>\r\n                  )}\r\n                  {has_permission(\"projects.add_projects\") && (\r\n                    <div className=\"col-lg-6 mb-3\">\r\n                      <CLabel className=\"custom-label-wbs5\">End date</CLabel>\r\n                      <CInput\r\n                        id=\"end_date\"\r\n                        name=\"end_date\"\r\n                        type=\"date\"\r\n                        className=\"custom-forminput-5\"\r\n                        onChange={formWbsUpdate.handleChange}\r\n                        value={formWbsUpdate.values.end_date}\r\n                        // disabled\r\n                      ></CInput>\r\n                    </div>\r\n                  )}\r\n\r\n                  {!has_permission(\"projects.add_projects\") && (\r\n                    <div className=\"col-lg-6 mb-3\">\r\n                      <CLabel className=\"custom-label-wbs5\">Start date</CLabel>\r\n                      <CInput\r\n                        id=\"start_date\"\r\n                        name=\"start_date\"\r\n                        type=\"date\"\r\n                        className=\"custom-forminput-5\"\r\n                        onChange={formWbsUpdate.handleChange}\r\n                        value={formWbsUpdate.values.start_date}\r\n                        disabled\r\n                      ></CInput>\r\n                    </div>\r\n                  )}\r\n                  {!has_permission(\"projects.add_projects\") && (\r\n                    <div className=\"col-lg-6 mb-3\">\r\n                      <CLabel className=\"custom-label-wbs5\">End date</CLabel>\r\n                      <CInput\r\n                        id=\"end_date\"\r\n                        name=\"end_date\"\r\n                        type=\"date\"\r\n                        className=\"custom-forminput-5\"\r\n                        onChange={formWbsUpdate.handleChange}\r\n                        value={formWbsUpdate.values.end_date}\r\n                        disabled\r\n                      ></CInput>\r\n                    </div>\r\n                  )}\r\n                </CRow>\r\n                {/*Actual work today */}\r\n                <CRow>\r\n                  <div className=\"col-lg-12 mb-3\">\r\n                    <CLabel className=\"custom-label-wbs5\">\r\n                      Actual Work Today\r\n                    </CLabel>\r\n                    <CInput\r\n                      id=\"actual_work_done\"\r\n                      type=\"text\"\r\n                      name=\"actual_work_done\"\r\n                      className=\"custom-forminpput-5\"\r\n                      onChange={(e) => {\r\n                        formWbsUpdate.setFieldValue(\r\n                          \"actual_work_done\",\r\n                          e.target.value\r\n                        );\r\n                        if (\r\n                          e.target.value == null ||\r\n                          e.target.value.length == 0\r\n                        ) {\r\n                          setHrsWorked(true);\r\n                        } else {\r\n                          setHrsWorked(false);\r\n                        }\r\n                      }}\r\n                      value={formWbsUpdate.values.actual_work_done}\r\n                    ></CInput>\r\n                    {formWbsUpdate.errors.actual_work_done && (\r\n                      <p\r\n                        className=\"error\"\r\n                        style={{ fontSize: \"14px !important\" }}\r\n                      >\r\n                        {formWbsUpdate.errors.actual_work_done}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </CRow>\r\n                <CRow>\r\n                  <div className=\"col-lg-12 mb-3\">\r\n                    <CLabel className=\"custom-label-wbs5\">Hours worked</CLabel>\r\n                    <CInput\r\n                      id=\"hours_worked\"\r\n                      name=\"hours_worked\"\r\n                      type=\"number\"\r\n                      className=\"custom-forminput-5\"\r\n                      onChange={formWbsUpdate.handleChange}\r\n                      value={formWbsUpdate.values.hours_worked}\r\n                      disabled={hrsWorked}\r\n                      min=\"0.00\"\r\n                    ></CInput>\r\n                  </div>\r\n                </CRow>\r\n                <CRow>\r\n                  <div className=\"col-lg-12 mb-3\">\r\n                    <CLabel className=\"custom-label-wbs5\">Comments</CLabel>\r\n                    <CTextarea\r\n                      maxLength='200'\r\n                      id=\"comments\"\r\n                      name=\"comments\"\r\n                      className=\"custom-forminput-5\"\r\n                      onChange={formWbsUpdate.handleChange}\r\n                      value={formWbsUpdate.values.comments}\r\n                    ></CTextarea>\r\n                    <div className=\"float-right\">\r\n                      {formWbsUpdate.values.comments.length}/200\r\n                    </div>\r\n                  </div>\r\n                </CRow>\r\n                <CRow>\r\n                  <CCol className=\"col-lg-6\">\r\n                    <WBSFileUpload files={files} setFiles={setDocFiles} />\r\n                  </CCol>\r\n                  <CCol className=\"col-lg-6\">\r\n                    <div>\r\n                      Uploaded Documents\r\n                    </div>\r\n                    <ul>\r\n                    {props.data.files.length>0 && Array.from(props.data.files).map((item,idx)=>(\r\n                      <li><a key={idx} href=\"javascript:void(0);\" style={{textDecoration:'underline'}} onClick={()=>download(BASE_URL+item.file,'test.jpg')}>{idx+1}. {String(item.file).split('/').pop().slice(0,30)}</a></li>\r\n                    ))}\r\n                    </ul>\r\n                    \r\n                  </CCol>\r\n                </CRow>\r\n                {props.data.assignee.id == sessionStorage.getItem(USER_ID) && (\r\n                  <div>\r\n                    {is_form_submitting() == true ? (\r\n                      <LinearProgress />\r\n                    ) : (\r\n                      <div>\r\n                        {props.data.status != 3 && props.data.status != 4 && (\r\n                          <CButton\r\n                            type=\"button\"\r\n                             //onClick= {handleUpdate()}\r\n                            onClick={formWbsUpdate.handleSubmit}\r\n                            color=\"primary\"\r\n                          >\r\n                            Update\r\n                          </CButton>\r\n                        )}{\" \"}\r\n                        <CButton color=\"secondary\" onClick={props.toggle}>\r\n                          Cancel\r\n                        </CButton>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </CForm>\r\n            </div>\r\n\r\n            <CRow className=\"col-lg-4 mb-3\">\r\n              <div>\r\n                <CCol md=\"12\">\r\n                    <p>\r\n                      Work Package Number: <br />\r\n                      <span className=\"wbs-reporter-name\">\r\n                        {props.data.project.work_package_number}\r\n                      </span>\r\n                    </p>\r\n                </CCol>\r\n                <CCol md=\"12\">\r\n                  <p>\r\n                    Assignee:\r\n                    <br></br>\r\n                    {/* Pial Noman */}\r\n                    <span className=\"wbs-reporter-name\">\r\n                      {props.data.assignee?.first_name != undefined &&\r\n                        props.data.assignee.first_name +\r\n                          \" \" +\r\n                          props.data.assignee.last_name}\r\n                    </span>\r\n                  </p>\r\n                </CCol>\r\n                <CCol md=\"12\">\r\n                  <p>\r\n                    Created By:\r\n                    <br></br>\r\n                    {/* Pial Noman */}\r\n                    <span className=\"wbs-reporter-name\">\r\n                      {props.data.reporter?.first_name != undefined &&\r\n                        props.data.reporter.first_name +\r\n                          \" \" +\r\n                          props.data.reporter.last_name}\r\n                    </span>\r\n                  </p>\r\n                </CCol>\r\n                <CCol md=\"12\">\r\n                  <p className=\"custom-label-wbs5\">\r\n                    Planned Hours :<br></br>\r\n                    {Number(parseFloat(plannedHours)).toFixed(2)}\r\n                  </p>\r\n                </CCol>\r\n                <CCol md=\"12\">\r\n                  <p>\r\n                    Actual Hours :<br></br>\r\n                    {Number(actualHour).toFixed(2)}\r\n                  </p>\r\n                </CCol>\r\n                <CCol md=\"12\">\r\n                  <p>\r\n                    Balance hours:\r\n                    <br></br>\r\n                    {remaininghrs == null ? (\r\n                      <LinearProgress />\r\n                    ) : (\r\n                      Number(remaininghrs).toFixed(2)\r\n                    )}\r\n                  </p>\r\n                </CCol>\r\n\r\n                {/**actual work list show */}\r\n                <CCol md=\"12\">\r\n                  <div className=\"task-list\">\r\n                    <p>Actual Worked :</p>\r\n                    <ol className=\"task-list-show\">\r\n                      {props.timeCardList?.data != undefined\r\n                        ? Array.from(props.timeCardList.data).map((item) => (\r\n                            <li className=\"task-list-show-item\">\r\n                              {item.actual_work_done +\r\n                                \" ➤ \" +\r\n                                Number(item.hours_today).toFixed(2) +\r\n                                \" hr(s)\"}\r\n                                <p>@ {item.date_updated} </p>\r\n                            </li>\r\n                          ))\r\n                        : \"No task has been done so far.\"}\r\n                    </ol>\r\n                  </div>\r\n                </CCol>\r\n              </div>\r\n            </CRow>\r\n          </CRow>\r\n        </CModalBody>\r\n      </CModal>\r\n    </>\r\n  );\r\n};\r\nexport default WbsModal;\r\n"],"sourceRoot":""}