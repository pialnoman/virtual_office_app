{"version":3,"sources":["pages/profile/profileView.js","components/linear-progress-bar/linear-progress-bar.js","../node_modules/@mui/material/LinearProgress/linearProgressClasses.js","../node_modules/@mui/material/LinearProgress/LinearProgress.js","assets/icons/Showpass-show.svg","assets/icons/Hide.svg"],"names":["UserProfile","_profile_details$slc_","_profile_details$slc_2","history","useHistory","id","useParams","_useState","useState","_useState2","_slicedToArray","revealOldPwd","setRevealOldPwd","_useState3","_useState4","revealNewPwd","setRevealNewPwd","_useState5","_useState6","revealConfPwd","setRevealConfPwd","_useState7","_useState8","profile_details","setProfileDetails","_useState9","_useState10","initialBloodGroup","setInitialBloodGroup","inputFile","useRef","_useState11","_useState12","setImage","_useState13","BASE_URL","profile_pic","_useState14","avatar","setAvatar","_useState15","_useState16","visible","setVisible","dispatch","useDispatch","profileEditForm","console","log","profile_update_form","setValues","first_name","last_name","email","phone","address","blood_group","_useState17","_useState18","tab","setTab","change_pass_form","useFormik","initialValues","old_password","new_password","new_password_confirm","validateOnChange","validateOnBlur","validate","values","errors","String","length","onSubmit","formData","FormData","_i","_Object$entries","Object","entries","_Object$entries$_i","key","value","append","API","put","then","res","status","resetForm","swal","catch","err","response","update_profile_image","image","image_form_data","FILE_API","post","sessionStorage","getItem","USER_ID","useEffect","get","data","window","scrollTo","label","success","fetchPersonalDetails","capitalize","string","undefined","charAt","toUpperCase","slice","toLowerCase","projects","useSelector","state","remaining_hours","forEach","item","parseFloat","totalProjectHrs","total_hours","planned_hours","calculate_progress_in_percentage","pmprojects","temp","has_permission","pm_projects","idx","project","push","_useState19","_useState20","_jsx","_Fragment","children","_jsxs","CContainer","CModal","closeOnBackdrop","alignment","show","onClose","CModalHeader","closeButton","CModalTitle","className","CModalBody","CForm","CRow","CLabel","htmlFor","CInput","type","name","onChange","handleChange","readOnly","touched","style","color","Select","options","CButton","onClick","handleSubmit","disabled","isValid","CTabs","activeTab","CNav","variant","CNavItem","CNavLink","CIcon","CTabContent","CTabPane","CCard","CImg","alt","src","display","ref","event","size","URL","createObjectURL","alert","onImageChange","target","files","current","click","CCardBody","slc_details","slc","Array","from","map","pathname","work_package_number","sub_task","planned_delivery_date","LinearWithValueLabel","progress","subtasks","CAlert","title","hidePwdImg","showPwdImg","prevState","LinearProgressWithLabel","props","Box","sx","alignItems","width","mr","LinearProgress","_objectSpread","minWidth","Typography","concat","Math","round","_React$useState","React","_React$useState2","getLinearProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_t5","_t6","indeterminate1Keyframe","keyframes","_templateObject","_taggedTemplateLiteral","indeterminate2Keyframe","_templateObject2","bufferKeyframe","_templateObject3","getColorShade","theme","vars","palette","mode","lighten","main","darken","LinearProgressRoot","styled","overridesResolver","styles","ownerState","root","_ref","position","overflow","height","zIndex","colorAdjust","backgroundColor","content","left","top","right","bottom","opacity","transform","LinearProgressDashed","dashed","_ref2","marginTop","backgroundImage","backgroundSize","backgroundPosition","css","_templateObject4","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","_ref3","transition","transformOrigin","_ref4","_templateObject5","LinearProgressBar2","bar2Indeterminate","bar2Buffer","_ref5","_ref6","_templateObject6","inProps","useThemeProps","_props$color","valueBuffer","_props$variant","other","_objectWithoutProperties","_excluded","classes","slots","bar1","bar2","composeClasses","useUtilityClasses","useTheme","rootProps","inlineStyles","direction","process","clsx","role"],"mappings":"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","file":"static/js/35.62f672fd.chunk.js","sourcesContent":["import CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  CLabel,\r\n  CContainer,\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CTabPane,\r\n  CTabContent,\r\n  CRow,\r\n  CTabs,\r\n  CCard,\r\n  CButton,\r\n  CImg,\r\n  CCardBody,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CForm,\r\n  CInput,\r\n  CAlert,\r\n} from \"@coreui/react\";\r\nimport Select from \"react-select\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./profileView.css\";\r\nimport PassWordChangeForm from \"../../components/changeUserPasswordForm/changePassword\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport { API, BASE_URL, FILE_API, USER_ID } from \"../../Config\";\r\nimport { fetchPersonalDetails } from \"../../store/slices/ProfileSlice\";\r\nimport swal from \"sweetalert\";\r\nimport hidePwdImg from \"../../assets/icons/Showpass-show.svg\";\r\nimport showPwdImg from \"../../assets/icons/Hide.svg\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LinearWithValueLabel from \"../../components/linear-progress-bar/linear-progress-bar\";\r\nimport { has_permission } from \"../../helper.js\";\r\n\r\nconst UserProfile = () => {\r\n  let history = useHistory();\r\n  const onButtonClick = () => {\r\n    // `current` points to the mounted file input element\r\n  };\r\n  const blood_groups = [\r\n    { value: \"A+\", label: \"A+\" },\r\n    { value: \"A-\", label: \"A-\" },\r\n    { value: \"B+\", label: \"B+\" },\r\n    { value: \"B-\", label: \"B-\" },\r\n    { value: \"AB+\", label: \"AB+\" },\r\n    { value: \"AB-\", label: \"AB-\" },\r\n    { value: \"O+\", label: \"O+\" },\r\n    { value: \"O-\", label: \"O-\" },\r\n  ];\r\n  const { id } = useParams();\r\n  const [revealOldPwd, setRevealOldPwd] = useState(false);\r\n  const [revealNewPwd, setRevealNewPwd] = useState(false);\r\n  const [revealConfPwd, setRevealConfPwd] = useState(false);\r\n  // const profile_details = useSelector(state => state.profile.data)\r\n  const [profile_details, setProfileDetails] = useState();\r\n\r\n  const [initialBloodGroup, setInitialBloodGroup] = useState(\"\");\r\n  const inputFile = useRef(null);\r\n  const [image, setImage] = useState();\r\n  const [avatar, setAvatar] = useState(\r\n    profile_details\r\n      ? BASE_URL + profile_details.profile_pic\r\n      : \"avatars/user-avatar-default.png\"\r\n  );\r\n  const [visible, setVisible] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const onImageChange = (image) => {\r\n    // setImage(image);\r\n    // setAvatar(URL.createObjectURL(image));\r\n    // update_profile_image(image);\r\n    if (image.size <= 100 * 1024) { // Check if image size is less than or equal to 100KB\r\n      setImage(image);\r\n      setAvatar(URL.createObjectURL(image));\r\n      update_profile_image(image);\r\n    } else {\r\n      alert(\"Please select an image with a size less than or equal to 100KB.\");\r\n    }\r\n  };\r\n  const changeImageClick = () => {\r\n    inputFile.current.click();\r\n  };\r\n  const profileEditForm = () => {\r\n    console.log(\"values\");\r\n    setVisible(!visible);\r\n    profile_update_form.setValues({\r\n      first_name: profile_details.first_name,\r\n      last_name: profile_details.last_name,\r\n      email: profile_details.email,\r\n      phone: profile_details.phone,\r\n      address: profile_details.address,\r\n      blood_group: profile_details.blood_group,\r\n    });\r\n  };\r\n  const handleBloodGroupChange = (values) => {\r\n    console.log(values);\r\n    profile_update_form.setValues({\r\n      first_name: profile_update_form.values.first_name,\r\n      last_name: profile_update_form.values.last_name,\r\n      email: profile_update_form.values.email,\r\n      phone: profile_update_form.values.phone,\r\n      address: profile_update_form.values.address,\r\n      blood_group: values.value,\r\n    });\r\n    setInitialBloodGroup({ value: values.value, label: values.label });\r\n  };\r\n  const validateChangePassForm = (values) => {\r\n    const errors = {};\r\n    if (!values.old_password) errors.old_password = \"Old Password Required\";\r\n    if (\r\n      String(values.new_password).length < 8 ||\r\n      !values.new_password ||\r\n      values.new_password != values.new_password_confirm\r\n    )\r\n      errors.new_password = \"Invalid New Password\";\r\n    return errors;\r\n  };\r\n  const [tab, setTab] =  useState(\"viewProfile\")\r\n  const change_password = (values) => {\r\n    let formData = new FormData();\r\n    console.log(\"values\", values);\r\n    for (const [key, value] of Object.entries(change_pass_form.values)) {\r\n      if (key != \"new_password_confirm\") {\r\n        formData.append(key, value);\r\n      }\r\n    }\r\n    API.put(\"auth/change/password/\", formData)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status == 200) {\r\n          change_pass_form.resetForm();\r\n          setTab(\"viewProfile\")\r\n          console.log(\"view profile\", tab)\r\n          swal(\"Your Password has been Updated!\", \"\", \"success\");\r\n         // history.push({ pathname: '/dashboard/WBS/create-wbs'})\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status == 400) {\r\n          swal(\"Incorrect\", \"Bad Request\", \"warning\");\r\n        }\r\n      });\r\n  };\r\n  const change_pass_form = useFormik({\r\n    initialValues: {\r\n      old_password: \"\",\r\n      new_password: \"\",\r\n      new_password_confirm: \"\",\r\n    },\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validate: validateChangePassForm,\r\n    onSubmit: change_password,\r\n  });\r\n  const validate_profile_update_form = (values) => {\r\n    const errors = {};\r\n    if (!values.first_name) errors.first_name = \"First Name is required\";\r\n    if (!values.last_name) errors.last_name = \"Last Name is required\";\r\n    if (!values.email) errors.email = \"Email is required\";\r\n    if (!values.address) errors.address = \"Address is required\";\r\n    if (!values.blood_group) errors.blood_group = \"Blood group is required\";\r\n    return errors;\r\n  };\r\n  const update_profile = (values) => {\r\n    console.log(values);\r\n    API.post(\r\n      \"auth/profile/update/\" + sessionStorage.getItem(USER_ID) + \"/\",\r\n      profile_update_form.values\r\n    ).then((res) => {\r\n      console.log(res);\r\n      if (res.status == 201 && res.data.success == \"True\") {\r\n        dispatch(fetchPersonalDetails(sessionStorage.getItem(USER_ID)));\r\n        setVisible(false);\r\n        swal(\"Your Profile has been Updated!\", \"\", \"success\");\r\n      }\r\n    });\r\n  };\r\n  const update_profile_image = (image) => {\r\n    let image_form_data = new FormData();\r\n    image_form_data.append(\"profile_pic\", image);\r\n    console.log(\"image\", image);\r\n    FILE_API.post(\r\n      \"auth/change/profile/image/\" + sessionStorage.getItem(USER_ID) + \"/\",\r\n      image_form_data\r\n    )\r\n      .then((res) => {\r\n        if (res.status == 201) {\r\n          swal(\"Profile Picture Updated!\", \"\", \"success\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.status == 400) {\r\n          swal(\"Incorrect, Bad Request\", \"\", \"warning\");\r\n        }\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    // window.scrollTo(0, 0);\r\n    // setInitialBloodGroup({ value: profile_details.blood_group, label: profile_details.blood_group })\r\n    // setAvatar(profile_details.profile_pic ? (BASE_URL + profile_details.profile_pic) : \"avatars/user-avatar-default.png\")\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"id from route\", id);\r\n    if (id) {\r\n      API.get(\"auth/profile/details/\" + id + \"/\")\r\n        .then((res) => {\r\n          console.log(\"res\", res.data);\r\n          // profile_details=res.data.data\r\n          setProfileDetails(res.data.data);\r\n          window.scrollTo(0, 0);\r\n          setInitialBloodGroup({\r\n            value: res.data.data.blood_group,\r\n            label: res.data.data.blood_group,\r\n          });\r\n          setAvatar(\r\n            res.data.data.profile_pic\r\n              ? BASE_URL + res.data.data.profile_pic\r\n              : \"avatars/user-avatar-default.png\"\r\n          );\r\n        })\r\n        .catch((err) => {});\r\n    }\r\n  }, [id]);\r\n  const profile_update_form = useFormik({\r\n    initialValues: {\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      address: \"\",\r\n      blood_group: \"\",\r\n    },\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validate: validate_profile_update_form,\r\n    onSubmit: update_profile,\r\n  });\r\n  function capitalize(string) {\r\n    if (string != undefined) {\r\n      return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  // const projects = useSelector(state => {\r\n  //     let temp = []\r\n  //     let subtask =[]\r\n  //     state.projects.data.forEach((item, idx) => {\r\n  //         if (item.project.status == 0) {\r\n  //             temp.push(item)\r\n  //             console.log(\"subtask\", item.sub_task)\r\n  //             subtask.push(item.sub_task)\r\n  //         }\r\n  //     })\r\n  //      console.log(\"projects\", state)\r\n  //     console.log('temp', temp)\r\n  //     console.log(\"task\", subtask)\r\n\r\n  //     return temp;\r\n\r\n  // })\r\n\r\n  const projects = useSelector((state) => state.projects.data);\r\n  useEffect(() => {\r\n    console.log(\"ProjectsList\", projects);\r\n  }, [projects]);\r\n\r\n  const remaining_hours = (projects) => {\r\n    let remaining_hours = 0;\r\n    projects.forEach((item) => {\r\n      console.log(item.remaining_hours);\r\n      remaining_hours += parseFloat(item.remaining_hours);\r\n    });\r\n    return remaining_hours;\r\n  };\r\n\r\n  function totalProjectHrs(projects) {\r\n    let total_hours = 0;\r\n    projects.forEach((item) => {\r\n      console.log(item.planned_hours);\r\n      total_hours += parseFloat(item.planned_hours);\r\n    });\r\n    return total_hours;\r\n  }\r\n\r\n  function calculate_progress_in_percentage(total_hours, remaining_hours) {\r\n    let worked_hours = parseFloat(total_hours) - parseFloat(remaining_hours);\r\n    return (100 * worked_hours) / parseFloat(total_hours);\r\n  }\r\n\r\n  const pmprojects = useSelector((state) => {\r\n    let temp = [];\r\n    if (has_permission(\"projects.add_projects\")) {\r\n      state.projects.pm_projects.forEach((item, idx) => {\r\n        if (item.project.status == 0) {\r\n          temp.push(item);\r\n          // temp_statues.push(false)\r\n        }\r\n      });\r\n    }\r\n    // setStatuses(temp_statues)\r\n    console.log(\"pmtemp\", temp);\r\n    return temp;\r\n  });\r\n  const [activeKey, setActiveKey] = useState(1);\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CModal\r\n          closeOnBackdrop={false}\r\n          alignment=\"center\"\r\n          show={visible}\r\n          onClose={profileEditForm}\r\n        >\r\n          <CModalHeader closeButton>\r\n            <CModalTitle className=\"modal-title-profile\">\r\n              <span className=\"edit-profile-form-header\">\r\n                Edit Profile Info\r\n              </span>\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n\r\n          <CModalBody>\r\n            <CContainer>\r\n              <CForm>\r\n                <CRow>\r\n                  {/**First Name */}\r\n                  <div className=\"col-md-6 mb-3\">\r\n                    <CLabel className=\"custom-label-5\" htmlFor=\"userFName\">\r\n                      First Name *\r\n                    </CLabel>\r\n                    <CInput\r\n                      type=\"text\"\r\n                      name=\"first_name\"\r\n                      id=\"first_name\"\r\n                      className=\"custom-forminput-6\"\r\n                      value={profile_update_form.values.first_name}\r\n                      onChange={profile_update_form.handleChange}\r\n                    />\r\n                  </div>\r\n                  {/**Last Name */}\r\n                  <div className=\"col-md-6 mb-3\">\r\n                    <CLabel className=\"custom-label-5\" htmlFor=\"userLName\">\r\n                      Last Name *\r\n                    </CLabel>\r\n                    <CInput\r\n                      type=\"text\"\r\n                      name=\"last_name\"\r\n                      id=\"last_name\"\r\n                      className=\"custom-forminput-6\"\r\n                      value={profile_update_form.values.last_name}\r\n                      onChange={profile_update_form.handleChange}\r\n                    />\r\n                  </div>\r\n                  {/**Job title */}\r\n                  <div className=\"col-md-12 mb-3\">\r\n                    <CLabel className=\"custom-label-5\" htmlFor=\"uEmail\">\r\n                      Email *\r\n                    </CLabel>\r\n                    <CInput\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      className=\"custom-forminput-6\"\r\n                      value={profile_update_form.values.email}\r\n                      onChange={profile_update_form.handleChange}\r\n                      readOnly\r\n                    ></CInput>\r\n                  </div>\r\n                  {/**Phone */}\r\n                  <div className=\"col-md-12 mb-3\">\r\n                    <CLabel className=\"custom-label-5\" htmlFor=\"uPhoneNo\">\r\n                      Phone *\r\n                    </CLabel>\r\n                    <CInput\r\n                      type=\"tel\"\r\n                      name=\"phone\"\r\n                      id=\"phone\"\r\n                      value={profile_update_form.values.phone}\r\n                      onChange={profile_update_form.handleChange}\r\n                      className=\"custom-forminput-6\"\r\n                    ></CInput>\r\n                  </div>\r\n                  {/**address */}\r\n                  <div className=\"col-md-12 mb-3\">\r\n                    <CLabel className=\"custom-label-5\" htmlFor=\"Address\">\r\n                      Address *\r\n                    </CLabel>\r\n                    <CInput\r\n                      type=\"text\"\r\n                      name=\"address\"\r\n                      id=\"address\"\r\n                      value={profile_update_form.values.address}\r\n                      onChange={profile_update_form.handleChange}\r\n                      className=\"custom-forminput-6\"\r\n                    ></CInput>\r\n                    {profile_update_form.touched.address &&\r\n                      profile_update_form.errors.address && (\r\n                        <small style={{ color: \"red\" }}>\r\n                          {profile_update_form.errors.address}\r\n                        </small>\r\n                      )}\r\n                  </div>\r\n                  {/**blood_group */}\r\n                  <div className=\"col-md-12 mb-3\">\r\n                    <CLabel className=\"custom-label-5\" htmlFor=\"blood_group\">\r\n                      Blood Group *\r\n                    </CLabel>\r\n                    <Select\r\n                      id=\"blood_group\"\r\n                      value={initialBloodGroup}\r\n                      onChange={handleBloodGroupChange}\r\n                      className=\"custom-forminput-6\"\r\n                      options={blood_groups}\r\n                    ></Select>\r\n                  </div>\r\n\r\n                  {/**Button groups */}\r\n                  <div className=\"col-md-12 \">\r\n                    <div className=\"project-form-button-holders mt-3\">\r\n                      <CButton\r\n                        className=\"profile-form-btn update-profile\"\r\n                        onClick={profile_update_form.handleSubmit}\r\n                        type=\"button\"\r\n                        disabled={!profile_update_form.isValid}\r\n                      >\r\n                        Update Info\r\n                      </CButton>\r\n                      <CButton\r\n                        className=\"profile-form-btn cancel-update\"\r\n                        type=\"reset\"\r\n                        onClick={() => setVisible(!visible)}\r\n                      >\r\n                        Cancel\r\n                      </CButton>\r\n                    </div>\r\n                  </div>\r\n                </CRow>\r\n              </CForm>\r\n            </CContainer>\r\n          </CModalBody>\r\n        </CModal>\r\n\r\n        {/**Main Content */}\r\n      \r\n        <CTabs activeTab={tab}>\r\n          {console.log(\"tab0\", tab)}\r\n          <CNav variant=\"tabs\" className=\"tab-style\">\r\n            {/**View Profile */}\r\n            <CNavItem>\r\n              <CNavLink data-tab=\"viewProfile\" className=\"special\">\r\n                <CIcon name=\"cil-user\" /> View Profile\r\n              </CNavLink>\r\n            </CNavItem>\r\n            {/**change password */}\r\n            <CNavItem>\r\n              <CNavLink\r\n                disabled={\r\n                  profile_details?.id != sessionStorage.getItem(USER_ID)\r\n                    ? true\r\n                    : false\r\n                }\r\n                data-tab=\"changePassword\"\r\n                className=\"special\"\r\n              >\r\n                <CIcon name=\"cil-pen-alt\" className=\"mr-1\" />\r\n                Change Password\r\n              </CNavLink>\r\n            </CNavItem>\r\n          </CNav>\r\n          {/**___________nav tab details______ */}\r\n          <CTabContent>\r\n            {/**_____VIEW PROFILE____ */}\r\n            \r\n            <CTabPane data-tab=\"viewProfile\" activeTab={tab===\"viewProfile\"?true:false}>\r\n              {console.log(\"profile tab\", tab)}\r\n              {profile_details != undefined && (\r\n                <CContainer>\r\n                  <h3 className=\"profile-page-header\">Profile Details</h3>\r\n                  <CRow>\r\n                    <div className=\"col-lg-8 offset-lg-2\">\r\n                      <CCard className=\"card-view-profile mt-3\">\r\n                        <div className=\"user-profile-pic-div text-center\">\r\n                          <CImg\r\n                            alt=\"click to upload image\"\r\n                            className=\"mx-auto rounded-circle update-img\"\r\n                            src={avatar}\r\n                          />\r\n\r\n                          {/**__PRO PIC UP BUTTON__ */}\r\n                          <input\r\n                            style={{ display: \"none\" }}\r\n                            ref={inputFile}\r\n                            type=\"file\"\r\n                            onChange={(event) => {\r\n                              onImageChange(event.target.files[0]);\r\n                            }}\r\n                          />\r\n                          {profile_details.id ==\r\n                            sessionStorage.getItem(USER_ID) && (\r\n                            <CButton\r\n                              onClick={changeImageClick}\r\n                              type=\"button\"\r\n                              className=\"d-block mx-auto change-img-btn mt-1\"\r\n                            >\r\n                              {\" \"}\r\n                              <CIcon name=\"cil-camera\"></CIcon> Change Picture\r\n                            </CButton>\r\n                          )}\r\n                        </div>\r\n                        <CCardBody>\r\n                          <hr />\r\n                          {profile_details.id ==\r\n                            sessionStorage.getItem(USER_ID) && (\r\n                            <CButton\r\n                              className=\"edit-profile mb-3\"\r\n                              onClick={() => profileEditForm()}\r\n                            >\r\n                              <CIcon name=\"cil-pen\" className=\"mr-1\" />\r\n                              Edit Info\r\n                            </CButton>\r\n                          )}\r\n\r\n                          {/**info show */}\r\n                          <div className=\"row justify-content-center\">\r\n                            <div className=\"col-md-6 col-lg-4\">\r\n                              <h5 className=\"info-header-1\">Full Name</h5>\r\n                              <h5 className=\"profile-details-points child\">\r\n                                {capitalize(profile_details.first_name) +\r\n                                  \" \" +\r\n                                  capitalize(profile_details.last_name)}{\" \"}\r\n                              </h5>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-lg-4\">\r\n                              <h5 className=\"info-header-1\"> Email</h5>\r\n                              <h5 className=\"profile-details-points-email\">\r\n                                {profile_details.email}\r\n                              </h5>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-lg-4\">\r\n                              <h5 className=\"info-header-1\">Job title</h5>\r\n                              <h5 className=\"profile-details-points-email\">\r\n                                {profile_details?.slc_details?.slc?.name}\r\n                              </h5>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-lg-4\">\r\n                              <h5 className=\"info-header-1\"> Phone</h5>\r\n                              <h5 className=\"profile-details-points child\">\r\n                                +{profile_details.phone}\r\n                              </h5>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-lg-4\">\r\n                              <h5 className=\"info-header-1\"> Address</h5>\r\n                              <h5 className=\"profile-details-points child\">\r\n                                {profile_details.address}\r\n                              </h5>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-lg-4\">\r\n                              <h5 className=\"info-header-1\"> Blood Group</h5>\r\n                              <h5 className=\"profile-details-points child\">\r\n                                {profile_details.blood_group}\r\n                              </h5>\r\n                            </div>\r\n\r\n                            <CRow className=\"mt-5\">\r\n                              <CTabs activeTab=\"workingon\">\r\n                                <CNav variant=\"tabs\">\r\n                                  {/**View Profile */}\r\n                                  <CNavItem>\r\n                                    <CNavLink data-tab=\"workingon\">\r\n                                      Working On\r\n                                    </CNavLink>\r\n                                  </CNavItem>\r\n                                  {/* working on */}\r\n                                  {has_permission(\"projects.add_projects\") && (\r\n                                    <CNavItem>\r\n                                      <CNavLink data-tab=\"managing\">\r\n                                        Managing\r\n                                      </CNavLink>\r\n                                    </CNavItem>\r\n                                  )}\r\n                                </CNav>\r\n                                {/**___________working on tab details______ */}\r\n                                <CTabContent>\r\n                                  {/**_____WORKING ON____ */}\r\n                                  <CTabPane data-tab=\"workingon\">\r\n                                    <div className=\"mt-4\">\r\n                                      {/* <h3 className=\"projectsHeader\">\r\n                                                                Working On\r\n                                                            </h3> */}\r\n\r\n                                      <div className=\"card-holder1\">\r\n                                        {projects != undefined &&\r\n                                          Array.from(projects)\r\n                                            .slice(0, 3)\r\n                                            .map((item, idx) => (\r\n                                              <CCard\r\n                                                className=\"project-card1\"\r\n                                                key={idx}\r\n                                                onClick={() =>\r\n                                                  history.push({\r\n                                                    pathname:\r\n                                                      \"/dashboard/Projects/assigned-projects/details/\" +\r\n                                                      item.project\r\n                                                        .work_package_number +\r\n                                                      \"/\",\r\n                                                  })\r\n                                                }\r\n                                              >\r\n                                                <CCardBody>\r\n                                                  {/* <h6 className=\"id-no1\">Work Package Number: # {item.project.work_package_number}</h6> */}\r\n                                                  <h5 className=\"card-details1\">\r\n                                                    <span className=\"p-header-3\">\r\n                                                      Project Name:{\" \"}\r\n                                                    </span>{\" \"}\r\n                                                    {item.project.sub_task}\r\n                                                  </h5>\r\n\r\n                                                  <h5 className=\"card-details1\">\r\n                                                    <span className=\"p-header-3\">\r\n                                                      Planned Delivery Date :{\" \"}\r\n                                                    </span>\r\n                                                    {\r\n                                                      item.project\r\n                                                        .planned_delivery_date\r\n                                                    }\r\n                                                  </h5>\r\n                                                  <div>\r\n                                                    <h5 className=\"card-details1\">\r\n                                                      <span className=\"p-header-3\">\r\n                                                        Progress :\r\n                                                        <LinearWithValueLabel\r\n                                                          progress={() =>\r\n                                                            calculate_progress_in_percentage(\r\n                                                              totalProjectHrs(\r\n                                                                item.subtasks\r\n                                                              ),\r\n                                                              remaining_hours(\r\n                                                                item.subtasks\r\n                                                              )\r\n                                                            )\r\n                                                          }\r\n                                                        />\r\n                                                      </span>\r\n                                                    </h5>\r\n                                                  </div>\r\n                                                </CCardBody>\r\n                                              </CCard>\r\n                                            ))}\r\n                                        {/**If no projects */}\r\n                                        {projects == \"\" ||\r\n                                        projects == undefined ? (\r\n                                          <CAlert\r\n                                            className=\"no-value-show-alert\"\r\n                                            color=\"primary\"\r\n                                          >\r\n                                            Currently there are no projects\r\n                                            assigned to you\r\n                                          </CAlert>\r\n                                        ) : null}\r\n                                      </div>\r\n                                      {projects != undefined && (\r\n                                        <div className=\"button-holder3\">\r\n                                          <CButton\r\n                                            className=\"tiny-buttons1\"\r\n                                            onClick={() =>\r\n                                              history.push({\r\n                                                pathname:\r\n                                                  \"/dashboard/Projects/assigned-projects\",\r\n                                              })\r\n                                            }\r\n                                          >\r\n                                            View all\r\n                                          </CButton>\r\n                                        </div>\r\n                                      )}\r\n                                    </div>\r\n                                  </CTabPane>\r\n\r\n                                  {has_permission(\"projects.add_projects\") && (\r\n                                    <CTabPane data-tab=\"managing\">\r\n                                      <div className=\"mt-4\">\r\n                                        {/* <h3 className=\"projectsHeader\">\r\n                                                                Managing\r\n                                                            </h3> */}\r\n\r\n                                        <div className=\"card-holder1\">\r\n                                          {pmprojects != undefined &&\r\n                                            Array.from(pmprojects)\r\n                                              .slice(0, 3)\r\n                                              .map((item, idx) => (\r\n                                                <CCard\r\n                                                  className=\"project-card1\"\r\n                                                  key={idx}\r\n                                                  onClick={() =>\r\n                                                    history.push({\r\n                                                      pathname:\r\n                                                        \"/dashboard/Projects/my-projects/details/\" +\r\n                                                        item.project\r\n                                                          .work_package_number +\r\n                                                        \"/\",\r\n                                                    })\r\n                                                  }\r\n                                                >\r\n                                                  <CCardBody>\r\n                                                    <h5 className=\"card-details1\">\r\n                                                      <span className=\"p-header-3\">\r\n                                                        Project Name:{\" \"}\r\n                                                      </span>{\" \"}\r\n                                                      {item.project.sub_task}\r\n                                                    </h5>\r\n\r\n                                                    <h5 className=\"card-details1\">\r\n                                                      <span className=\"p-header-3\">\r\n                                                        Planned Delivery Date :{\" \"}\r\n                                                      </span>\r\n                                                      {\r\n                                                        item.project\r\n                                                          .planned_delivery_date\r\n                                                      }\r\n                                                    </h5>\r\n                                                    <div>\r\n                                                      <h5 className=\"card-details1\">\r\n                                                        <span className=\"p-header-3\">\r\n                                                          Progress :\r\n                                                          <LinearWithValueLabel\r\n                                                            progress={() =>\r\n                                                              calculate_progress_in_percentage(\r\n                                                                totalProjectHrs(\r\n                                                                  item.subtasks\r\n                                                                ),\r\n                                                                remaining_hours(\r\n                                                                  item.subtasks\r\n                                                                )\r\n                                                              )\r\n                                                            }\r\n                                                          />\r\n                                                        </span>\r\n                                                      </h5>\r\n                                                    </div>\r\n                                                  </CCardBody>\r\n                                                </CCard>\r\n                                              ))}\r\n                                          {/**If no projects */}\r\n                                          {pmprojects == \"\" ||\r\n                                          pmprojects == undefined ? (\r\n                                            <CAlert\r\n                                              className=\"no-value-show-alert\"\r\n                                              color=\"primary\"\r\n                                            >\r\n                                              Currently there are no projects\r\n                                              you are managing\r\n                                            </CAlert>\r\n                                          ) : null}\r\n                                        </div>\r\n                                        {pmprojects != undefined && (\r\n                                          <div className=\"button-holder3\">\r\n                                            <CButton\r\n                                              className=\"tiny-buttons1\"\r\n                                              onClick={() =>\r\n                                                history.push({\r\n                                                  pathname:\r\n                                                    \"/dashboard/Projects/my-projects\",\r\n                                                })\r\n                                              }\r\n                                            >\r\n                                              View all\r\n                                            </CButton>\r\n                                          </div>\r\n                                        )}\r\n                                      </div>\r\n                                    </CTabPane>\r\n                                  )}\r\n                                </CTabContent>\r\n                              </CTabs>\r\n                            </CRow>\r\n                          </div>\r\n\r\n                          {/* <div className=\"all-da-buttons-1\">\r\n                                                <CLabel>Assigned Projects</CLabel>\r\n                                                    {Array.from([{title:'ABC',work_package_index:'1001'}]).length > 0 && Array.from([{title:'ABC',work_package_index:'1001'}]).map((task, idx) => (\r\n                                                        <CButton key={idx} type=\"button\" className=\"package-button rounded-pill\" onClick={() => {  }}>\r\n                                                            {task.task_title}\r\n                                                            <span className=\"tooltiptext\">{task.work_package_index}</span>\r\n                                                        </CButton>\r\n                                                    ))}\r\n                                                </div> */}\r\n                        </CCardBody>\r\n                      </CCard>\r\n                    </div>\r\n                  </CRow>\r\n                </CContainer>\r\n              )}\r\n            </CTabPane>\r\n \r\n            {/**_____Change Password___ */}\r\n            <CTabPane data-tab=\"changePassword\" activeTab={tab===\"changePassword\"?true:false}>\r\n            {console.log(\"change tab\", tab)}\r\n              <CContainer>\r\n                <h3 className=\"profile-page-header\">Change Password</h3>\r\n                <CRow>\r\n                  <div className=\"col-lg-8 offset-lg-2 col-md-12\">\r\n                    <CCard className=\"mt-4 card-change-password\">\r\n                      <CCardBody>\r\n                        <CForm>\r\n                          <div className=\"mb-2\">\r\n                            <CLabel\r\n                              className=\"custom-label-5\"\r\n                              htmlFor=\"userOldPass\"\r\n                            >\r\n                              Old Password\r\n                            </CLabel>\r\n                            <div className=\"password-container\">\r\n                              <CInput\r\n                                type={revealOldPwd ? \"text\" : \"password\"}\r\n                                name=\"old_password\"\r\n                                id=\"old_password\"\r\n                                className=\"custom-forminput-6\"\r\n                                value={change_pass_form.values.old_password}\r\n                                onChange={change_pass_form.handleChange}\r\n                              />\r\n                              <img\r\n                                className=\"pwd-container-img\"\r\n                                title={\r\n                                  revealOldPwd\r\n                                    ? \"Hide Old password\"\r\n                                    : \"Show Old password\"\r\n                                }\r\n                                src={revealOldPwd ? hidePwdImg : showPwdImg}\r\n                                onClick={() =>\r\n                                  setRevealOldPwd((prevState) => !prevState)\r\n                                }\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          {/**New Password */}\r\n                          <div className=\"mb-2\">\r\n                            <CLabel\r\n                              className=\"custom-label-5\"\r\n                              htmlFor=\"userNewPass\"\r\n                            >\r\n                              New Password\r\n                            </CLabel>\r\n                            <div className=\"password-container\">\r\n                              <CInput\r\n                                type={revealNewPwd ? \"text\" : \"password\"}\r\n                                name=\"new_password\"\r\n                                id=\"new_password\"\r\n                                className=\"custom-forminput-6\"\r\n                                value={change_pass_form.values.new_password}\r\n                                onChange={change_pass_form.handleChange}\r\n                              />\r\n                              <img\r\n                                className=\"pwd-container-img\"\r\n                                title={\r\n                                  revealNewPwd\r\n                                    ? \"Hide New password\"\r\n                                    : \"Show New password\"\r\n                                }\r\n                                src={revealNewPwd ? hidePwdImg : showPwdImg}\r\n                                onClick={() =>\r\n                                  setRevealNewPwd((prevState) => !prevState)\r\n                                }\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          {/**Confirm new password */}\r\n                          <div className=\"mb-2\">\r\n                            <CLabel\r\n                              className=\"custom-label-5\"\r\n                              htmlFor=\"userConfPass\"\r\n                            >\r\n                              Confirm Password\r\n                            </CLabel>\r\n                            <div className=\"password-container\">\r\n                              <CInput\r\n                                type={revealConfPwd ? \"text\" : \"password\"}\r\n                                name=\"new_password_confirm\"\r\n                                id=\"new_password_confirm\"\r\n                                className=\"custom-forminput-6\"\r\n                                value={\r\n                                  change_pass_form.values.new_password_confirm\r\n                                }\r\n                                onChange={change_pass_form.handleChange}\r\n                              />\r\n                              <img\r\n                                className=\"pwd-container-img\"\r\n                                title={\r\n                                  revealConfPwd\r\n                                    ? \"Hide Confirm password\"\r\n                                    : \"Show Confirm password\"\r\n                                }\r\n                                src={revealConfPwd ? hidePwdImg : showPwdImg}\r\n                                onClick={() =>\r\n                                  setRevealConfPwd((prevState) => !prevState)\r\n                                }\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          {/**BUtton groups */}\r\n                          <div className=\"project-form-button-holders mt-3\">\r\n                            <CButton\r\n                              className=\"profile-form-btn update-profile\"\r\n                              disabled={!change_pass_form.isValid}\r\n                              type=\"button\"\r\n                              onClick={change_pass_form.handleSubmit}\r\n                            >\r\n                              Update Password\r\n                            </CButton>\r\n                            <CButton\r\n                              className=\"profile-form-btn cancel-update\"\r\n                              type=\"button\"\r\n                              onClick={change_pass_form.resetForm }\r\n                            >\r\n                              Cancel\r\n                            </CButton>\r\n                          </div>\r\n                        </CForm>\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </div>\r\n                </CRow>\r\n              </CContainer>\r\n            </CTabPane>\r\n          </CTabContent>\r\n        </CTabs>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\nexport default UserProfile;\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n      <Box sx={{ width: '100%', mr: 1 }}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box sx={{ minWidth: 35 }}>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function LinearWithValueLabel(props) {\r\n  const [progress, setProgress] = React.useState(props.progress);\r\n  \r\n  React.useEffect(() => {\r\n    // const timer = setInterval(() => {\r\n    //   setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 10));\r\n    // }, 800);\r\n    // return () => {\r\n    //   clearInterval(timer);\r\n    // };\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <LinearProgressWithLabel value={progress} />\r\n    </Box>\r\n  );\r\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","let _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4,\n  _t5,\n  _t6;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useTheme from '../styles/useTheme';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getLinearProgressUtilityClass } from './linearProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\nconst indeterminate1Keyframe = keyframes(_t || (_t = _`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`));\nconst indeterminate2Keyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`));\nconst bufferKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\nconst getColorShade = (theme, color) => {\n  if (color === 'inherit') {\n    return 'currentColor';\n  }\n  if (theme.vars) {\n    return theme.vars.palette.LinearProgress[`${color}Bg`];\n  }\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(({\n  ownerState,\n  theme\n}) => ({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  zIndex: 0,\n  // Fix Safari's bug during composition of different paint.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  backgroundColor: getColorShade(theme, ownerState.color),\n  ...(ownerState.color === 'inherit' && ownerState.variant !== 'buffer' && {\n    backgroundColor: 'none',\n    '&::before': {\n      content: '\"\"',\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'currentColor',\n      opacity: 0.3\n    }\n  }),\n  ...(ownerState.variant === 'buffer' && {\n    backgroundColor: 'transparent'\n  }),\n  ...(ownerState.variant === 'query' && {\n    transform: 'rotate(180deg)'\n  })\n}));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => {\n  const backgroundColor = getColorShade(theme, ownerState.color);\n  return {\n    position: 'absolute',\n    marginTop: 0,\n    height: '100%',\n    width: '100%',\n    ...(ownerState.color === 'inherit' && {\n      opacity: 0.3\n    }),\n    backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`,\n    backgroundSize: '10px 10px',\n    backgroundPosition: '0 -23px'\n  };\n}, css(_t4 || (_t4 = _`\n    animation: ${0} 3s infinite linear;\n  `), bufferKeyframe));\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main,\n  ...(ownerState.variant === 'determinate' && {\n    transition: `transform .${TRANSITION_DURATION}s linear`\n  }),\n  ...(ownerState.variant === 'buffer' && {\n    zIndex: 1,\n    transition: `transform .${TRANSITION_DURATION}s linear`\n  })\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t5 || (_t5 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n    `), indeterminate1Keyframe));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  ...(ownerState.variant !== 'buffer' && {\n    backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main\n  }),\n  ...(ownerState.color === 'inherit' && {\n    opacity: 0.3\n  }),\n  ...(ownerState.variant === 'buffer' && {\n    backgroundColor: getColorShade(theme, ownerState.color),\n    transition: `transform .${TRANSITION_DURATION}s linear`\n  })\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t6 || (_t6 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n    `), indeterminate2Keyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n  const {\n    className,\n    color = 'primary',\n    value,\n    valueBuffer,\n    variant = 'indeterminate',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const theme = useTheme();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\",\n    ...rootProps,\n    ref: ref,\n    ...other,\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","export default __webpack_public_path__ + \"static/media/Showpass-show.ab5421f5.svg\";","export default __webpack_public_path__ + \"static/media/Hide.31c620fc.svg\";"],"sourceRoot":""}