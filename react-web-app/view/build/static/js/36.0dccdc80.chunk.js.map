{"version":3,"sources":["pages/WBS-create/createWBS.js","../node_modules/@mui/material/LinearProgress/linearProgressClasses.js","../node_modules/@mui/material/LinearProgress/LinearProgress.js","components/wbs-docs-upload/WBSFileUpload.js"],"names":["CreateNewWBS","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","assigneeList","setAssigneeList","_useState3","_useState4","taskList","setTaskList","projects","useSelector","state","temp","Array","from","data","forEach","item","idx","parseFloat","project","remaining_hours","push","value","id","label","sub_task","has_permission","pm_projects","find","ele","getTaskList","option","console","log","sortBy","temp_task_list","assignees","element","assignee","sessionStorage","getItem","USER_ID","selectProjectRef","useRef","selectAssigneRef","selectTaskTitleRef","_useState5","_useState6","selectedTask","setSelectedTask","_useState7","_useState8","selectedSubTask","setSelectedSubTask","_useState9","_useState10","selectedProjectEndDate","setSelectedProjectEndDate","_useState11","_useState12","selectedProjectStartDate","setSelectedProjectStartDate","_useState13","_useState14","selectedAssignee","setselectedAssignee","getAssigneeList","fetchProjectsAssigneeThunk","work_package_index","temp_array","assignee_ids","first_name","last_name","unshift","_useSnackbar","useSnackbar","enqueueSnackbar","_useState15","closeSnackbar","_useState16","files","setFiles","reset_form","formCreateWbs","resetForm","current","select","clearValue","useFormik","initialValues","work_package_number","reporter","title","description","start_date","end_date","hours_worked","status","progress","comments","deliverable","validateOnChange","validateOnBlur","validate","values","errors","Date","length","onSubmit","_ref","setSubmitting","currentDate","cday","concat","getFullYear","getMonth","getDate","split","cdate","moment","parseInt","edate","diff","JSON","stringify","form_data","FormData","property","append","index","_step","_iterator","_createForOfIteratorHelper","entries","s","n","done","pair","err","e","f","API","post","then","res","success","fetchWbsThunk","fetchProjectsThunk","fetchProjectsForPMThunk","swal","catch","variant","location","useLocation","React","useEffect","_location$state","task","all_projects","subtasks","set_selected_project","result","slice","planned_delivery_date","setValues","_jsx","_Fragment","children","CContainer","CRow","className","_jsxs","CCard","CCardHeader","CCardBody","CForm","CLabel","Select","options","onChange","newValue","actionMeta","action","ref","touched","style","color","getOptionLabel","task_title","getOptionValue","CAlert","Number","planned_hours","toFixed","CInput","name","maxlength","handleChange","CTextarea","max","min","type","isMulti","assigneeArray","arr","_toConsumableArray","shift","i","removedValue","splice","setFieldValue","WBSFileUpload","CCol","isSubmitting","isValidating","LinearProgress","CButton","onClick","handleSubmit","getLinearProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_t5","_t6","indeterminate1Keyframe","keyframes","_templateObject","_taggedTemplateLiteral","indeterminate2Keyframe","_templateObject2","bufferKeyframe","_templateObject3","getColorShade","theme","vars","palette","mode","lighten","main","darken","LinearProgressRoot","styled","overridesResolver","props","styles","ownerState","root","capitalize","_objectSpread","position","overflow","display","height","zIndex","colorAdjust","backgroundColor","content","left","top","right","bottom","opacity","transform","LinearProgressDashed","dashed","_ref2","marginTop","width","backgroundImage","backgroundSize","backgroundPosition","css","_templateObject4","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","_ref3","transition","transformOrigin","_ref4","_templateObject5","LinearProgressBar2","bar2Indeterminate","bar2Buffer","_ref5","_ref6","_templateObject6","inProps","useThemeProps","_props$color","valueBuffer","_props$variant","other","_objectWithoutProperties","_excluded","classes","slots","bar1","bar2","composeClasses","useUtilityClasses","useTheme","rootProps","inlineStyles","undefined","Math","round","direction","process","clsx","role","inputRef","fileAvatars","setFileAvatars","htmlFor","event","file","target","URL","createObjectURL","onFileChange","accept","src","alt","map","arrayRemoveItem"],"mappings":"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","file":"static/js/36.0dccdc80.chunk.js","sourcesContent":["import {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CForm,\r\n  CLabel,\r\n  CInput,\r\n  CButton,\r\n  CSelect,\r\n  CTextarea,\r\n  CAlert,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./createWBS.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchProjectsThunk,\r\n  fetchProjectsAssigneeThunk,\r\n  createWbsThunk,\r\n  fetchWbsThunk,\r\n  fetchProjectsForPMThunk,\r\n} from \"../../store/slices/ProjectsSlice\";\r\nimport Select from \"react-select\";\r\nimport { API, FILE_API, USER_ID } from \"../../Config\";\r\nimport { useFormik } from \"formik\";\r\nimport swal from \"sweetalert\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport sortBy from \"lodash/sortBy\";\r\nimport { has_permission } from \"../../helper.js\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport store from \"../../store/Store\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport moment from \"moment\";\r\nimport WBSFileUpload from \"../../components/wbs-docs-upload/WBSFileUpload\";\r\n\r\nconst CreateNewWBS = () => {\r\n  const dispatch = useDispatch();\r\n \r\n  const remaining_hours = (remaining, total) => {\r\n    return String(parseFloat(total) - parseFloat(remaining));\r\n  };\r\n\r\n  // const [projects,setProjects] = useState([])\r\n  const [assigneeList, setAssigneeList] = useState([]);\r\n  const [taskList, setTaskList] = useState([]);\r\n\r\n  const projects = useSelector((state) => {\r\n    let temp = [];\r\n\r\n    Array.from(state.projects.data).forEach((item, idx) => {\r\n      // console.log('remaining hours ', remaining_hours(item.project.remaining_hours, item.project.planned_hours))\r\n      if (parseFloat(item.project.remaining_hours) > 0) {\r\n        temp.push({\r\n          value: item.project.id,\r\n          label: item.project.sub_task,\r\n          data: item,\r\n        });\r\n      }\r\n    });\r\n    if (has_permission(\"projects.add_projects\")) {\r\n      Array.from(state.projects.pm_projects).forEach((item, idx) => {\r\n        if (parseFloat(item.project.remaining_hours) > 0) {\r\n          // console.log(tempitem.label === item.project.sub_task))\r\n          if (!temp.find((ele) => ele.label === item.project.sub_task)) {\r\n            temp.push({\r\n              value: item.project.id,\r\n              label: item.project.sub_task,\r\n              data: item,\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    // console.log(\"get project list: \", temp)\r\n    return temp;\r\n  });\r\n  //fetcing projects from store\r\n  const getProjectList = () => {\r\n    let temp = [];\r\n    console.log(\"projects!!!!!!!!\", store.getState().projects.data);\r\n    Array.from(store.getState().projects.data).forEach((item, idx) => {\r\n      // console.log('remaining hours ', remaining_hours(item.project.remaining_hours, item.project.planned_hours))\r\n      if (parseFloat(item.project.remaining_hours) > 0) {\r\n        temp.push({\r\n          value: item.project.id,\r\n          label: item.project.sub_task,\r\n          data: item,\r\n        });\r\n      }\r\n    });\r\n    if (has_permission(\"projects.add_projects\")) {\r\n\r\n      Array.from(store.getState().projects.pm_projects).forEach((item, idx) => {\r\n        console.log(\"ooooooo \", item)\r\n        if (parseFloat(item.project.remaining_hours) > 0) {\r\n          // console.log(tempitem.label === item.project.sub_task))\r\n          if (!temp.find((ele) => ele.label === item.project.sub_task)) {\r\n            temp.push({\r\n              value: item.project.id,\r\n              label: item.project.sub_task,\r\n              data: item,\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    // console.log(\"get project list: \", temp)\r\n    // return temp\r\n    // setProjects(temp)\r\n  };\r\n\r\n  const getTaskList = (option) => {\r\n    console.log(\"task list###########: \", option);\r\n    if (!has_permission(\"projects.add_projects\")) {\r\n      var temp_task_list = [];\r\n      option.forEach((item) => {\r\n        item.assignees.forEach((element) => {\r\n          console.log(element.assignee.id);\r\n          if (element.assignee.id == sessionStorage.getItem(USER_ID)) {\r\n            temp_task_list.push(item);\r\n          }\r\n        });\r\n      });\r\n      setTaskList(sortBy(temp_task_list, \"task_title\"));\r\n    } else {\r\n      setTaskList(sortBy(option, \"task_title\"));\r\n    }\r\n  };\r\n\r\n  const selectProjectRef = useRef();\r\n  const selectAssigneRef = useRef();\r\n  const selectTaskTitleRef = useRef();\r\n  \r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [selectedSubTask, setSelectedSubTask] = useState({});\r\n  const [selectedProjectEndDate, setSelectedProjectEndDate] = useState(\"\");\r\n  const [selectedProjectStartDate, setSelectedProjectStartDate]= useState(\"\");\r\n  const [selectedAssignee, setselectedAssignee] = useState([]);\r\n\r\n  const handleProjectChange = (newValue, actionMeta) => {\r\n    console.log(`action: ${actionMeta.action}`);\r\n    console.log(\"newValue: \", newValue);\r\n\r\n    if (actionMeta.action == \"select-option\") {\r\n      // getAssigneeList(newValue);\r\n      setSelectedSubTask(newValue);\r\n      getTaskList(newValue.data.subtasks);\r\n      formCreateWbs.setValues({\r\n        project: newValue.data.project.id,\r\n        work_package_number: newValue.data.project.work_package_number,\r\n        assignee: formCreateWbs.values.assignee,\r\n        reporter: sessionStorage.getItem(USER_ID),\r\n        title: formCreateWbs.values.title,\r\n        description: formCreateWbs.values.description,\r\n        start_date: formCreateWbs.values.start_date,\r\n        end_date: formCreateWbs.values.end_date,\r\n        hours_worked: formCreateWbs.values.hours_worked,\r\n        status: formCreateWbs.values.status,\r\n        progress: formCreateWbs.values.progress,\r\n        comments: formCreateWbs.values.comments,\r\n        deliverable: formCreateWbs.values.deliverable,\r\n      });\r\n    } else if (actionMeta.action == \"clear\") {\r\n      setSelectedSubTask(null);\r\n    }\r\n  };\r\n\r\n  const getAssigneeList = (option) => {\r\n    dispatch(fetchProjectsAssigneeThunk(option?.work_package_index));\r\n\r\n    var temp_array = [];\r\n    let assignee_ids=[]\r\n\r\n    option.assignees.forEach((item) => {\r\n      assignee_ids.push(item.assignee.id)\r\n      temp_array.push({\r\n        value: item.assignee.id,\r\n        label: item.assignee.first_name + \" \" + item.assignee.last_name,\r\n        data: item.assignee,\r\n      });\r\n    });\r\n\r\n    temp_array=sortBy(temp_array, \"label\");\r\n    temp_array.unshift({\r\n      value: \"All\",\r\n      label: \"Select All\",\r\n    });\r\n    setAssigneeList(temp_array);\r\n    return {assignees:temp_array,assignee_ids:assignee_ids}\r\n  };\r\n\r\n  const handleAssigneeChange = (value, actionMeta) => {\r\n    let assigneeArray = [];\r\n    let arr = [];\r\n    if (actionMeta.action == 'select-option') {\r\n      console.log(\"action\", actionMeta)\r\n      setselectedAssignee(value); //1 less value\r\n      console.log(\"rats\", selectedAssignee);\r\n      value.forEach((item) => {\r\n        if (item.value == \"All\") {\r\n          arr = [...assigneeList];\r\n          arr.shift();\r\n          setselectedAssignee(arr);\r\n          console.log(\"arr\", arr)\r\n          console.log(\"len\", arr.length)\r\n          for (let i = 0; i < arr.length; i++)\r\n            assigneeArray[i] = arr[i].value;\r\n\r\n          console.log(\"assinearray\", assigneeArray);\r\n        }\r\n        else {\r\n          assigneeArray.push(item.value);\r\n        }\r\n      });\r\n    }\r\n    else if (actionMeta.action == 'remove-value') {\r\n      console.log(\"removed\", actionMeta.removedValue)\r\n      arr = [...selectedAssignee]\r\n      console.log(\"arr\", arr)\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (actionMeta.removedValue == arr[i]) {\r\n          arr.splice(i, 1);\r\n        }\r\n      }\r\n      setselectedAssignee(arr);\r\n      for (let i = 0; i < arr.length; i++)\r\n        assigneeArray[i] = arr[i].value;\r\n    }\r\n\r\n    console.log(\"action \", actionMeta);\r\n\r\n    if (actionMeta.action == 'clear') {\r\n      setselectedAssignee(null);\r\n    }\r\n    console.log(\"after removed \", assigneeArray);\r\n    formCreateWbs.setFieldValue(\"assignee\", assigneeArray);\r\n  };\r\n\r\n  // form validation for WBS create\r\n  const is_before_start_date = (start_date, end_date) => {\r\n    // console.log('start date', new Date(start_date))\r\n    // console.log('end date', new Date(end_date))\r\n    return new Date(end_date) < new Date(start_date);\r\n  };\r\n\r\n  const validate_create_wbs_form = (values) => {\r\n    const errors = {};\r\n    if (!values.project) errors.project = \"Project is required\";\r\n    if (!values.title) errors.title = \"Title is required\";\r\n    if (!values.start_date) errors.start_date = \"Start date is required\";\r\n    if (!values.end_date) errors.end_date = \"End date is required\";\r\n    if (\r\n      values.start_date &&\r\n      is_before_start_date(values.start_date, values.end_date)\r\n    )\r\n      errors.end_date = \"End date can not be past from start date\";\r\n    if (values.assignee.length < 1) errors.assignee = \"Assignee is required\";\r\n    return errors;\r\n  };\r\n\r\n  //   create wbs method\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const [files, setFiles] = useState([])\r\n  const setDocFiles = (files) => {\r\n    console.log('parent files',files)\r\n    setFiles(files)\r\n  }\r\n  const removeUploadedFiles = () => {\r\n    setFiles([])\r\n  }\r\n  const create_wbs = (values, { setSubmitting }) => {\r\n    \r\n    const currentDate = new Date();\r\n    const day = `${currentDate.getFullYear()}-${currentDate.getMonth() + 1}-${currentDate.getDate()}`;\r\n    const cday = day.split(\"-\")\r\n    const endDateArray = selectedProjectEndDate.split(\"-\");\r\n\r\n    let cdate = moment([parseInt(cday[0]), parseInt(cday[1])-1, parseInt(cday[2])])\r\n    let edate = moment(selectedProjectEndDate);\r\n    const difference = cdate.diff(edate, 'days');\r\n\r\n    if (difference <= 0) {\r\n      console.log(\"values\", JSON.stringify(formCreateWbs.values));\r\n      let data={\"project\":1,\"work_package_number\":\"1001\",\"assignee\":[3,2],\"reporter\":\"2\",\"title\":\"efrefre\",\"description\":\"referfref\",\"start_date\":\"2022-10-10\",\"end_date\":\"2022-10-31\",\"hours_worked\":\"0\",\"status\":\"1\",\"progress\":\"0\",\"comments\":\"\",\"deliverable\":\"\"}\r\n      let form_data = new FormData()\r\n      console.log('total',files.length)\r\n      form_data.append('total_files',files.length)\r\n      for (const property in formCreateWbs.values) {\r\n        form_data.append(property,formCreateWbs.values[property])\r\n      }\r\n      for (let index=1;index<=files.length;index++){\r\n        form_data.append('file'+index,files[index-1])\r\n      }\r\n      for (var pair of form_data.entries()) {\r\n        console.log(pair[0]+ ', ' + pair[1]); \r\n      }\r\n      API.post(\"wbs/create/\", form_data).then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200 && res.data.success === \"True\") {\r\n          reset_form();\r\n          setTaskList([]);\r\n          removeUploadedFiles()\r\n          dispatch(fetchWbsThunk(sessionStorage.getItem(USER_ID)));\r\n          dispatch(fetchProjectsThunk(sessionStorage.getItem(USER_ID)));\r\n          dispatch(fetchProjectsForPMThunk(sessionStorage.getItem(USER_ID)));\r\n          swal(\"WBS Created Successfully !\", \"\", \"success\");\r\n        }\r\n        reset_form();\r\n        setSelectedTask(null)\r\n      })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setSubmitting(false);\r\n        });\r\n    } else {\r\n      enqueueSnackbar(\"Planned Delivery date is over! \", {\r\n        variant: \"warning\",\r\n      });\r\n      setSubmitting(false)\r\n      // reset_form();\r\n      // setSelectedTask(null)\r\n    }\r\n  };\r\n\r\n  // form reset method\r\n  const reset_form = () => {\r\n    formCreateWbs.resetForm();\r\n    selectProjectRef.current.select.clearValue();\r\n    selectAssigneRef.current.select.clearValue();\r\n    selectTaskTitleRef.current.select.clearValue();\r\n    setSelectedProjectEndDate()\r\n    setSelectedProjectStartDate()\r\n    setSelectedTask(null)\r\n    setAssigneeList([]);\r\n  };\r\n\r\n  // use formic for create WBS\r\n  const formCreateWbs = useFormik({\r\n    initialValues: {\r\n      project: \"\",\r\n      work_package_number: \"\",\r\n      assignee: [],\r\n      reporter: sessionStorage.getItem(USER_ID),\r\n      title: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      hours_worked: \"0\",\r\n      status: \"1\",\r\n      progress: \"0\",\r\n      comments: \"\",\r\n      deliverable: \"\",\r\n    },\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validate: validate_create_wbs_form,\r\n    onSubmit: create_wbs,\r\n  });\r\n\r\n  const handleTaskTitleChange = (newValue, actionMeta) => {\r\n    if (newValue != null) {\r\n      getAssigneeList(newValue);\r\n      console.log('task', newValue.start_date);\r\n      setSelectedTask(newValue);\r\n      setSelectedProjectEndDate(newValue?.planned_delivery_date);\r\n      setSelectedProjectStartDate(newValue?.start_date)\r\n\r\n    }\r\n    if (actionMeta.action == \"select-option\") {\r\n      formCreateWbs.setValues({\r\n        project: newValue.id,\r\n        work_package_number: formCreateWbs.values.work_package_number,\r\n        assignee: formCreateWbs.values.assignee,\r\n        reporter: sessionStorage.getItem(USER_ID),\r\n        title: formCreateWbs.values.title,\r\n        description: formCreateWbs.values.description,\r\n        start_date: formCreateWbs.values.start_date,\r\n        end_date: formCreateWbs.values.end_date,\r\n        hours_worked: formCreateWbs.values.hours_worked,\r\n        status: formCreateWbs.values.status,\r\n        progress: formCreateWbs.values.progress,\r\n        comments: formCreateWbs.values.comments,\r\n        deliverable: formCreateWbs.values.deliverable,\r\n      });\r\n    }\r\n  };\r\n\r\n  function is_form_submitting() {\r\n    // console.log(formCreateWbs.isSubmitting, formCreateWbs.isValidating)\r\n    if (formCreateWbs.isSubmitting && !formCreateWbs.isValidating) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  function set_selected_project(sub_task) {\r\n    let all_projects = projects;\r\n    console.log(\"projects\", projects);\r\n    all_projects.forEach((item, idx) => {\r\n      if (item.label == sub_task) {\r\n        setSelectedSubTask(item);\r\n        getTaskList(item.data.subtasks);\r\n      }\r\n    });\r\n  }\r\n  let location = useLocation();\r\n  React.useEffect(() => {\r\n    console.log(\"location \", location)\r\n    if (location.state?.task) {\r\n      let task = location.state.task;\r\n      console.log(\"location data if block\", task);\r\n      set_selected_project(task.sub_task);\r\n      setSelectedTask(task);\r\n      let result=getAssigneeList(task);\r\n      console.log('shifted result',result.assignees.slice(1))\r\n      setselectedAssignee(result.assignees.slice(1));\r\n      \r\n      setSelectedProjectEndDate(task.planned_delivery_date);\r\n      //console.log(\"start date\", task)\r\n      setSelectedProjectStartDate(task.start_date)\r\n\r\n      formCreateWbs.setValues({\r\n        project: task.id,\r\n        work_package_number: task.work_package_number,\r\n        assignee: result.assignee_ids,\r\n        reporter: sessionStorage.getItem(USER_ID),\r\n        title: formCreateWbs.values.title,\r\n        description: formCreateWbs.values.description,\r\n        start_date: formCreateWbs.values.start_date,\r\n        end_date: formCreateWbs.values.end_date,\r\n        hours_worked: formCreateWbs.values.hours_worked,\r\n        status: formCreateWbs.values.status,\r\n        progress: formCreateWbs.values.progress,\r\n        comments: formCreateWbs.values.comments,\r\n        deliverable: formCreateWbs.values.deliverable,\r\n      });\r\n    } else {\r\n    }\r\n  }, []);\r\n\r\n  // function compareTime(){\r\n  //     const currentDate = new Date();\r\n  //     console.log(currentDate);\r\n  //     if(selectedProjectEndDate < currentDate)\r\n  //       return false;\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow>\r\n          <div className=\"col-md-8 offset-md-2 col-sm-12\">\r\n            <CCard className=\"custom-wbs-card-1\">\r\n              <CCardHeader className=\"project-wbs-1\">\r\n                {\" \"}\r\n                <h4 className=\"section-name-wbscreate\">Create a WBS</h4>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <CContainer>\r\n                  <CForm>\r\n                    <CRow>\r\n                      {/**project name */}\r\n                      <div className=\"col-lg-12 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">\r\n                          Select Project\r\n                        </CLabel>\r\n                        <Select\r\n                          id=\"project\"\r\n                          options={projects}\r\n                          // getOptionLabel={option => option.task_delivery_order + \" / \" + option.sub_task}\r\n                          // getOptionValue={option => option.id}\r\n                          value={selectedSubTask}\r\n                          onChange={handleProjectChange}\r\n                          ref={selectProjectRef}\r\n                        />\r\n                        {formCreateWbs.touched.project &&\r\n                          formCreateWbs.errors.project && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.project}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      {/*selectedSubTask != null ?\r\n                                                <div className=\"col-lg-12 mb-3\">\r\n                                                    <CAlert color=\"primary\">\r\n                                                        <small>\r\n                                                            <b>Planned Delivery Date: </b> {selectedTask.data.project.planned_delivery_date}\r\n                                                            <br />\r\n                                                            <b>Planned Hours: </b> {selectedTask.data.project.planned_hours}\r\n                                                            <br />\r\n                                                            <b>Remaining Hours: </b> {selectedTask.data.project.remaining_hours}\r\n                                                        </small>\r\n                                                    </CAlert>\r\n                                                </div> :\r\n                                                <></>\r\n                                            } \r\n                      {/**task title */}\r\n                      <div className=\"col-lg-12 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">\r\n                          Task Title\r\n                        </CLabel>\r\n                        <Select\r\n                          id=\"task_title\"\r\n                          options={taskList}\r\n                          getOptionLabel={(option) => option.task_title}\r\n                          getOptionValue={(option) => option.id}\r\n                          onChange={handleTaskTitleChange}\r\n                          value={selectedTask}\r\n                          ref={selectTaskTitleRef}\r\n                        />\r\n                        {formCreateWbs.touched.task_title &&\r\n                          formCreateWbs.errors.task_title && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.task_title}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      {selectedTask != null ? (\r\n                        <div className=\"col-lg-12 mb-3\">\r\n                          <CAlert color=\"primary\">\r\n                            <small>\r\n                              <b>Work Package Number: </b>{\" \"}\r\n                              {selectedTask.work_package_number}\r\n                              <br />\r\n                              <b>Planned Delivery Date: </b>{\" \"}\r\n                              {selectedTask.planned_delivery_date}\r\n                              <br />\r\n                              <b>Planned Hours: </b>{\" \"}\r\n                              {Number(parseFloat(selectedTask.planned_hours)).toFixed(2)}\r\n                              <br />\r\n                              <b>Remaining Hours: </b>{\" \"}\r\n                              {Number(parseFloat(selectedTask.remaining_hours)).toFixed(2)}\r\n                              <br />\r\n                              <b>Task details: </b> {selectedTask.description}\r\n                            </small>\r\n                          </CAlert>\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                      {/**wbs title */}\r\n                      <div className=\"col-lg-12 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">WBS Title</CLabel>\r\n                        {/* onChange={setWbsTitle} */}\r\n                        <CInput\r\n                          id=\"title\"\r\n                          name=\"title\"\r\n                          maxlength=\"50\"\r\n                          value={formCreateWbs.values.title}\r\n                          onChange={formCreateWbs.handleChange}\r\n                          className=\"custom-forminput-6\"\r\n                        ></CInput>\r\n                        <div className=\"float-right\">\r\n                          {formCreateWbs.values.title.length}/50\r\n                        </div>\r\n                        {formCreateWbs.touched.title &&\r\n                          formCreateWbs.errors.title && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.title}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      {/**WBS description */}\r\n                      <div className=\"col-lg-12 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">\r\n                          Description\r\n                        </CLabel>\r\n                        {/* onChange={setWbsDetails} */}\r\n                        <CTextarea\r\n                          maxlength=\"120\"\r\n                          id=\"description\"\r\n                          name=\"description\"\r\n                          value={formCreateWbs.values.description}\r\n                          onChange={formCreateWbs.handleChange}\r\n                          className=\"custom-forminput-6\"\r\n                        ></CTextarea>\r\n                        { <div className=\"float-right\">{(formCreateWbs.values.description).length}/120</div>}\r\n                      </div>\r\n\r\n                      {/**Start date */}\r\n                      <div className=\"col-lg-6 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">\r\n                          Start date\r\n                        </CLabel>\r\n                        {/* onChange={setWbsStartDate} */}\r\n                        <CInput\r\n                          max={selectedProjectEndDate}\r\n                          min = {selectedProjectStartDate}\r\n                          type=\"date\"\r\n                          id=\"start_date\"\r\n                          name=\"start_date\"\r\n                          value={formCreateWbs.values.start_date}\r\n                          onChange={formCreateWbs.handleChange}\r\n                          className=\"custom-forminput-6\"\r\n                          \r\n                        ></CInput>\r\n                        {formCreateWbs.touched.start_date &&\r\n                          formCreateWbs.errors.start_date && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.start_date}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      {/**End date */}\r\n                      <div className=\"col-lg-6 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">End date</CLabel>\r\n                        {/* onChange={setWbsEndDate} */}\r\n                        <CInput\r\n                          max={selectedProjectEndDate}\r\n                          min = {formCreateWbs.values.start_date}\r\n                          type=\"date\"\r\n                          id=\"end_date\"\r\n                          name=\"end_date\"\r\n                          value={formCreateWbs.values.end_date}\r\n                          onChange={formCreateWbs.handleChange}\r\n                          className=\"custom-forminput-6\"\r\n                        ></CInput>\r\n                        {formCreateWbs.touched.end_date &&\r\n                          formCreateWbs.errors.end_date && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.end_date}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      {/**Assignees */}\r\n                      <div className=\"col-lg-12 mb-3\">\r\n                        <CLabel className=\"custom-label-wbs5\">\r\n                          Assignee(s)\r\n                        </CLabel>\r\n                        <Select\r\n                          className=\"custom-forminput-6\"\r\n                          ref={selectAssigneRef}\r\n                          options={assigneeList}\r\n                          isMulti\r\n                          onChange={handleAssigneeChange}\r\n                          value={selectedAssignee}\r\n                        />\r\n                        {formCreateWbs.touched.assignee &&\r\n                          formCreateWbs.errors.assignee && (\r\n                            <small style={{ color: \"red\" }}>\r\n                              {formCreateWbs.errors.assignee}\r\n                            </small>\r\n                          )}\r\n                      </div>\r\n                      <div className=\"col-lg-12\">\r\n                        <WBSFileUpload files={files} setFiles={setDocFiles} />\r\n                      </div>\r\n                      {/**submit buttons */}\r\n                      <CCol>\r\n                      <div className=\"col-md-12\">\r\n                        {is_form_submitting() == true ? (\r\n                          <LinearProgress />\r\n                        ) : (\r\n                          <div className=\"projectwbs-form-button-holders mt-3\">\r\n                            <CButton\r\n                              type=\"button\"\r\n                              onClick={formCreateWbs.handleSubmit}\r\n                              className=\"create-btn-prjctwbs create-wbs\"\r\n                            >\r\n                              Create WBS\r\n                            </CButton>\r\n                            <CButton\r\n                              type=\"button\"\r\n                              onClick={reset_form}\r\n                              className=\"create-btn-prjctwbs cancel-wbs\"\r\n                            >\r\n                              Cancel\r\n                            </CButton>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CForm>\r\n                </CContainer>\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\nexport default CreateNewWBS;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","let _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4,\n  _t5,\n  _t6;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useTheme from '../styles/useTheme';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getLinearProgressUtilityClass } from './linearProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\nconst indeterminate1Keyframe = keyframes(_t || (_t = _`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`));\nconst indeterminate2Keyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`));\nconst bufferKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\nconst getColorShade = (theme, color) => {\n  if (color === 'inherit') {\n    return 'currentColor';\n  }\n  if (theme.vars) {\n    return theme.vars.palette.LinearProgress[`${color}Bg`];\n  }\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(({\n  ownerState,\n  theme\n}) => ({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  zIndex: 0,\n  // Fix Safari's bug during composition of different paint.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  backgroundColor: getColorShade(theme, ownerState.color),\n  ...(ownerState.color === 'inherit' && ownerState.variant !== 'buffer' && {\n    backgroundColor: 'none',\n    '&::before': {\n      content: '\"\"',\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'currentColor',\n      opacity: 0.3\n    }\n  }),\n  ...(ownerState.variant === 'buffer' && {\n    backgroundColor: 'transparent'\n  }),\n  ...(ownerState.variant === 'query' && {\n    transform: 'rotate(180deg)'\n  })\n}));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => {\n  const backgroundColor = getColorShade(theme, ownerState.color);\n  return {\n    position: 'absolute',\n    marginTop: 0,\n    height: '100%',\n    width: '100%',\n    ...(ownerState.color === 'inherit' && {\n      opacity: 0.3\n    }),\n    backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`,\n    backgroundSize: '10px 10px',\n    backgroundPosition: '0 -23px'\n  };\n}, css(_t4 || (_t4 = _`\n    animation: ${0} 3s infinite linear;\n  `), bufferKeyframe));\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main,\n  ...(ownerState.variant === 'determinate' && {\n    transition: `transform .${TRANSITION_DURATION}s linear`\n  }),\n  ...(ownerState.variant === 'buffer' && {\n    zIndex: 1,\n    transition: `transform .${TRANSITION_DURATION}s linear`\n  })\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t5 || (_t5 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n    `), indeterminate1Keyframe));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  ...(ownerState.variant !== 'buffer' && {\n    backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main\n  }),\n  ...(ownerState.color === 'inherit' && {\n    opacity: 0.3\n  }),\n  ...(ownerState.variant === 'buffer' && {\n    backgroundColor: getColorShade(theme, ownerState.color),\n    transition: `transform .${TRANSITION_DURATION}s linear`\n  })\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t6 || (_t6 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n    `), indeterminate2Keyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n  const {\n    className,\n    color = 'primary',\n    value,\n    valueBuffer,\n    variant = 'indeterminate',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const theme = useTheme();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\",\n    ...rootProps,\n    ref: ref,\n    ...other,\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    CForm,\r\n    CLabel,\r\n    CInput,\r\n    CCardBody,\r\n    CCard,\r\n    CButton,\r\n    CContainer,\r\n    CCol,CRow,\r\n} from \"@coreui/react\";\r\nimport \"./uploadForm.css\";\r\nimport { API, USER_ID } from \"../../Config\";\r\nimport { arrayRemoveItem } from \"../../helper\";\r\nimport swal from \"sweetalert\";\r\nimport {useRef} from 'react';\r\n\r\nconst WBSFileUpload = (props) => {\r\n    const inputRef = useRef();\r\n    const [selectedFile,setSelectedFile] = useState()\r\n    const setSelectedProject = useState()\r\n    const [files, setFiles] = useState(props.files)\r\n    const [fileAvatars, setFileAvatars] = useState([])\r\n    const upload = () => {\r\n        let formData = new FormData()\r\n        // formData.append('project', selectedProject.data.project.id)\r\n        formData.append('files', files.length)\r\n        formData.append('upload_by', sessionStorage.getItem(USER_ID))\r\n        Array.from(files).forEach((file, idx) => {\r\n            formData.append('file' + (idx + 1), file)\r\n        })\r\n        API.post('project/shared/document/create/', formData).then((res) => {\r\n            setSelectedProject(null)\r\n            setFileAvatars([])\r\n            setFiles([])\r\n            swal('Uploaded', 'Files are uploaded', 'success')\r\n        })\r\n    }\r\n    function onFileChange(event) {\r\n        let file = event.target.files[0]\r\n        event.target.value=null\r\n        setFiles([...files, file]);\r\n        setFileAvatars([...fileAvatars, URL.createObjectURL(file)]);\r\n        props.setFiles([...files, file])\r\n    }\r\n    function remove_file(index) {\r\n        console.log('on remove',arrayRemoveItem(files, files[index]))\r\n        setFileAvatars(arrayRemoveItem(fileAvatars, fileAvatars[index]))\r\n        setFiles(arrayRemoveItem(files, files[index]))\r\n        props.setFiles(arrayRemoveItem(files, files[index]))\r\n        // inputRef.current.value = null;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <CCard className=\"mt-2 upload-docs\">\r\n                <CCardBody>\r\n                    <CContainer>\r\n                        {/**Project Name */}\r\n                        \r\n                        {/**upload files box */}\r\n                        <CCol className=\"mb-1\">\r\n                            <CLabel htmlFor=\"attachments\" className=\"custom-label-5\">\r\n                                Upload Documents\r\n                            </CLabel>\r\n                            <CLabel className=\"custom-file-upload\">\r\n                                <CInput\r\n                                    type=\"file\"\r\n                                    id=\"file\"\r\n                                    ref={inputRef}\r\n                                    className=\"form-control form-control-file\"\r\n                                    onChange={(event) => onFileChange(event)}\r\n                                    accept=\".xlsx, .xls, .csv, .pdf, image/*, application/gzip, .zip, .tar, .txt, .doc, .docx, .pptx, .ppt\"\r\n                                />\r\n                                <img\r\n                                    src={\"assets/icons/upload-thin.svg\"}\r\n                                    alt=\"\"\r\n                                    className=\"upload-icon\"\r\n                                // onClick={()=>{document.getElementById('file').click()}}\r\n                                />\r\n                            </CLabel>\r\n                        </CCol>\r\n                        <CCol>\r\n                        {/* <CButton\r\n                            type=\"button\" \r\n                            onClick = {upload}\r\n                            color=\"primary\"\r\n                          >\r\n                            Upload\r\n                          </CButton> */}\r\n                        </CCol>\r\n                        {/**display uploaded files */}\r\n                        <div className=\"mb-2\">\r\n                            <div className=\"row\">\r\n                                {fileAvatars.map((file, idx) => (\r\n                                    <div key={idx} className=\"col-md-6 col-sm-6 col-sm-4\">\r\n                                        <div className=\"file-attached-ongoing rounded-pill\">\r\n                                            <CButton className=\"remove-file-ongoing\" type=\"button\" onClick={() => { remove_file(idx) }}>\r\n                                                <img\r\n                                                    src={\"assets/icons/icons8-close-64-blue.svg\"}\r\n                                                    className=\"close-icon-size\"\r\n                                                />\r\n                                            </CButton>\r\n                                            {files[idx].name}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        {/**Submit buttons */}\r\n                        {/* <div className=\"mb-3 mt-4\">\r\n                            <div className=\"project-form-button-holders \">\r\n                                <CButton className=\"profile-form-btn update-profile\" type=\"button\" onClick={upload}>Upload Documents</CButton>\r\n                                <CButton className=\"profile-form-btn cancel-update\">Cancel</CButton>\r\n                            </div>\r\n                        </div> */}\r\n\r\n                    </CContainer>\r\n                </CCardBody>\r\n            </CCard>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WBSFileUpload;\r\n"],"sourceRoot":""}