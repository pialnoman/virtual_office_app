{"version":3,"sources":["pages/timecards/addTimecardItem.js","pages/timecards/Edit.js","pages/timecards/timeCard.js","../node_modules/lodash/orderBy.js"],"names":["AddTimecardItms","props","_useState","useState","_useState2","_slicedToArray","modal","setModal","holidays","useSelector","state","items","Array","from","data","forEach","item","idx","push","label","holiday_title","value","id","_useState3","_useState4","projects","setProjects","_useState5","_useState6","selectedProject","setselectedProject","worktypes","temp","title","description","console","log","dispatch","useDispatch","formAddTimecard","hours_spent_left","employee","useFormik","initialValues","project","task_title","actual_work_done","hours","hours_type","wbs","hour_description","assignee","validateOnChange","validateOnBlur","validate","values","errors","parseInt","onSubmit","API","post","then","res","onClose","resetForm","setSelectedType","setWbsList","setSelectedWbs","swal","useEffect","fetchHolidays","fetchUserHoursUsedAndLeft","temp_projects","get","index","length","sub_task","_useState7","_useState8","selectedType","_useState9","_useState10","wbsList","_useState11","_useState12","selectedWbs","reset_form","_jsx","_Fragment","children","_jsxs","CModal","closeOnBackdrop","show","toggle","size","CForm","CModalHeader","closeButton","CModalBody","CRow","CCol","className","CLabel","htmlFor","loseMenuOnSelect","isClearable","isMulti","Select","name","options","onChange","option","setValues","touched","style","color","actionMeta","setFieldValue","CInput","type","placeholder","min","e","target","wbslistArray","i","wbs_list","assignee_id","CTextarea","CModalFooter","CButton","onClick","handleSubmit","EditTimeCard","_props$data","_props$data2","_props$data4","formEditTimeCard","time_type","hours_today","date_updated","_ref","setSubmitting","put","status","statusText","catch","err","startDate","moment","subtract","endDate","add","formattedStartDate","format","formattedEndDate","work_package_number","defaultValue","filter","t","_props$data3","class","handleChange","max","disabled","rows","TimeCards","_selectedAssignee$dat","_selectedAssignee$dat2","profile_details","profile","selectedAssignee","setSelectedAssignee","update","usersData","setUsersData","pdfData","setPdfData","setPdfTitle","location","useLocation","assigneeList","setAssigneeList","_useState13","_useState14","non_submitted_total_tc","setNonSubmittedTotalTC","_useState15","_useState16","setStartDate","_useState17","_useState18","setEndDate","_useState19","_useState20","totalHrs","setTotalHrs","_useState21","_useState22","setModalData","_useState23","_useState24","row","setRow","get_assignee_tc","_dateRange","dateRange","start","end","first_name","last_name","filteredData","p","tableData","hours_total","total_not_submitted","_element$data$project4","_element$data$project5","_element$data","_element$data2","submitted","element","parseFloat","WP","Description","Type","orderBy","capitalize","string","undefined","charAt","toUpperCase","slice","toLowerCase","_useState25","_useState26","modaladdItem","setmodalAddItem","_useState27","_useState28","show_edit_modal","setShowEditModal","React","window","scrollTo","_dateRange2","has_permission","sessionStorage","getItem","USER_ID","find","user","unshift","_location$state","_location$state2","editForm","assigneeSelect","assigneeSelectPM","todate","temp_hrs","_element$data$project","_element$data$project2","_element$data$project3","colourStyles","provided","_objectSpread","fontSize","sdate","Date","edate","getDay","toDate","nextSatDay","satday","onAdd","CContainer","xl","lg","md","closeMenuOnSelect","minHeight","classNamePrefix","styles","CDataTable","fields","key","_style","width","_classes","primary","hover","striped","bordered","sorter","itemsPerPage","pagination","scopedSlots","Action","CBadge","role","Number","toFixed","text","icon","buttons","dangerMode","willDelete","doc","jsPDF","setFontSize","content","startY","head","body","map","elt","day","time","toLocaleString","hour","minute","hour12","autoTable","lastAutoTable","finalY","exportPDF","formData","FormData","append","output","FILE_API","days","todayDate","save","open","backgroundColor","baseOrderBy","require","isArray","module","exports","collection","iteratees","orders","guard"],"mappings":"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","file":"static/js/41.6d03a904.chunk.js","sourcesContent":["import { useFormik } from \"formik\";\r\nimport {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CLabel,\r\n  CInput,\r\n  CButton,\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CTextarea,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./timeCards.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport { API, USER_ID } from \"../../Config\";\r\nimport swal from 'sweetalert'\r\nimport { fetchHolidays } from \"../../store/slices/HolidaySlice\";\r\nimport { fetchUserHoursUsedAndLeft } from \"../../store/slices/TimecardSlice\";\r\nimport { hours_spent_left } from \"../../helper\";\r\n\r\nconst AddTimecardItms = (props) => {\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setModal(!modal);\r\n  };\r\n  const holidays=useSelector((state)=>{\r\n    let items=[]\r\n    Array.from(state.holidays.data).forEach((item,idx)=>{\r\n      items.push({label:item.holiday_title,value:item.id,data:item})\r\n    })\r\n    return items\r\n  })\r\n  const [projects,setProjects]=useState([])\r\n  const [selectedProject, setselectedProject]=useState(\"\")\r\n  \r\n  const worktypes= useSelector(state=>{\r\n    let temp=[]\r\n    Array.from(state.worktypes.data).forEach((item,idx)=>{\r\n      temp.push({label:item.title,value:item.title,description:item.description,data:item})\r\n    })\r\n    console.log(\"worktype\", temp)\r\n    return temp\r\n  })\r\n  const dispatch = useDispatch()\r\n  const hours_left=hours_spent_left(props.employee.id)\r\n  const onSave = (values) => {\r\n    console.log(\"values\", formAddTimecard.values);\r\n    const data={\r\n      hours_type:formAddTimecard.values.hours_type,\r\n      hours:formAddTimecard.values.hours,\r\n      hour_description:formAddTimecard.values.hour_description?formAddTimecard.values.hour_description:'',\r\n      assignee:props.employee,\r\n      actual_work_done:formAddTimecard.values.actual_work_done,\r\n      project:formAddTimecard.values.project,\r\n      wbs:formAddTimecard.values.wbs,\r\n      task_title:formAddTimecard.values.task_title\r\n    }\r\n    API.post('wbs/time-card/add/', data).then((res) => {\r\n      console.log(res.data)\r\n      props.onClose()\r\n      // props.onAdd()\r\n      toggleModal()\r\n      formAddTimecard.resetForm()\r\n      \r\n      setSelectedType({label : null, value : null })\r\n      setWbsList()\r\n      setSelectedWbs(null)\r\n      setselectedProject(null)\r\n      swal('Successfully Added!', '', 'success')\r\n    })\r\n\r\n    setModal(false)\r\n  }\r\n\r\n  const validateAddItemForm=(values)=>{\r\n    const errors = {};\r\n    if (!values.hours_type) errors.hours_type = \"Hour Type is required!\"\r\n    //if (!values.hours) errors.hours = \"Hour is required!\"\r\n    if (!values.project) errors.project = \"Project is required!\"\r\n    if (!values.wbs) errors.wbs = \"Wbs is required!\"\r\n    if (!values.actual_work_done) errors.actual_work_done = \"Details is required!\"\r\n    if (parseInt(values.hours) < 1) errors.hours = \"Invalid hours value!\"\r\n    return errors;\r\n  }\r\n  \r\n  const formAddTimecard = useFormik({\r\n    initialValues: {\r\n      project: \"\",\r\n      task_title: \"\",\r\n      actual_work_done: \"\",\r\n      hours: \"\",\r\n      hours_type: \"\",\r\n      wbs: \"\",\r\n      hour_description:\"\",\r\n      assignee: props.employee\r\n    },\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validate: validateAddItemForm,\r\n    onSubmit: onSave,\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log('add tc props',props.employee);\r\n    dispatch(fetchHolidays());\r\n    dispatch(fetchUserHoursUsedAndLeft())\r\n    let temp_projects=[]\r\n    API.get('project/assigned/all/'+props.employee+'/').then(res=>{\r\n      console.log('assigned projects',res.data)\r\n      for(let index=0;index<res.data.data.length;index++){\r\n        temp_projects.push({label:res.data.data[index].project.sub_task,value:res.data.data[index].project.id,data:res.data.data[index]})\r\n      }\r\n      console.log('temp p',temp_projects)\r\n      setProjects(temp_projects)\r\n    })\r\n    \r\n  }, [props]);\r\n\r\n  const [selectedType, setSelectedType] = useState({ label: \"\", value: \"\" });\r\n  const [wbsList, setWbsList] = useState();\r\n  const [selectedWbs, setSelectedWbs] = useState();\r\n\r\n  const handleHoursTypeChange = (option) => {\r\n    setSelectedType(option);\r\n    \r\n    if(option.label != 'RHR' && option.label != 'WFH' && option.label != 'OTO' && option.label != 'OTS'){\r\n      console.log('if')\r\n      \r\n      formAddTimecard.setValues({\r\n        hours_type:option.value,\r\n        actual_work_done:option.description,\r\n      });\r\n    }\r\n    else{\r\n      console.log('else')\r\n      formAddTimecard.setValues({\r\n        hours_type:option.value,\r\n        actual_work_done:'',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleHolidayChange=(value,actionMeta)=>{\r\n    console.log(value)\r\n    formAddTimecard.setFieldValue('hours',value.data.hours)\r\n  }\r\n\r\n  const handlewbsChange = (option) => {\r\n    setSelectedWbs(option);\r\n    console.log(\"WBS\", option);\r\n    formAddTimecard.setFieldValue(\r\n      \"wbs\",\r\n      option.value,\r\n    );\r\n  };\r\n\r\n  const handleProjectChange = (option) => {\r\n    setselectedProject(option)\r\n    console.log(\"selected Project\", option.value)\r\n     formAddTimecard.setFieldValue(\"project\", option.value);\r\n     let wbslistArray = [];\r\n     for (let i = 0; i < option.data.project.wbs_list.length; i++) {\r\n       if (parseInt(option.data.project.wbs_list[i].assignee_id) == parseInt(props.employee)) {\r\n         wbslistArray.push({\r\n           value: option.data.project.wbs_list[i].id,\r\n           label: option.data.project.wbs_list[i].title,\r\n           data: option.data.project.wbs_list[i],\r\n        });\r\n      }\r\n    }\r\n    setWbsList(wbslistArray);\r\n  };\r\n\r\n  const reset_form = () => {\r\n    formAddTimecard.resetForm();\r\n    setSelectedType({label : null, value : null })\r\n    setWbsList()\r\n    setSelectedWbs(null)\r\n    setselectedProject(null)\r\n\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <CModal\r\n        closeOnBackdrop={false}\r\n        show={props.show}\r\n        onClose={()=>{props.onClose();reset_form()}}\r\n        toggle={props.toggle}\r\n        size=\"lg\"\r\n      >\r\n        <CForm>\r\n          <CModalHeader closeButton>\r\n            Enter New Timecard Item Details\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <CRow>\r\n              <CCol className=\"col-md-12 mb-3\">\r\n                {/*Type : {row?.time_type}*/}\r\n                <CLabel\r\n                  className=\"custom-label-5\"\r\n                  htmlFor=\"assigneeSelectPM\"\r\n                  loseMenuOnSelect={true}\r\n                  isClearable={false}\r\n                  isMulti={false}\r\n                >\r\n                  Hour Type :\r\n                </CLabel>\r\n                <Select\r\n                  id=\"hours_type\"\r\n                  name=\"hours_type\"\r\n                  options={worktypes}\r\n                  onChange={handleHoursTypeChange}\r\n                  value={selectedType}\r\n                />\r\n                {formAddTimecard.touched.hours_type && formAddTimecard.errors.hours_type && <small style={{ color: 'red' }}>{formAddTimecard.errors.hours_type}</small>}\r\n              </CCol>\r\n              {selectedType.label == 'HOL' && <CCol className=\"col-md-12 mb-3\">\r\n                <CLabel className=\"custom-label-wbs5\">Select Holiday : </CLabel>\r\n                <Select\r\n                  id=\"project\"\r\n                  name=\"project\"\r\n                  className=\"custom-forminput-5\"\r\n                  onChange={handleHolidayChange}\r\n                  options={holidays}\r\n                />\r\n              </CCol>}\r\n              <CCol className=\"col-md-12 mb-3\">\r\n                <CLabel className=\"custom-label-wbs5\"> Hour(s) : </CLabel>\r\n                <CInput\r\n                  type=\"number\"\r\n                  aria-label=\"default input example\"\r\n                  id=\"hours\"\r\n                  name=\"hours\"\r\n                  className=\"custom-forminput-5\"\r\n                  placeholder=\"0.00\"\r\n                  //onChange={formAddTimecard.handleChange}\r\n                 \r\n                  min=\"0.00\"\r\n                  onChange={(e) => {\r\n                    formAddTimecard.setFieldValue(\r\n                      \"hours\",\r\n                      e.target.value\r\n                    );\r\n                  }}\r\n                  value={formAddTimecard.values.hours}\r\n                />\r\n                {formAddTimecard.touched.hours && formAddTimecard.errors.hours && <small style={{ color: 'red' }}>{formAddTimecard.errors.hours}</small>}\r\n              </CCol>\r\n\r\n              <CCol className=\"col-md-12 mb-3\">\r\n                  <CLabel\r\n                    className=\"custom-label-wbs5\"\r\n                    htmlFor=\"assigneeSelectPM\"\r\n                    loseMenuOnSelect={true}\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                  >\r\n                    Project :{\" \"}\r\n                  </CLabel>\r\n\r\n                  <Select\r\n                    id=\"project\"\r\n                    name=\"project\"\r\n                    className=\"custom-forminput-5\"\r\n                    onChange={handleProjectChange}\r\n                    options={projects}\r\n                    value = {selectedProject}\r\n                  />\r\n                  {formAddTimecard.touched.project && formAddTimecard.errors.project && <small style={{ color: 'red' }}>{formAddTimecard.errors.project}</small>}\r\n                </CCol>\r\n\r\n                <CCol className=\"col-md-12 mb-3\">\r\n                  {/*Type : {row?.time_type}*/}\r\n                  <CLabel\r\n                    className=\"custom-label-5\"\r\n                    htmlFor=\"assigneeSelectPM\"\r\n                    loseMenuOnSelect={true}\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                  >\r\n                    WBS :\r\n                  </CLabel>\r\n                  <Select\r\n                    id=\"wbs\"\r\n                    name=\"wbs\"\r\n                    className=\"custom-forminput-5\"\r\n                    options={wbsList}\r\n                    onChange={handlewbsChange}\r\n                    value={selectedWbs}\r\n                  />\r\n                  {formAddTimecard.touched.wbs && formAddTimecard.errors.wbs && <small style={{ color: 'red' }}>{formAddTimecard.errors.wbs}</small>}\r\n                </CCol>\r\n                <CCol className=\"col-md-12 mb-3\">\r\n                  <CLabel>Actual Work :</CLabel>\r\n                  <CTextarea\r\n                    type=\"text\"\r\n                    id=\"actual_work_done\"\r\n                    name=\"actual_work_done\"\r\n                    className=\"custom-forminput-5\"\r\n                    //onChange={formAddTimecard.handleChange}\r\n                    onChange={(e) => {\r\n                      formAddTimecard.setFieldValue(\r\n                        \"actual_work_done\",\r\n                        e.target.value\r\n                      );\r\n                    }}\r\n                    value={formAddTimecard.values.actual_work_done}\r\n                  />\r\n                  {formAddTimecard.touched.actual_work_done && formAddTimecard.errors.actual_work_done && <small style={{ color: 'red' }}>{formAddTimecard.errors.actual_work_done}</small>}\r\n                </CCol>\r\n            </CRow>\r\n          </CModalBody>\r\n        </CForm>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" type=\"button\" onClick={formAddTimecard.handleSubmit}>\r\n            Add\r\n          </CButton>{\" \"}\r\n          <CButton color=\"secondary\" type=\"button\" onClick={()=>{props.onClose();reset_form()}}>\r\n            Cancel\r\n\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n  );\r\n};\r\nexport default AddTimecardItms;\r\n","import { useFormik } from \"formik\";\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CLabel,\r\n  CInput,\r\n  CButton,\r\n  CDataTable,\r\n  CBadge,\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CTextarea,\r\n} from \"@coreui/react\";\r\nimport Select from \"react-select\";\r\nimport { API } from \"../../Config\";\r\nimport swal from \"sweetalert\";\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nconst EditTimeCard = (props) => {\r\n  const types = [\r\n    { label: \"RHR\", value: \"RHR\" },\r\n    { label: \"SIC\", value: \"SIC\" },\r\n    { label: \"VAC\", value: \"VAC\" },\r\n    { label: \"OTS\", value: \"OTS\" },\r\n    { label: \"OTO\", value: \"OTO\" },\r\n    { label: \"HOL\", value: \"HOL\" },\r\n    { label: \"WFH\", value: \"WFH\" },\r\n    { label: \"COM\", value: \"COM\" },\r\n    { label: \"PB1\", value: \"PB1\" },\r\n    { label: \"PB2\", value: \"PB2\" },\r\n  ];\r\n  const worktypes = useSelector((state) => {\r\n    let temp = [];\r\n    Array.from(state.worktypes.data).forEach((item, idx) => {\r\n      temp.push({\r\n        label: item.title,\r\n        value: item.title,\r\n        description: item.description,\r\n        data: item,\r\n      });\r\n    });\r\n    return temp;\r\n  });\r\n  const edit_time_card = (values, { setSubmitting }) => {\r\n    console.log(values);\r\n    API.put(\"wbs/time-card/update/\" + props.data.id + \"/\", values)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.status == 200 && res.statusText == \"OK\") {\r\n          formEditTimeCard.resetForm();\r\n          props.onClose();\r\n          swal(\"Well Done!\", \"Your timecard is updated\", \"success\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const formEditTimeCard = useFormik({\r\n    initialValues: {\r\n      actual_work_done: \"\",\r\n      time_type: \"\",\r\n      hours_today: \"\",\r\n      date_updated: \"\",\r\n    },\r\n    onSubmit: edit_time_card,\r\n  });\r\n  const handleSelectChange = (value, actionMeta) => {\r\n    console.log(value);\r\n    formEditTimeCard.setFieldValue(\"time_type\", value.value);\r\n  };\r\n  useEffect(() => {\r\n    if (props.data) {\r\n      formEditTimeCard.setValues({\r\n        actual_work_done: props.data.actual_work_done,\r\n        time_type: props.data.time_type,\r\n        hours_today: props.data.hours_today,\r\n        date_updated: props.data.date_updated,\r\n      });\r\n    }\r\n  }, [props.data]);\r\n\r\n  const oncancel = () => {\r\n    formEditTimeCard.setValues({\r\n      actual_work_done: props.data.actual_work_done,\r\n      time_type: props.data.time_type,\r\n      hours_today: props.data.hours_today,\r\n      date_updated: props.data.date_updated,\r\n    });\r\n  };\r\n\r\n  // Calculate the start date as 7 days before today\r\nconst startDate = moment().subtract(7, 'days');\r\n\r\n// Calculate the end date as tomorrow\r\nconst endDate = moment().add(1, 'days');\r\n\r\n// Format the dates in \"YYYY-MM-DD\" format\r\nconst formattedStartDate = startDate.format(\"YYYY-MM-DD\");\r\nconst formattedEndDate = endDate.format(\"YYYY-MM-DD\");\r\n\r\n  return (\r\n    <>\r\n      <CModal\r\n        //show={showModal}\r\n        show={props.show}\r\n        onClose={() => props.onClose()}\r\n        toggle={props.toggle}\r\n        size=\"lg\"\r\n      >\r\n        <CModalHeader closeButton>\r\n          {\" \"}\r\n          Project Name (Work Package) :{\" \"}\r\n          {props.data?.project != null\r\n            ? props.data.project.sub_task +\r\n              \"(\" +\r\n              props.data?.project.work_package_number +\r\n              \")\"\r\n            : \"N/A\"}\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CRow>\r\n            <CCol className=\"col-md-12 mb-3\">\r\n              {/*Type : {props.data?.time_type}*/}\r\n              <CLabel\r\n                className=\"custom-label-5\"\r\n                htmlFor=\"assigneeSelectPM\"\r\n                loseMenuOnSelect={true}\r\n                isClearable={false}\r\n                isMulti={false}\r\n              >\r\n                Type :\r\n              </CLabel>\r\n              <Select\r\n                options={worktypes}\r\n                onChange={handleSelectChange}\r\n                defaultValue={types.filter(\r\n                  (t) => t.value === props.data?.time_type\r\n                )}\r\n              />\r\n            </CCol>\r\n            <CCol className=\"col-md-12 mb-3\">\r\n              <CLabel class=\"form-label\"> Hour(s):</CLabel>\r\n\r\n              <CInput\r\n                className=\"custom-forminput-5\"\r\n                type=\"number\"\r\n                aria-label=\"default input example\"\r\n                id=\"hours_today\"\r\n                name=\"hours_today\"\r\n                placeholder=\"0.00\"\r\n                min=\"0.00\"\r\n                value={formEditTimeCard.values.hours_today}\r\n                onChange={formEditTimeCard.handleChange}\r\n              ></CInput>\r\n              {/*{sethour(props.data?.sethour)}*/}\r\n            </CCol>\r\n            <CCol className=\"col-md-12 mb-3\">\r\n              <CLabel class=\"form-label\"> Date:</CLabel>\r\n\r\n              <CInput\r\n                className=\"custom-forminput-5\"\r\n                type=\"date\"\r\n                aria-label=\"default input example\"\r\n                id=\"date_updated\"\r\n                name=\"date_updated\"\r\n                min={formattedStartDate}\r\n                max={formattedEndDate}\r\n                value={formEditTimeCard.values.date_updated}\r\n                onChange={formEditTimeCard.handleChange}\r\n              ></CInput>\r\n              {/*{sethour(props.data?.sethour)}*/}\r\n            </CCol>\r\n            <CCol className=\"col-md-12 mb-3\">\r\n              <CLabel class=\"form-label\"> Task Title : </CLabel>\r\n              <CInput\r\n                value={\r\n                  props.data?.project != null\r\n                    ? props.data.project.task_title\r\n                    : \"N/A\"\r\n                }\r\n                disabled\r\n              ></CInput>\r\n            </CCol>\r\n            <CCol className=\"col-md-12 mb-3\">\r\n              <CLabel class=\"form-label\">Actual Work :</CLabel>\r\n              <CTextarea\r\n                class=\"form-control\"\r\n                id=\"actual_work_done\"\r\n                name=\"actual_work_done\"\r\n                rows=\"3\"\r\n                value={formEditTimeCard.values.actual_work_done}\r\n                onChange={formEditTimeCard.handleChange}\r\n              >\r\n                {\" \"}\r\n              </CTextarea>\r\n            </CCol>\r\n          </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" onClick={formEditTimeCard.handleSubmit}>\r\n            save\r\n          </CButton>{\" \"}\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              props.onClose();\r\n              oncancel();\r\n            }}\r\n          >\r\n            Cancel\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTimeCard;\r\n","import {\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CLabel,\r\n  CButton,\r\n  CDataTable,\r\n  CBadge,\r\n} from \"@coreui/react\";\r\nimport orderBy from \"lodash/orderBy\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./timeCards.css\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FILE_API, USER_ID } from \"../../Config\";\r\nimport { API } from \"../../Config\";\r\nimport { has_permission } from \"../../helper\";\r\nimport { useFormik } from \"formik\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport moment from \"moment\";\r\nimport swal from \"sweetalert\";\r\nimport AddTimecardItms from \"./addTimecardItem\";\r\nimport EditTimeCard from \"./Edit\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst TimeCards = () => {\r\n  const profile_details = useSelector((state) => state.profile.data);\r\n  const [selectedAssignee, setSelectedAssignee] = useState();\r\n  const dispatch = useDispatch();\r\n  const [update, setUpdate] = useState(0);\r\n  const [usersData, setUsersData] = useState([]);\r\n  const [pdfData, setPdfData] = useState([]);\r\n  const [pdfTitle, setPdfTitle] = useState();\r\n  let location = useLocation();\r\n  const [assigneeList, setAssigneeList] = useState([]);\r\n  const [non_submitted_total_tc, setNonSubmittedTotalTC] = useState(0);\r\n  // const [selectedEmployee, setSelectedEmployee] = useState(initialState)\r\n  {\r\n    /**fetch all assignees for PM */\r\n  }\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [totalHrs, setTotalHrs] = useState(0);\r\n  const [modalData, setModalData] = useState(\"\");\r\n  const [row, setRow] = useState();\r\n\r\n  const getTimeCards = (values) => {\r\n    console.log(\"working\");\r\n    setStartDate(values.startDate);\r\n    setEndDate(values.todate);\r\n    var temp_hrs = 0;\r\n    // const section = document.querySelector(\"#tableRef\");\r\n    // section.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n    if (\r\n      has_permission(\"projects.add_projects\") &&\r\n      has_permission(\"wbs.change_timecard\") &&\r\n      has_permission(\"wbs.add_timecard\")\r\n    ) {\r\n      // console.log('values from timecards', values)\r\n      API.get(\"wbs/user/time-card/list/\" + values.assigneeSelectPM + \"/\").then(\r\n        (res) => {\r\n          console.log(res.data.data);\r\n          let temp = [];\r\n          Array.from(res.data.data).forEach((item, idx) => {\r\n            temp.push({ data: item });\r\n          });\r\n\r\n          let filteredData = [];\r\n          filteredData = temp.filter(\r\n            (p) =>\r\n              p.data.date_updated >= values.startDate &&\r\n              p.data.date_updated <= values.todate\r\n          );\r\n          // console.log('timecard for id', filteredData)\r\n          setPdfData(filteredData);\r\n          var tableData = [];\r\n          for (let index = 0; index < filteredData.length; index++) {\r\n            const element = filteredData[index];\r\n            temp_hrs += parseFloat(element.data.hours_today);\r\n            tableData.push({\r\n              WP: element.data.project?.work_package_number\r\n                ? element.data.project.work_package_number\r\n                : \"-\",\r\n              \"Project Name\": element.data.project?.sub_task\r\n                ? element.data.project.sub_task\r\n                : \"-\",\r\n              \"Task Title\": element.data.project.task_title\r\n                ? element.data.project.task_title\r\n                : \"-\",\r\n              Description: element.data.actual_work_done\r\n                ? element.data.actual_work_done\r\n                : \"-\",\r\n              \"Hour(s)\": element.data.hours_today,\r\n              Type: element.data.time_type,\r\n              \"Work Date\": element.data.date_updated,\r\n              data: element.data,\r\n            });\r\n          }\r\n          setTotalHrs(temp_hrs);\r\n          setUsersData(tableData);\r\n        }\r\n      );\r\n    } else {\r\n      // console.log('values from timecards', values)\r\n      API.get(\"wbs/user/time-card/list/\" + values.assigneeSelect + \"/\").then(\r\n        (res) => {\r\n          let temp = [];\r\n          setPdfTitle(\r\n            profile_details.first_name + \" \" + profile_details.last_name\r\n          );\r\n          Array.from(res.data.data).forEach((item, idx) => {\r\n            // temp.push({data:item.date_updated >=values.startDate && item.date_updated <= values.todate})\r\n            temp.push({ data: item });\r\n          });\r\n\r\n          let filteredData = [];\r\n          filteredData = temp.filter(\r\n            (p) =>\r\n              p.data.date_updated >= values.startDate &&\r\n              p.data.date_updated <= values.todate\r\n          );\r\n          console.log(\"timecard for id\", filteredData);\r\n\r\n          setPdfData(filteredData);\r\n          setModalData(filteredData);\r\n\r\n          var tableData = [];\r\n          for (let index = 0; index < filteredData.length; index++) {\r\n            const element = filteredData[index];\r\n            temp_hrs += parseFloat(element.data.hours_today);\r\n            tableData.push({\r\n              WP: element.data.project\r\n                ? element.data.project.work_package_number\r\n                : \"-\",\r\n              \"Project Name\":\r\n                element.data.project != null\r\n                  ? element.data.project?.sub_task\r\n                  : \"-\",\r\n              \"Task Title\":\r\n                element.data.project != null\r\n                  ? element.data.project.task_title\r\n                  : \"-\",\r\n              Description: element.data.actual_work_done\r\n                ? element.data.actual_work_done\r\n                : \"\",\r\n              \"Hour(s)\": element.data.hours_today,\r\n              Type: element.data.time_type,\r\n              \"Work Date\": element.data.date_updated,\r\n              data: element.data,\r\n            });\r\n            //console.log(\"table\", tableData);\r\n          }\r\n          console.log(\"table\", tableData);\r\n          setUsersData(tableData);\r\n          setTotalHrs(temp_hrs);\r\n        }\r\n      );\r\n    }\r\n  };\r\n  const get_assignee_tc = (assignee) => {\r\n    console.log(\"get_tc\", assignee);\r\n\r\n    const { start, end } = dateRange();\r\n    setPdfTitle(assignee.first_name + \" \" + assignee.last_name);\r\n    API.get(\"wbs/user/time-card/list/\" + assignee.id + \"/\").then((res) => {\r\n      console.log(\"assignee tc\", res.data);\r\n      // setPdfTitle(\r\n      //   profile_details.first_name + \" \" + profile_details.last_name\r\n      // );\r\n      let temp = [];\r\n      Array.from(res.data.data).forEach((item, idx) => {\r\n        console.log(\"res\", res.data.data)\r\n        temp.push({ data: item });\r\n      });\r\n      let filteredData = temp;\r\n      filteredData = temp.filter(\r\n        (p) => p.data.date_updated >= start && p.data.date_updated <= end\r\n      );\r\n      console.log(\"filtered\", filteredData);\r\n      setPdfData(filteredData);\r\n      var tableData = [];\r\n      let hours_total = 0;\r\n      let total_not_submitted = 0;\r\n      for (let index = 0; index < filteredData.length; index++) {\r\n        if (filteredData[index].data.submitted == false) {\r\n          total_not_submitted++;\r\n        }\r\n        const element = filteredData[index];\r\n        \r\n        hours_total += parseFloat(element.data.hours_today);\r\n        console.log(\"ele\", element.data)\r\n        tableData.push({\r\n          WP: element.data.project\r\n            ? element.data.project.work_package_number\r\n            : \"-\",\r\n          \"Project Name\":\r\n            element.data.project != null ? element.data.project?.sub_task : \"-\",\r\n          \"Task Title\":\r\n            element.data.project != null\r\n              ? element.data.project?.task_title\r\n              : \"-\",\r\n          Description: element.data?.actual_work_done\r\n            ? element.data?.actual_work_done\r\n            : \"-\",\r\n          \"Hour(s)\": element.data.hours_today,\r\n          Type: element.data.time_type,\r\n          \"Work Date\": element.data.date_updated,\r\n          data: element.data,\r\n          id: element.data.id,\r\n        });\r\n      }\r\n      setTotalHrs(hours_total);\r\n      setUsersData(orderBy(tableData, \"id\", \"desc\"));\r\n      setNonSubmittedTotalTC(total_not_submitted);\r\n      console.log(\"selected\", selectedAssignee);\r\n    });\r\n  };\r\n  function capitalize(string) {\r\n    if (string != undefined) {\r\n      return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  const [modaladdItem, setmodalAddItem] = useState(false);\r\n  const [show_edit_modal, setShowEditModal] = useState(false);\r\n  const handleAssigneeChange = (option) => {\r\n    setSelectedAssignee(option);\r\n    setPdfTitle(option.label);\r\n    get_assignee_tc(option.data);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"executing effect\");\r\n    window.scrollTo(0, 0);\r\n    const { start, end } = dateRange();\r\n\r\n    // setSelectedAssignee({label:profile_details.first_name+' '+profile_details.last_name,value:profile_details.id,data:profile_details})\r\n    setTotalHrs(0);\r\n    if (\r\n      has_permission(\"projects.change_projectassignee\") ||\r\n      has_permission(\"projects.add_projectassignee\")\r\n    ) {\r\n      API.get(\r\n        \"project/assignees/all/\" + sessionStorage.getItem(USER_ID) + \"/\"\r\n      ).then((res) => {\r\n        let temp = [];\r\n        Array.from(res.data.data).forEach((item, idx) => {\r\n          temp.push({\r\n            data: item,\r\n            value: item.id,\r\n            label:\r\n              capitalize(item.first_name) + \" \" + capitalize(item.last_name),\r\n          });\r\n        });\r\n        if (!temp.find((item) => item.value == res.data.user.id)) {\r\n          temp.unshift({\r\n            data: res.data.user,\r\n            value: res.data.user.id,\r\n            label:\r\n              capitalize(res.data.user.first_name) +\r\n              \" \" +\r\n              capitalize(res.data.user.last_name),\r\n          });\r\n        }\r\n        setAssigneeList(orderBy(temp, \"label\"));\r\n        if (selectedAssignee == null || selectedAssignee == undefined) {\r\n          if (location.state?.assignee && temp.length > 0) {\r\n            let assignee_id = location.state.assignee;\r\n            setSelectedAssignee(temp.find((item) => item.value == assignee_id));\r\n            get_assignee_tc(\r\n              temp.find((item) => item.value == assignee_id).data\r\n            );\r\n          } else {\r\n            setSelectedAssignee({\r\n              data: res.data.user,\r\n              value: res.data.user.id,\r\n              label:\r\n                capitalize(res.data.user.first_name) +\r\n                \" \" +\r\n                capitalize(res.data.user.last_name),\r\n            });\r\n            get_assignee_tc(res.data.user);\r\n          }\r\n          setPdfTitle(\r\n            capitalize(res.data.user.first_name) +\r\n              \" \" +\r\n              capitalize(res.data.user.last_name)\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      if (selectedAssignee == null || selectedAssignee == undefined) {\r\n        setSelectedAssignee({\r\n          data: profile_details,\r\n          value: profile_details.id,\r\n          label:\r\n            capitalize(profile_details.first_name) +\r\n            \" \" +\r\n            capitalize(profile_details.last_name),\r\n        });\r\n        setPdfTitle(\r\n          capitalize(profile_details.first_name) +\r\n            \" \" +\r\n            capitalize(profile_details.last_name)\r\n        );\r\n        get_assignee_tc(profile_details);\r\n      }\r\n    }\r\n  }, [update]);\r\n  useEffect(() => {\r\n    if (location.state?.assignee && assigneeList.length > 0) {\r\n      let assignee_id = location.state.assignee;\r\n      console.log(\"predefined id\", assignee_id);\r\n      console.log(\r\n        \"found user\",\r\n        assigneeList.find((item) => item.value == assignee_id)\r\n      );\r\n      // setSelectedAssignee(assigneeList.find(item=>item.value==assignee_id))\r\n      setSelectedAssignee(\r\n        assigneeList.find((item) => item.value == assignee_id)\r\n      );\r\n      setPdfTitle(assigneeList.find((item) => item.value == assignee_id).label);\r\n      get_assignee_tc(\r\n        assigneeList.find((item) => item.value == assignee_id).data\r\n      );\r\n      console.log(\r\n        assigneeList.find((item) => item.value == assignee_id).data,\r\n        \"from useeffect\"\r\n      );\r\n    }\r\n  }, [assigneeList]);\r\n  const validateEditForm = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.startDate)\r\n      errors.startDate = \"Start Date selection is required\";\r\n    if (!values.todate) errors.todate = \"To date selection is required\";\r\n    return errors;\r\n  };\r\n\r\n  const editForm = useFormik({\r\n    initialValues: {\r\n      assigneeSelect: sessionStorage.getItem(USER_ID),\r\n      assigneeSelectPM: sessionStorage.getItem(USER_ID),\r\n      startDate: \"\",\r\n      todate: \"\",\r\n    },\r\n    validateOnBlur: true,\r\n    validateOnChange: true,\r\n    validate: validateEditForm,\r\n    onSubmit: getTimeCards,\r\n  });\r\n\r\n  const colourStyles = {\r\n    // control: (styles, state) => ({ ...styles,height:\"35px\", fontSize: '14px !important', lineHeight: '1.42857', borderRadius: \"8px\",borderRadius:\".25rem\",color:\"rgb(133,133,133)\",border:state.isFocused ? '2px solid #0065ff' :'inherit'}),\r\n    option: (provided, state) => ({ ...provided, fontSize: \"14px !important\" }),\r\n  };\r\n  {\r\n    /**export fetched tabledata to excel */\r\n  }\r\n  const fileType =\r\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n\r\n  const exportPDF = () => {\r\n    const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    const marginLeft = 40;\r\n    const doc = new jsPDF(orientation, unit, size);\r\n\r\n    doc.setFontSize(15);\r\n\r\n    const title =\r\n      \"Timecard of\" +\r\n      \" \" +\r\n      selectedAssignee.data.first_name +\r\n      \" \" +\r\n      selectedAssignee.data.last_name;\r\n    const headers = [\r\n      [\r\n        \"WP\",\r\n        \"Project Name\",\r\n        \"Task Title\",\r\n        \"Description\",\r\n        \"Hour(s)\",\r\n        \"Type\",\r\n        \"Work Date\",\r\n      ],\r\n    ];\r\n    const uData = pdfData.map((elt, idx) => [\r\n      elt.data.project.work_package_number,\r\n      elt.data.project.sub_task,\r\n      elt.data.project.task_title,\r\n      elt.data.actual_work_done,\r\n      elt.data.hours_today,\r\n      elt.data.time_type,\r\n      elt.data.date_updated,\r\n    ]);\r\n    let content = {\r\n      startY: 145,\r\n      head: headers,\r\n      body: uData,\r\n    };\r\n\r\n    let day = new Date();\r\n    let time = day.toLocaleString(\"en-US\", {\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n      hour12: true,\r\n    });\r\n    day = moment(day).format(\"DD/MM/YY\");\r\n    const edate = moment(endDate).format(\"DD/MM/YYYY\");\r\n    doc.setFontSize(17);\r\n    doc.text(170, 50, \"Datasoft Manufacturing & Assembly\");\r\n    doc.setFontSize(13);\r\n    doc.text(245, 75, \"Gulshan Branch\");\r\n    doc.setFontSize(11);\r\n    doc.text(42, 105, \"Employee Time Card\");\r\n    doc.text(410, 105, \"Week-Ending: \" + edate); //+ edate)\r\n    doc.text(\r\n      42,\r\n      125,\r\n      \"Name: \" +\r\n        selectedAssignee.data.first_name +\r\n        \" \" +\r\n        selectedAssignee.data.last_name\r\n    ); //+ name)\r\n\r\n    let date = new Date();\r\n    doc.autoTable(content);\r\n    doc.text(\r\n      42,\r\n      doc.lastAutoTable.finalY + 25,\r\n      \"From \" + startDate + \" to \" + endDate\r\n    );\r\n    doc.text(\r\n      250,\r\n      doc.lastAutoTable.finalY + 25,\r\n      \" Total Hours \" + Number(totalHrs).toFixed(2)\r\n    );\r\n    doc.text(\r\n      396,\r\n      doc.lastAutoTable.finalY + 25,\r\n      \"Submitted on : \" + time + \"  \" + day\r\n    );\r\n    return doc;\r\n  };\r\n\r\n  const showModal = (tableItem) => {\r\n    setRow(tableItem.data);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const onAddItem = () => {\r\n    setmodalAddItem(false);\r\n    get_assignee_tc(selectedAssignee.data);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once submitted, you will not be able to revert!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        let temp = \"\";\r\n        for (let i = 0; i < usersData.length; i++) {\r\n          //console.log(\"data\", usersData[i]);\r\n          // temp.push(usersData[i].data.id)\r\n          if (i == usersData.length - 1) {\r\n            temp += usersData[i].data.id;\r\n          } else {\r\n            temp += usersData[i].data.id + \",\";\r\n          }\r\n        }\r\n\r\n        let doc = exportPDF();\r\n        let formData = new FormData();\r\n        formData.append(\"employee\", selectedAssignee.value);\r\n        formData.append(\"time_cards\", temp);\r\n        formData.append(\"week_start\", startDate);\r\n        formData.append(\"week_end\", endDate);\r\n        formData.append(\"pdf_file\", doc.output(\"datauristring\"));\r\n\r\n        FILE_API.post(\"wbs/time-card/submit/\", formData).then((res) => {\r\n          console.log(res.data);\r\n          let day = new Date();\r\n          const weekday = [\r\n            \"Sunday\",\r\n            \"Monday\",\r\n            \"Tuesday\",\r\n            \"Wednesday\",\r\n            \"Thursday\",\r\n            \"Friday\",\r\n            \"Saturday\",\r\n          ];\r\n          let days = weekday[day.getDay()];\r\n          let todayDate = moment(day).format(\"DD-MM-YYYY\");\r\n\r\n          // dispatch(fetchAllTimecardsPmThunk(selectedAssignee.value))\r\n          get_assignee_tc(selectedAssignee.data);\r\n          doc.save(\r\n            selectedAssignee.data.first_name +\r\n              \"_\" +\r\n              selectedAssignee.data.last_name +\r\n              \"_\" +\r\n              days +\r\n              \"_\" +\r\n              todayDate +\r\n              \".pdf\"\r\n          );\r\n          window.open(doc.output(\"bloburl\"), \"_blank\");\r\n          swal(\r\n            \"Submitted\",\r\n            \"Your selected time cards are submitted!\",\r\n            \"success\"\r\n          );\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const dateRange = () => {\r\n    var sdate = new Date();\r\n    var edate = new Date();\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      if (sdate.getDay() === 0) {\r\n        console.log(\"start\", sdate);\r\n        break;\r\n      } else {\r\n        sdate = moment(sdate).subtract(1, \"day\").toDate();\r\n      }\r\n    }\r\n    console.log(\"end date\", edate);\r\n\r\n    setStartDate(moment(sdate).format(\"YYYY-MM-DD\"));\r\n    setEndDate(nextSatDay());\r\n    // editForm.setValues({\r\n    //   assigneeSelect: sessionStorage.getItem(USER_ID),\r\n    //   assigneeSelectPM: sessionStorage.getItem(USER_ID),\r\n    //   startDate: moment(sdate).format('YYYY-MM-DD'),\r\n    //   todate:  moment(edate).format('YYYY-MM-DD'),\r\n    // })\r\n    return {\r\n      start: moment(sdate).format(\"YYYY-MM-DD\"),\r\n      // end: moment(edate).format(\"YYYY-MM-DD\"),\r\n      end: nextSatDay(),\r\n    };\r\n  };\r\n  const nextSatDay = () => {\r\n    var satday = new Date();\r\n    for (let i = 0; i < 7; i++) {\r\n      if (satday.getDay() === 6) {\r\n        console.log(\"sat\", satday);\r\n        break;\r\n      } else {\r\n        satday = moment(satday).add(1, \"day\").toDate();\r\n      }\r\n    }\r\n    satday = moment(satday).format(\"YYYY-MM-DD\");\r\n    console.log(\"satday\", satday)\r\n    return satday;\r\n  };\r\n\r\n  const show_add_item_btn = () => {\r\n    if (editForm.values.assigneeSelectPM == sessionStorage.getItem(USER_ID)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {row != null && row != undefined && (\r\n        <EditTimeCard\r\n          data={row}\r\n          show={show_edit_modal}\r\n          onClose={() => {\r\n            setShowEditModal(false);\r\n            get_assignee_tc(selectedAssignee.data);\r\n          }}\r\n        />\r\n      )}\r\n      {selectedAssignee && (\r\n        <AddTimecardItms\r\n          // toggle={toggleModal}\r\n          employee={selectedAssignee.value}\r\n          show={modaladdItem}\r\n          onClose={onAddItem}\r\n          onAdd={editForm.handleSubmit}\r\n        ></AddTimecardItms>\r\n      )}\r\n      <CContainer>\r\n        <CRow className=\"justify-content-between\">\r\n          <CCol>\r\n            <h3 className=\"timecards-page-header mb-3\">\r\n              Actual Hours of this week\r\n            </h3>\r\n          </CCol>\r\n        </CRow>\r\n        <CForm>\r\n          <CRow>\r\n            {/**assignees */}\r\n            <CCol xl=\"3\" lg=\"3\" md=\"6\">\r\n              {has_permission(\"projects.add_projects\") && (\r\n                <div>\r\n                  <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelectPM\">\r\n                    Select Employee\r\n                  </CLabel>\r\n                  <Select\r\n                    closeMenuOnSelect={true}\r\n                    aria-labelledby=\"assigneeSelectPM\"\r\n                    id=\"assigneeSelectPM\"\r\n                    minHeight=\"35px\"\r\n                    placeholder={\r\n                      capitalize(profile_details.first_name) +\r\n                      \" \" +\r\n                      capitalize(profile_details.last_name)\r\n                    }\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                    onChange={handleAssigneeChange}\r\n                    classNamePrefix=\"custom-forminput-6\"\r\n                    options={assigneeList}\r\n                    styles={colourStyles}\r\n                    value={selectedAssignee}\r\n                  />\r\n                </div>\r\n              )}\r\n            </CCol>\r\n            <CRow className=\"mt-4\">\r\n              <CCol>\r\n                {/* <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelect\">\r\n                  Company :{\" \"}\r\n                  {\r\n                    selectedAssignee?.data?.slc_details?.slc?.department\r\n                      ?.company?.name\r\n                  }\r\n                </CLabel> */}\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol md=\"4\">\r\n                <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelect\">\r\n                  Employee Name :{\" \"}\r\n                  {capitalize(selectedAssignee?.data?.first_name) +\r\n                    \" \" +\r\n                    capitalize(selectedAssignee?.data?.last_name)}\r\n                </CLabel>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol>\r\n                <CLabel className=\"custom-label-5\" htmlFor=\"assigneeSelect\">\r\n                  Weekending :{\" \"}\r\n                  {moment(nextSatDay()).format(\"dddd, DD MMMM YYYY\")}\r\n                </CLabel>\r\n              </CCol>\r\n            </CRow>\r\n            {show_add_item_btn() == true && (\r\n              <div className=\"format-buttons mt-3 mb-3\">\r\n                <CButton\r\n                  className=\"file-format-download\"\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    setmodalAddItem(true);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  + Add Item\r\n                </CButton>\r\n              </div>\r\n            )}\r\n\r\n            {/**table for displaying all the entries */}\r\n            <CCol md=\"12\">\r\n              <div className=\"\">\r\n                <CDataTable\r\n                  items={usersData}\r\n                  fields={[\r\n                    {\r\n                      key: \"WP\",\r\n                      _style: { width: \"5%\" },\r\n                      _classes: \"font-weight-bold\",\r\n                    },\r\n                    \"Project Name\",\r\n                    \"Task Title\",\r\n                    \"Description\",\r\n                    \"Hour(s)\",\r\n                    \"Type\",\r\n                    \"Work Date\",\r\n                    \"Action\",\r\n                  ]}\r\n                  primary\r\n                  hover\r\n                  striped\r\n                  bordered\r\n                  sorter\r\n                  //columnFilter\r\n                  size=\"sm\"\r\n                  itemsPerPage={20}\r\n                  pagination\r\n                  scopedSlots={{\r\n                    Action: (item) => (\r\n                      <td>\r\n                        {item.data.submitted == false ? (\r\n                          <CBadge>\r\n                            <CButton\r\n                              onClick={() => {\r\n                                showModal(item);\r\n                              }}\r\n                              size=\"sm\"\r\n                              type=\"button\"\r\n                              color=\"primary\"\r\n                            >\r\n                              Edit\r\n                            </CButton>\r\n                          </CBadge>\r\n                        ) : (\r\n                          <CBadge>\r\n                            <CButton\r\n                              size=\"sm\"\r\n                              type=\"button\"\r\n                              color=\"secondary\"\r\n                              disabled\r\n                            >\r\n                              Edit\r\n                            </CButton>\r\n                          </CBadge>\r\n                        )}\r\n                      </td>\r\n                    ),\r\n                  }}\r\n                />\r\n                {totalHrs != 0 && (\r\n                  <div class=\"alert alert-info\" role=\"alert\">\r\n                    <CRow>\r\n                      <CCol md=\"5\"></CCol>\r\n                      <CCol md=\"3\">\r\n                        {\r\n                          <small>\r\n                            {\"     \"}\r\n                            From <b>\r\n                              {moment(startDate).format(\"DD-MMM-YY\")}\r\n                            </b>{\" \"}\r\n                            to <b>{moment(endDate).format(\"DD-MMM-YY\")}</b>\r\n                          </small>\r\n                        }\r\n                      </CCol>\r\n                      <CCol md=\"4\">\r\n                        {\r\n                          <small>\r\n                            {\"   \"}\r\n                            Total{\" \"}\r\n                            <b>\r\n                              {Number(totalHrs).toFixed(2)}{\" \"}\r\n                              {Number(totalHrs).toFixed(2) > 1\r\n                                ? \"hours\"\r\n                                : \"hour\"}\r\n                              &nbsp;\r\n                            </b>\r\n                          </small>\r\n                        }\r\n                      </CCol>\r\n                    </CRow>\r\n                  </div>\r\n                )}\r\n                <CRow className=\"justify-content-end mb-5\">\r\n                  <CCol md=\"1\" className=\"justify-content-end\">\r\n                    <CButton\r\n                      className=\"file-format-download\"\r\n                      type=\"button\"\r\n                      onClick={onSubmit}\r\n                      style={{ backgroundColor: \"#e55353\" }}\r\n                      disabled={non_submitted_total_tc == 0}\r\n                    >\r\n                      Submit\r\n                    </CButton>\r\n                    {/* <CButton className=\"file-format-download\">Print</CButton> */}\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </CCol>\r\n          </CRow>\r\n        </CForm>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\nexport default TimeCards;\r\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n"],"sourceRoot":""}