{"version":3,"sources":["pages/evms-details/evmsDetails.js"],"names":["EvmsDetails","data","line","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Date","prototype","addDays","days","date","this","valueOf","setDate","getDate","useEffect","startDate","stopDate","currentDate","console","log","tem_data","toISOString","slice","push","getDates","_jsxs","_Fragment","children","_jsx","className","CButton","CChart","type","options","tooltips","enabled","maintainAspectRatio"],"mappings":"oHAAA,sDA0EeA,UArEK,WAChB,IAAMC,EAAO,GACPC,EAAO,CACTC,OAAQ,GACRC,SAAU,CACN,CACIC,MAAO,mBACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,qBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBrB,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAKjDsB,KAAKC,UAAUC,QAAU,SAAUC,GAC/B,IAAIC,EAAO,IAAIJ,KAAKK,KAAKC,WAEzB,OADAF,EAAKG,QAAQH,EAAKI,UAAYL,GACvBC,CACX,EAcAK,qBAAU,YAZV,SAAkBC,EAAWC,GACzB,IAAIC,EAAcF,EAElB,IADAG,QAAQC,IAAIF,GACLA,GAAeD,GAAU,CAC5B,IAAII,EAAW,IAAIf,KAAKY,GAAaI,cAAcC,MAAM,EAAG,IAC5DtC,EAAKC,OAAOsC,KAAKH,GACjBF,QAAQC,IAAIpC,GACZkC,EAAcA,EAAYV,QAAQ,EACtC,CAEJ,CAGIiB,CAAS,IAAInB,MAAQ,IAAIA,MAAOE,QAAQ,GAC5C,IAUA,OACIkB,eAAAC,WAAA,CAAAC,SAAA,CACIC,cAAA,OAAKC,UAAU,OAAMF,SACjBC,cAACE,IAAO,CAACD,UAAU,kBAAiBF,SAAC,kBAEzCC,cAACG,IAAM,CAACC,KAAK,OAAO/C,OAAQD,EAAKC,OAAQC,SAAUF,EAAKE,SAAU+C,QAb1D,CACZC,SAAU,CACNC,SAAS,GAGbC,qBAAqB,OAW7B,C","file":"static/js/44.70c56c93.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { CContainer, CRow, CCol, CCard, CCardHeader, CCardBody, CForm, CLabel, CInput, CButton, CSelect, CTextarea, CAlert } from '@coreui/react';\r\n// import { LineChart, Line, CartesianGrid, XAxis, YAxis, ResponsiveContainer } from 'recharts';\r\nimport { CChart } from '@coreui/react-chartjs';\r\nimport \"./evmsDetails.css\";\r\nconst EvmsDetails = () => {\r\n    const data = [];\r\n    const line = {\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: 'My First dataset',\r\n                fill: false,\r\n                lineTension: 0.5,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 1,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: [100, 300, 250, 300, 450, 550, 550],\r\n            },\r\n        ],\r\n    };\r\n\r\n    Date.prototype.addDays = function (days) {\r\n        var date = new Date(this.valueOf());\r\n        date.setDate(date.getDate() + days);\r\n        return date;\r\n    }\r\n\r\n    function getDates(startDate, stopDate) {\r\n        var currentDate = startDate;\r\n        console.log(currentDate)\r\n        while (currentDate <= stopDate) {\r\n            var tem_data = new Date(currentDate).toISOString().slice(0, 10)\r\n            line.labels.push(tem_data);\r\n            console.log(data)\r\n            currentDate = currentDate.addDays(1);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDates(new Date(), new Date().addDays(7));\r\n    });\r\n\r\n    const options = {\r\n        tooltips: {\r\n            enabled: false,\r\n            //   custom: customTooltips\r\n        },\r\n        maintainAspectRatio: false\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mb-3\">\r\n                <CButton className=\"create-evms-btn\">Create EVMS</CButton>\r\n            </div>\r\n            <CChart type=\"line\" labels={line.labels} datasets={line.datasets} options={options} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EvmsDetails;\r\n"],"sourceRoot":""}